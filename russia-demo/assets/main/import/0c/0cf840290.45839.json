[1,["20g1ukYUVPvKWKBRznAKo+@f9941","54TknWPwVPqJqeCR+Y/Czo@f9941","95EkngnxZFbYuFpsqVTaFr@f9941","e2uRISfu5MxLMoT+f2TEdu@f9941","11vcSwZKhOt6Knn7niM+l3@f9941","1brw/JvvpFnIvdrxpFCgMZ","bdG8q6vX1KcbFDmXyII4Pk@f9941","15jn5SMiBM15aUcT4OboJ4@f9941","11vcSwZKhOt6Knn7niM+l3@6c48a","15jn5SMiBM15aUcT4OboJ4@6c48a","20g1ukYUVPvKWKBRznAKo+@6c48a","31pGzDhFRERJFWOg4nXhf1@ce720","31pGzDhFRERJFWOg4nXhf1@d7a58","31pGzDhFRERJFWOg4nXhf1@9d312","bfUSZCSHBCco04aUvCTFqY","31pGzDhFRERJFWOg4nXhf1@fc459","a8ZV1FuXBNt4ygFnl+i5My","54TknWPwVPqJqeCR+Y/Czo@6c48a","95EkngnxZFbYuFpsqVTaFr@6c48a","e1NWmYqdpA8p/+iZjem8xN@6c48a","bdG8q6vX1KcbFDmXyII4Pk@6c48a","80KRdv9rlNc4UUKASc5eBu","e2uRISfu5MxLMoT+f2TEdu@6c48a"],["node","_spriteFrame","_normalSprite","_textureSource","_target","_hoverSprite","_pressedSprite","_disabledSprite","_parent","mainTexture","_effectAsset","root","data","_mesh","_cameraComponent","popupAgeGate","viewQRScan","viewMenu","viewARMask","viewMinigame","viewARExperience","viewCameraAccess","scene","textScan","toggleFemale","toggleMale","editboxAge","_skeletonData","asset","value","_backgroundImage"],[["cc.Node",["_name","_layer","_id","_objFlags","_components","_parent","_children","_lpos","_prefab","_lrot","_euler","_lscale"],-1,9,1,2,5,4,5,5,5],"cc.ImageAsset","cc.Texture2D","cc.SpriteFrame",["cc.Sprite",["_sizeMode","_type","node","_spriteFrame","__prefab","_color"],1,1,6,4,5],["cc.Node",["_name","_layer","_active","_parent","_components","_lpos","_children"],0,1,12,5,2],["cc.Label",["_string","_actualFontSize","_fontSize","_overflow","_enableWrapText","_horizontalAlign","node","__prefab","_color"],-3,1,4,5],["cc.UITransform",["node","_contentSize","__prefab","_anchorPoint"],3,1,5,4,5],["cc.Widget",["_alignFlags","_originalWidth","_originalHeight","_top","node","__prefab"],-1,1,4],["cc.Material",["_states","_defines","_name","_props"],0,12],["cc.Node",["_name","_id","_parent","_components","_lpos"],1,1,2,5],["cc.Button",["_transition","_zoomScale","node","__prefab","clickEvents","_normalColor","_target","_normalSprite","_hoverSprite","_pressedSprite","_disabledSprite"],1,1,4,9,5,1,6,6,6,6],["cc.Camera",["_clearFlags","_visibility","_projection","_priority","_orthoHeight","_far","node","_color"],-3,1,5],["RenderQueueDesc",["stages","isTransparent","sortMode"],0],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Mesh",["_native","_dataLength","_hash","_struct"],0,11],["cc.Prefab",[],3],["cc.PrefabInfo",["fileId","root","asset"],2,1,1],["cc.PrefabInfo",["fileId","root","instance","asset"],2,1,4,6],["cc.MeshRenderer",["node","__prefab","_materials","lightmapSettings","_mesh"],3,1,4,3,4,6],["cc.CompPrefabInfo",["fileId"],2],["cc.ModelLightmapSettings",[],3],["cc.SceneAsset",["_name"],2],["cc.Canvas",["node","__prefab","_cameraComponent"],3,1,4,1],["cc.ClickEvent",["_componentId","handler","target"],1,1],["cc.Scene",["_name","_children","_globals"],2,2,4],["cc.SceneGlobals",["ambient","shadows","_skybox","fog"],3,4,4,4,4],["cc.AmbientInfo",[],3],["cc.ShadowsInfo",["_shadowColor"],3,5],["cc.SkyboxInfo",[],3],["cc.FogInfo",[],3],["cc.TargetInfo",["localID"],2],["sp.Skeleton",["_preCacheMode","defaultSkin","defaultAnimation","node","_skeletonData"],0,1,6],["51fd1TmygNPvp0NdY1f8rw0",["node","viewCameraAccess","viewARExperience","viewMinigame","viewARMask","viewMenu","viewQRScan","popupAgeGate"],3,1,1,1,1,1,1,1,1],["cc.DirectionalLight",["node","_staticSettings"],3,1,4],["cc.StaticLightSettings",[],3],["760c8nm/YRFbreTY7hz9+VO",["node"],3,1],["82044MShsVP+aWlVWp1qKm0",["node"],3,1],["82f801uYvhLjJGu+OmdfkFW",["node"],3,1],["6340cEMwIFKj6xOiw4bdfgd",["node","camera","faceMask"],3,1,1,1],["5aba5DZbFBJrosr5qgJdzZh",["node"],3,1],["1a33efXlGJMr5EXS/ugZcP6",["node"],3,1],["8cff2rohshCOZeZrmZHXJEp",["node","nodeContainer"],3,1,1],["cc.EditBox",["_inputMode","_maxLength","node","__prefab","_textLabel","_placeholderLabel"],1,1,4,1,1],["cc.Toggle",["_isChecked","node","__prefab","_normalColor","_target","_checkMark"],2,1,4,5,1,1],["cc.PrefabInstance",["fileId","propertyOverrides"],2,9],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,1],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,8],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,6],["sp.SkeletonData",["_name","_atlasText","textureNames","_skeletonJson","textures"],-1,3],["ForwardPipeline",["_flows"],3,9],["ShadowFlow",["_name","_stages"],2,9],["ShadowStage",["_name"],2],["ForwardFlow",["_name","_priority","_stages"],1,9],["ForwardStage",["_name","renderQueues"],2,9]],[[20,0,2],[7,0,2,1,1],[8,0,1,2,4,4],[7,0,1,1],[4,1,0,2,4,3,3],[6,0,1,2,3,4,6,7,8,6],[0,0,1,5,6,4,7,3],[0,0,3,1,5,4,4],[5,0,2,1,3,6,4,4],[24,0,1,2,3],[0,0,1,5,4,3],[0,0,1,5,4,7,3],[11,0,1,2,3,4,5,6,7,8,9,10,3],[7,0,2,1,3,1],[6,0,1,2,3,6,7,5],[6,0,1,2,6,7,4],[5,0,1,3,6,4,5,3],[47,0,1,2,2],[5,0,1,3,4,5,3],[5,0,2,1,3,4,4],[17,0,1,2,2],[4,0,2,5,3,2],[4,2,4,3,1],[4,0,2,4,5,3,2],[4,0,2,4,2],[11,0,2,3,4,5,6,7,8,9,10,2],[6,0,5,1,2,3,6,7,6],[31,0,2],[44,0,1,2,3,4,5,2],[14,0,1,2,4],[15,0,1,2,3,4],[9,2,0,1,3,4],[9,0,1,3,3],[16,1],[0,0,6,8,2],[0,0,5,4,8,7,9,10,2],[0,0,1,2,6,4,7,4],[0,0,1,6,4,3],[0,0,1,5,4,11,3],[0,0,6,2],[0,0,2,5,6,4,3],[0,0,2,5,4,9,10,3],[0,5,8,1],[5,0,2,1,3,4,5,4],[10,0,1,2,3,3],[10,0,2,3,4,2],[18,0,1,2,3,2],[19,0,1,2,3,4,1],[21,1],[22,0,2],[23,0,1,2,1],[8,0,4,5,2],[8,0,3,1,4,4],[4,2,5,3,1],[25,0,1,2,2],[26,0,1,2,3,1],[27,1],[28,0,1],[29,1],[30,1],[6,0,1,2,3,4,6,7,6],[32,0,1,2,3,4,4],[33,0,1,2,3,4,5,6,7,1],[34,0,1,1],[35,1],[12,0,1,6,3],[12,2,3,4,5,0,1,6,7,7],[36,0,1],[37,0,1],[38,0,1],[39,0,1,2,1],[40,0,1],[41,0,1],[42,0,1,1],[43,0,1,2,3,4,5,3],[45,0,1,2],[46,0,1,2,3],[48,0,1,2,2],[49,0,1,2,3,4,5],[50,0,1],[51,0,1,2],[52,0,2],[53,0,1,2,3],[54,0,1,2],[13,0,2],[13,1,2,0,4]],[[[{"fmt":"0","w":0,"h":0}],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["11vcSwZKhOt6Knn7niM+l3"]}],[2],0,[],[],[]],[[{"name":"default_toggle_normal","rect":{"x":0,"y":0,"width":28,"height":28},"offset":{"x":0,"y":0},"originalSize":{"width":28,"height":28},"rotated":false,"capInsets":[0,0,0,0],"texture":"11bdc4b0-64a8-4eb7-a2a7-9fb9e233e977@6c48a","packable":true}],[3],0,[0],[3],[8]],[[{"fmt":"0","w":0,"h":0}],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["15jn5SMiBM15aUcT4OboJ4"]}],[2],0,[],[],[]],[[{"name":"default_toggle_checkmark","rect":{"x":4,"y":5,"width":20,"height":18},"offset":{"x":0,"y":0},"originalSize":{"width":28,"height":28},"rotated":false,"capInsets":[0,0,0,0],"texture":"158e7e52-3220-4cd7-9694-713e0e6e8278@6c48a","packable":true}],[3],0,[0],[3],[9]],[[[29,"builtin-standard",[{"hash":971152766,"name":"builtin-standard|standard-vs|standard-fs","glsl4":{"vert":"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\n    int getVertexId() {\n      return gl_VertexIndex;\n    }\n  layout(set = 2, binding = 4) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    layout(set = 2, binding = 6) uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    layout(set = 2, binding = 7) uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    layout(set = 2, binding = 8) uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    layout(location = 4) in u32vec4 a_joints;\n  layout(location = 5) in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      layout(location = 7) in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(set = 2, binding = 3) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(set = 2, binding = 2) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    layout(set = 2, binding = 5) uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(set = 2, binding = 3) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\n  layout(location = 8) in vec4 a_matWorld0;\n  layout(location = 9) in vec4 a_matWorld1;\n  layout(location = 10) in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    layout(location = 11) in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  layout(location = 12) in float a_dyn_batch_id;\n  layout(set = 2, binding = 0) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(set = 2, binding = 0) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nlayout(location = 0) out float v_fog_factor;\nlayout(location = 1) out highp vec4 v_shadowPos;\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\n  layout(set = 0, binding = 3) uniform sampler2D cc_shadowMap;\n  layout(set = 0, binding = 5) uniform sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\n  layout(location = 13) in vec4 a_color;\n  layout(location = 2) out vec4 v_color;\n#endif\nlayout(location = 3) out vec3 v_position;\nlayout(location = 4) out vec3 v_normal;\nlayout(location = 5) out vec2 v_uv;\nlayout(location = 6) out vec2 v_uv1;\n#if USE_NORMAL_MAP\n  layout(location = 7) out vec3 v_tangent;\n  layout(location = 8) out vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  layout(location = 14) in vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  layout(location = 9) out vec3 v_luv;\n  void CCLightingMapCaclUV()\n  {\n  #if !USE_INSTANCING\n    v_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\n    v_luv.z = cc_lightingMapUVParam.z;\n  #else\n    v_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\n    v_luv.z = a_lightingMapUVParam.z;\n  #endif\n  }\n#endif\nvoid main () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if SAMPLE_FROM_RT\n    v_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n  #endif\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #if SAMPLE_FROM_RT\n      v_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n    #if CC_USE_FOG == 0\n      v_fog_factor = LinearFog(pos);\n    #elif CC_USE_FOG == 1\n      v_fog_factor = ExpFog(pos);\n    #elif CC_USE_FOG == 2\n      v_fog_factor = ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n      v_fog_factor = LayeredFog(pos);\n    #else\n      v_fog_factor = 1.0;\n    #endif\n  v_shadowPos = cc_matLightViewProj * pos;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n  gl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}","frag":"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nlayout(location = 0) in float v_fog_factor;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\n  layout(set = 0, binding = 3) uniform sampler2D cc_shadowMap;\n  layout(set = 0, binding = 5) uniform sampler2D cc_spotLightingMap;\n  float CCGetLinearDepth (vec3 worldPos) {\n    vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n    float dist = length(viewStartPos.xyz);\n    return cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n  }\n  float CCGetShadowFactorX1 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    } else {\n      closestDepth = texture(cc_shadowMap, clipPos.xy).x;\n    }\n    shadow = step(closestDepth, clipPos.z- cc_shadowWHPBInfo.w);\n    return shadow;\n  }\n  float CCGetShadowFactorX5 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      float closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n    } else {\n      float closestDepth = texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n    }\n    return shadow / 5.0;\n  }\n  float CCGetShadowFactorX9 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -1; i <= 1; i++) {\n          for (int j = -1; j <= 1; j++) {\n            float closestDepth = dot(texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n            shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n          }\n      }\n    } else {\n      for (int i = -1; i <= 1; i++) {\n          for (int j = -1; j <= 1; j++) {\n            float closestDepth = texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n            shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n          }\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetShadowFactorX25 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = dot(texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    } else {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    }\n    return shadow / 25.0;\n  }\n  float CCGetDirLightShadowFactorX1 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    float depth = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    } else {\n      closestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n    }\n    shadow = step(closestDepth, depth - cc_shadowWHPBInfo.w);\n    return shadow;\n  }\n  float CCGetDirLightShadowFactorX5 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      float closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n    } else {\n      float closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n    }\n    return shadow / 5.0;\n  }\n  float CCGetDirLightShadowFactorX9 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -1; i <= 1; i++) {\n        for (int j = -1; j <= 1; j++) {\n          float closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n          shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n        }\n      }\n    } else {\n      for (int i = -1; i <= 1; i++) {\n        for (int j = -1; j <= 1; j++) {\n          float closestDepth = texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n          shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n        }\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetDirLightShadowFactorX25 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float depth = 0.0;\n    float shadow = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    } else {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    }\n    return shadow / 25.0;\n  }\n#endif\n#if CC_USE_IBL\n  layout(set = 0, binding = 4) uniform samplerCube cc_environment;\n  vec3 unpackRGBE (vec4 rgbe) {\n    return rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n  }\n  vec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n  vec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n  vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  vec3 lightmap;\n  float lightmap_test;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - s.position);\n  float NV = max(abs(dot(N, V)), 0.001);\n  specular = BRDFApprox(specular, s.roughness, NV);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  vec3 H = normalize(L + V);\n  float NH = max(dot(N, H), 0.0);\n  float NL = max(dot(N, L), 0.001);\n  vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n  vec3 diffuseContrib = diffuse;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    if (s.lightmap_test > 0.0001) {\n      finalColor = s.lightmap.rgb;\n    }\n  #else\n    diffuseContrib /= 3.14159265359;\n  #endif\n  vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n  finalColor *= (diffuseContrib + specularContrib);\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n  finalColor += (ambDiff.rgb * diffuse);\n  #if CC_USE_IBL\n    vec3 R = normalize(reflect(-V, N));\n    vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n    #if CC_USE_IBL == 2\n      vec3 env = unpackRGBE(envmap);\n    #else\n      vec3 env = SRGBToLinear(envmap.rgb);\n    #endif\n    finalColor += env * cc_ambientSky.w * specular;\n  #endif\n  finalColor = finalColor * s.occlusion;\n  #if CC_USE_HDR\n    s.emissive *= cc_exposure.w;\n  #endif\n  finalColor += s.emissive;\n  #if CC_RECEIVE_SHADOW\n    {\n      float pcf = cc_shadowWHPBInfo.z + 0.001;\n      float shadowAttenuation = 0.0;\n      float cosAngle = clamp(1.0 - dot(N, L.xyz), 0.0, 1.0);\n      vec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\n      vec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\n      if (pcf > 3.0) shadowAttenuation = CCGetShadowFactorX25(pos);\n      else if (pcf > 2.0) shadowAttenuation = CCGetShadowFactorX9(pos);\n      else if (pcf > 1.0) shadowAttenuation = CCGetShadowFactorX5(pos);\n      else shadowAttenuation = CCGetShadowFactorX1(pos);\n      vec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + finalColor.rgb * (1.0 - cc_shadowColor.a);\n      if (cc_shadowNFLSInfo.w > 0.000001) {\n        finalColor.rgb = shadowColor.rgb * shadowAttenuation + finalColor.rgb * (1.0 - shadowAttenuation);\n      } else {\n        finalColor.rgb = shadowColor.rgb * shadowAttenuation * NL + finalColor.rgb * (1.0 - shadowAttenuation * NL);\n      }\n    }\n  #endif\n  return vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nlayout(location = 1) in highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  layout(location = 9) in vec3 v_luv;\n  layout(set = 2, binding = 9) uniform sampler2D cc_lightingMap;\n  vec3 UnpackLightingmap(vec4 color) {\n    vec3 c;\n    float e = 1.0 + color.a * (8.0 - 1.0);\n    c.r = color.r * e;\n    c.g = color.g * e;\n    c.b = color.b * e;\n    return c;\n  }\n#endif\nlayout(location = 3) in vec3 v_position;\nlayout(location = 5) in vec2 v_uv;\nlayout(location = 6) in vec2 v_uv1;\nlayout(location = 4) in vec3 v_normal;\n#if USE_VERTEX_COLOR\n  layout(location = 2) in vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  layout(set = 1, binding = 1) uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  layout(location = 7) in vec3 v_tangent;\n  layout(location = 8) in vec3 v_bitangent;\n  layout(set = 1, binding = 2) uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  layout(set = 1, binding = 3) uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  layout(set = 1, binding = 4) uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  layout(set = 1, binding = 5) uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  layout(set = 1, binding = 6) uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor *= v_color;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    vec4 lightColor = texture(cc_lightingMap, v_luv.xy);\n    s.lightmap = UnpackLightingmap(lightColor);\n    s.lightmap_test = v_luv.z;\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * pbrParams.w) * normalize(v_tangent) +\n      (nmmp.y * pbrParams.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  s.position = v_position;\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    vec4 res = texture(pbrMap, PBR_UV);\n    pbr.x *= res.r;\n    pbr.y *= res.g;\n    pbr.z *= res.b;\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = clamp(pbr.x, 0.0, 0.96);\n  s.roughness = clamp(pbr.y, 0.04, 1.0);\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\n#if CC_FORWARD_ADD\n  #if CC_PIPELINE_TYPE == 0\n  # define LIGHTS_PER_PASS 1\n  #else\n  # define LIGHTS_PER_PASS 10\n  #endif\n  layout(set = 2, binding = 1) uniform CCForwardLight {\n    highp vec4 cc_lightPos[LIGHTS_PER_PASS];\n    vec4 cc_lightColor[LIGHTS_PER_PASS];\n    vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\n    vec4 cc_lightDir[LIGHTS_PER_PASS];\n  };\n  float SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n    float factor = distSqr * invSqrAttRadius;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    return smoothFactor * smoothFactor;\n  }\n  float GetDistAtt (float distSqr, float invSqrAttRadius) {\n    float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n    attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n    return attenuation;\n  }\n  float GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n    float cd = dot(litDir, L);\n    float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n    return (attenuation * attenuation);\n  }\n  vec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    int numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\n    for (int i = 0; i < LIGHTS_PER_PASS; i++) {\n      if (i >= numLights) break;\n      vec3 SLU = cc_lightPos[i].xyz - s.position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.001);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n      #if CC_RECEIVE_SHADOW\n        if (cc_lightPos[i].w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z + 0.001;\n            float shadowAttenuation = 0.0;\n            float cosAngle = clamp(1.0 - dot(N, normalize(cc_lightPos[i].xyz - s.position.xyz)), 0.0, 1.0);\n            vec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\n            vec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\n            if (pcf > 3.0) shadowAttenuation = CCGetDirLightShadowFactorX25(pos, s.position);\n            else if (pcf > 2.0) shadowAttenuation = CCGetDirLightShadowFactorX9(pos, s.position);\n            else if (pcf > 1.0) shadowAttenuation = CCGetDirLightShadowFactorX5(pos, s.position);\n            else shadowAttenuation = CCGetDirLightShadowFactorX1(pos, s.position);\n            lightColor *= 1.0 - shadowAttenuation;\n          }\n        }\n      #endif\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    finalColor = finalColor * s.occlusion;\n    return vec4(finalColor, 0.0);\n  }\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    fragColorX = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 0\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingBase(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    fragColorX = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 1\n  layout(location = 0) out vec4 fragColor0;\n  layout(location = 1) out vec4 fragColor1;\n  layout(location = 2) out vec4 fragColor2;\n  layout(location = 3) out vec4 fragColor3;\n  void main () {\n    StandardSurface s; surf(s);\n    fragColor0 = s.albedo;\n    fragColor1 = vec4(s.position, s.roughness);\n    fragColor2 = vec4(s.normal, s.metallic);\n    fragColor3 = vec4(s.emissive, s.occlusion);\n  }\n#endif"},"glsl3":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(std140) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nout float v_fog_factor;\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\n  in vec4 a_color;\n  out vec4 v_color;\n#endif\nout vec3 v_position;\nout vec3 v_normal;\nout vec2 v_uv;\nout vec2 v_uv1;\n#if USE_NORMAL_MAP\n  out vec3 v_tangent;\n  out vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  in vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  out vec3 v_luv;\n  void CCLightingMapCaclUV()\n  {\n  #if !USE_INSTANCING\n    v_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\n    v_luv.z = cc_lightingMapUVParam.z;\n  #else\n    v_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\n    v_luv.z = a_lightingMapUVParam.z;\n  #endif\n  }\n#endif\nvoid main () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if SAMPLE_FROM_RT\n    v_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n  #endif\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #if SAMPLE_FROM_RT\n      v_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n    #if CC_USE_FOG == 0\n      v_fog_factor = LinearFog(pos);\n    #elif CC_USE_FOG == 1\n      v_fog_factor = ExpFog(pos);\n    #elif CC_USE_FOG == 2\n      v_fog_factor = ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n      v_fog_factor = LayeredFog(pos);\n    #else\n      v_fog_factor = 1.0;\n    #endif\n  v_shadowPos = cc_matLightViewProj * pos;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n  gl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nin float v_fog_factor;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n  float CCGetLinearDepth (vec3 worldPos) {\n    vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n    float dist = length(viewStartPos.xyz);\n    return cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n  }\n  float CCGetShadowFactorX1 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    } else {\n      closestDepth = texture(cc_shadowMap, clipPos.xy).x;\n    }\n    shadow = step(closestDepth, clipPos.z- cc_shadowWHPBInfo.w);\n    return shadow;\n  }\n  float CCGetShadowFactorX5 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      float closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n    } else {\n      float closestDepth = texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n    }\n    return shadow / 5.0;\n  }\n  float CCGetShadowFactorX9 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -1; i <= 1; i++) {\n          for (int j = -1; j <= 1; j++) {\n            float closestDepth = dot(texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n            shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n          }\n      }\n    } else {\n      for (int i = -1; i <= 1; i++) {\n          for (int j = -1; j <= 1; j++) {\n            float closestDepth = texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n            shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n          }\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetShadowFactorX25 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = dot(texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    } else {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    }\n    return shadow / 25.0;\n  }\n  float CCGetDirLightShadowFactorX1 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    float depth = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    } else {\n      closestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n    }\n    shadow = step(closestDepth, depth - cc_shadowWHPBInfo.w);\n    return shadow;\n  }\n  float CCGetDirLightShadowFactorX5 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      float closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n    } else {\n      float closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n    }\n    return shadow / 5.0;\n  }\n  float CCGetDirLightShadowFactorX9 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -1; i <= 1; i++) {\n        for (int j = -1; j <= 1; j++) {\n          float closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n          shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n        }\n      }\n    } else {\n      for (int i = -1; i <= 1; i++) {\n        for (int j = -1; j <= 1; j++) {\n          float closestDepth = texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n          shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n        }\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetDirLightShadowFactorX25 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float depth = 0.0;\n    float shadow = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    } else {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    }\n    return shadow / 25.0;\n  }\n#endif\n#if CC_USE_IBL\n  uniform samplerCube cc_environment;\n  vec3 unpackRGBE (vec4 rgbe) {\n    return rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n  }\n  vec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n  vec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n  vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  vec3 lightmap;\n  float lightmap_test;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - s.position);\n  float NV = max(abs(dot(N, V)), 0.001);\n  specular = BRDFApprox(specular, s.roughness, NV);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  vec3 H = normalize(L + V);\n  float NH = max(dot(N, H), 0.0);\n  float NL = max(dot(N, L), 0.001);\n  vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n  vec3 diffuseContrib = diffuse;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    if (s.lightmap_test > 0.0001) {\n      finalColor = s.lightmap.rgb;\n    }\n  #else\n    diffuseContrib /= 3.14159265359;\n  #endif\n  vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n  finalColor *= (diffuseContrib + specularContrib);\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n  finalColor += (ambDiff.rgb * diffuse);\n  #if CC_USE_IBL\n    vec3 R = normalize(reflect(-V, N));\n    vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n    #if CC_USE_IBL == 2\n      vec3 env = unpackRGBE(envmap);\n    #else\n      vec3 env = SRGBToLinear(envmap.rgb);\n    #endif\n    finalColor += env * cc_ambientSky.w * specular;\n  #endif\n  finalColor = finalColor * s.occlusion;\n  #if CC_USE_HDR\n    s.emissive *= cc_exposure.w;\n  #endif\n  finalColor += s.emissive;\n  #if CC_RECEIVE_SHADOW\n    {\n      float pcf = cc_shadowWHPBInfo.z + 0.001;\n      float shadowAttenuation = 0.0;\n      float cosAngle = clamp(1.0 - dot(N, L.xyz), 0.0, 1.0);\n      vec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\n      vec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\n      if (pcf > 3.0) shadowAttenuation = CCGetShadowFactorX25(pos);\n      else if (pcf > 2.0) shadowAttenuation = CCGetShadowFactorX9(pos);\n      else if (pcf > 1.0) shadowAttenuation = CCGetShadowFactorX5(pos);\n      else shadowAttenuation = CCGetShadowFactorX1(pos);\n      vec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + finalColor.rgb * (1.0 - cc_shadowColor.a);\n      if (cc_shadowNFLSInfo.w > 0.000001) {\n        finalColor.rgb = shadowColor.rgb * shadowAttenuation + finalColor.rgb * (1.0 - shadowAttenuation);\n      } else {\n        finalColor.rgb = shadowColor.rgb * shadowAttenuation * NL + finalColor.rgb * (1.0 - shadowAttenuation * NL);\n      }\n    }\n  #endif\n  return vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nin highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  in vec3 v_luv;\n  uniform sampler2D cc_lightingMap;\n  vec3 UnpackLightingmap(vec4 color) {\n    vec3 c;\n    float e = 1.0 + color.a * (8.0 - 1.0);\n    c.r = color.r * e;\n    c.g = color.g * e;\n    c.b = color.b * e;\n    return c;\n  }\n#endif\nin vec3 v_position;\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec3 v_normal;\n#if USE_VERTEX_COLOR\n  in vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  in vec3 v_tangent;\n  in vec3 v_bitangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor *= v_color;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    vec4 lightColor = texture(cc_lightingMap, v_luv.xy);\n    s.lightmap = UnpackLightingmap(lightColor);\n    s.lightmap_test = v_luv.z;\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * pbrParams.w) * normalize(v_tangent) +\n      (nmmp.y * pbrParams.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  s.position = v_position;\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    vec4 res = texture(pbrMap, PBR_UV);\n    pbr.x *= res.r;\n    pbr.y *= res.g;\n    pbr.z *= res.b;\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = clamp(pbr.x, 0.0, 0.96);\n  s.roughness = clamp(pbr.y, 0.04, 1.0);\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\n#if CC_FORWARD_ADD\n  #if CC_PIPELINE_TYPE == 0\n  # define LIGHTS_PER_PASS 1\n  #else\n  # define LIGHTS_PER_PASS 10\n  #endif\n  layout(std140) uniform CCForwardLight {\n    highp vec4 cc_lightPos[LIGHTS_PER_PASS];\n    vec4 cc_lightColor[LIGHTS_PER_PASS];\n    vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\n    vec4 cc_lightDir[LIGHTS_PER_PASS];\n  };\n  float SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n    float factor = distSqr * invSqrAttRadius;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    return smoothFactor * smoothFactor;\n  }\n  float GetDistAtt (float distSqr, float invSqrAttRadius) {\n    float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n    attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n    return attenuation;\n  }\n  float GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n    float cd = dot(litDir, L);\n    float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n    return (attenuation * attenuation);\n  }\n  vec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    int numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\n    for (int i = 0; i < LIGHTS_PER_PASS; i++) {\n      if (i >= numLights) break;\n      vec3 SLU = cc_lightPos[i].xyz - s.position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.001);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n      #if CC_RECEIVE_SHADOW\n        if (cc_lightPos[i].w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z + 0.001;\n            float shadowAttenuation = 0.0;\n            float cosAngle = clamp(1.0 - dot(N, normalize(cc_lightPos[i].xyz - s.position.xyz)), 0.0, 1.0);\n            vec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\n            vec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\n            if (pcf > 3.0) shadowAttenuation = CCGetDirLightShadowFactorX25(pos, s.position);\n            else if (pcf > 2.0) shadowAttenuation = CCGetDirLightShadowFactorX9(pos, s.position);\n            else if (pcf > 1.0) shadowAttenuation = CCGetDirLightShadowFactorX5(pos, s.position);\n            else shadowAttenuation = CCGetDirLightShadowFactorX1(pos, s.position);\n            lightColor *= 1.0 - shadowAttenuation;\n          }\n        }\n      #endif\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    finalColor = finalColor * s.occlusion;\n    return vec4(finalColor, 0.0);\n  }\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    fragColorX = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 0\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingBase(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    fragColorX = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 1\n  layout(location = 0) out vec4 fragColor0;\n  layout(location = 1) out vec4 fragColor1;\n  layout(location = 2) out vec4 fragColor2;\n  layout(location = 3) out vec4 fragColor3;\n  void main () {\n    StandardSurface s; surf(s);\n    fragColor0 = s.albedo;\n    fragColor1 = vec4(s.position, s.roughness);\n    fragColor2 = vec4(s.normal, s.metallic);\n    fragColor3 = vec4(s.emissive, s.occlusion);\n  }\n#endif"},"glsl1":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      attribute highp vec4 a_jointAnimInfo;\n    #endif\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    uniform highp vec4 cc_joints[90];\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n  uniform highp vec4 cc_lightingMapUVParam;\n#endif\n      uniform vec4 tilingOffset;\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nvarying float v_fog_factor;\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\n  attribute vec4 a_color;\n  varying vec4 v_color;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  attribute vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  varying vec3 v_luv;\n  void CCLightingMapCaclUV()\n  {\n  #if !USE_INSTANCING\n    v_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\n    v_luv.z = cc_lightingMapUVParam.z;\n  #else\n    v_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\n    v_luv.z = a_lightingMapUVParam.z;\n  #endif\n  }\n#endif\nvoid main () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if SAMPLE_FROM_RT\n    v_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n  #endif\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #if SAMPLE_FROM_RT\n      v_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n    #if CC_USE_FOG == 0\n      v_fog_factor = LinearFog(pos);\n    #elif CC_USE_FOG == 1\n      v_fog_factor = ExpFog(pos);\n    #elif CC_USE_FOG == 2\n      v_fog_factor = ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n      v_fog_factor = LayeredFog(pos);\n    #else\n      v_fog_factor = 1.0;\n    #endif\n  v_shadowPos = cc_matLightViewProj * pos;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n  gl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}","frag":"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_exposure;\n  uniform mediump vec4 cc_mainLitDir;\n  uniform mediump vec4 cc_mainLitColor;\n  uniform mediump vec4 cc_ambientSky;\n  uniform mediump vec4 cc_ambientGround;\n  uniform mediump vec4 cc_fogColor;\n     uniform vec4 albedo;\n     uniform vec4 albedoScaleAndCutoff;\n     uniform vec4 pbrParams;\n     uniform vec4 emissive;\n     uniform vec4 emissiveScaleParam;\nvarying float v_fog_factor;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\n  uniform lowp vec4 cc_shadowNFLSInfo;\n  uniform lowp vec4 cc_shadowWHPBInfo;\n  uniform lowp vec4 cc_shadowLPNNInfo;\n  uniform lowp vec4 cc_shadowColor;\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n  float CCGetLinearDepth (vec3 worldPos) {\n    vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n    float dist = length(viewStartPos.xyz);\n    return cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n  }\n  float CCGetShadowFactorX1 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    } else {\n      closestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n    }\n    shadow = step(closestDepth, clipPos.z- cc_shadowWHPBInfo.w);\n    return shadow;\n  }\n  float CCGetShadowFactorX5 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      float closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n    } else {\n      float closestDepth = texture2D(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture2D(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture2D(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n      closestDepth = texture2D(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n    }\n    return shadow / 5.0;\n  }\n  float CCGetShadowFactorX9 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -1; i <= 1; i++) {\n          for (int j = -1; j <= 1; j++) {\n            float closestDepth = dot(texture2D(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n            shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n          }\n      }\n    } else {\n      for (int i = -1; i <= 1; i++) {\n          for (int j = -1; j <= 1; j++) {\n            float closestDepth = texture2D(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n            shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n          }\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetShadowFactorX25 (vec4 shadowPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = dot(texture2D(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    } else {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = texture2D(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    }\n    return shadow / 25.0;\n  }\n  float CCGetDirLightShadowFactorX1 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    float depth = 0.0;\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    } else {\n      closestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n    }\n    shadow = step(closestDepth, depth - cc_shadowWHPBInfo.w);\n    return shadow;\n  }\n  float CCGetDirLightShadowFactorX5 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      float closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n    } else {\n      float closestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n      closestDepth = texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)).x;\n      shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n    }\n    return shadow / 5.0;\n  }\n  float CCGetDirLightShadowFactorX9 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float shadow = 0.0;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -1; i <= 1; i++) {\n        for (int j = -1; j <= 1; j++) {\n          float closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n          shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n        }\n      }\n    } else {\n      for (int i = -1; i <= 1; i++) {\n        for (int j = -1; j <= 1; j++) {\n          float closestDepth = texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n          shadow += step(closestDepth, depth - cc_shadowWHPBInfo.w);\n        }\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetDirLightShadowFactorX25 (vec4 shadowPos, vec3 worldPos) {\n    vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowWHPBInfo.x;\n    float offsety = 1.0 / cc_shadowWHPBInfo.y;\n    float depth = 0.0;\n    float shadow = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    } else {\n      for (int i = -2; i <= 2; i++) {\n        for (int j = -2; j <= 2; j++) {\n          float closestDepth = texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)).x;\n          shadow += step(closestDepth, clipPos.z - cc_shadowWHPBInfo.w);\n        }\n      }\n    }\n    return shadow / 25.0;\n  }\n#endif\n#if CC_USE_IBL\n  uniform samplerCube cc_environment;\n  vec3 unpackRGBE (vec4 rgbe) {\n    return rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n  }\n  vec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n      #ifdef GL_EXT_shader_texture_lod\n        return texture2DLodEXT(tex, coord, lod);\n      #else\n        return texture2D(tex, coord, lod);\n      #endif\n  }\n  vec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n      #ifdef GL_EXT_shader_texture_lod\n        return textureCubeLodEXT(tex, coord, lod);\n      #else\n        return textureCube(tex, coord, lod);\n      #endif\n  }\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n  vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  vec3 lightmap;\n  float lightmap_test;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - s.position);\n  float NV = max(abs(dot(N, V)), 0.001);\n  specular = BRDFApprox(specular, s.roughness, NV);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  vec3 H = normalize(L + V);\n  float NH = max(dot(N, H), 0.0);\n  float NL = max(dot(N, L), 0.001);\n  vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n  vec3 diffuseContrib = diffuse;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    if (s.lightmap_test > 0.0001) {\n      finalColor = s.lightmap.rgb;\n    }\n  #else\n    diffuseContrib /= 3.14159265359;\n  #endif\n  vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n  finalColor *= (diffuseContrib + specularContrib);\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n  finalColor += (ambDiff.rgb * diffuse);\n  #if CC_USE_IBL\n    vec3 R = normalize(reflect(-V, N));\n    vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n    #if CC_USE_IBL == 2\n      vec3 env = unpackRGBE(envmap);\n    #else\n      vec3 env = SRGBToLinear(envmap.rgb);\n    #endif\n    finalColor += env * cc_ambientSky.w * specular;\n  #endif\n  finalColor = finalColor * s.occlusion;\n  #if CC_USE_HDR\n    s.emissive *= cc_exposure.w;\n  #endif\n  finalColor += s.emissive;\n  #if CC_RECEIVE_SHADOW\n    {\n      float pcf = cc_shadowWHPBInfo.z + 0.001;\n      float shadowAttenuation = 0.0;\n      float cosAngle = clamp(1.0 - dot(N, L.xyz), 0.0, 1.0);\n      vec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\n      vec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\n      if (pcf > 3.0) shadowAttenuation = CCGetShadowFactorX25(pos);\n      else if (pcf > 2.0) shadowAttenuation = CCGetShadowFactorX9(pos);\n      else if (pcf > 1.0) shadowAttenuation = CCGetShadowFactorX5(pos);\n      else shadowAttenuation = CCGetShadowFactorX1(pos);\n      vec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + finalColor.rgb * (1.0 - cc_shadowColor.a);\n      if (cc_shadowNFLSInfo.w > 0.000001) {\n        finalColor.rgb = shadowColor.rgb * shadowAttenuation + finalColor.rgb * (1.0 - shadowAttenuation);\n      } else {\n        finalColor.rgb = shadowColor.rgb * shadowAttenuation * NL + finalColor.rgb * (1.0 - shadowAttenuation * NL);\n      }\n    }\n  #endif\n  return vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nvarying highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  varying vec3 v_luv;\n  uniform sampler2D cc_lightingMap;\n  vec3 UnpackLightingmap(vec4 color) {\n    vec3 c;\n    float e = 1.0 + color.a * (8.0 - 1.0);\n    c.r = color.r * e;\n    c.g = color.g * e;\n    c.b = color.b * e;\n    return c;\n  }\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec3 v_normal;\n#if USE_VERTEX_COLOR\n  varying vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor *= v_color;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture2D(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    vec4 lightColor = texture2D(cc_lightingMap, v_luv.xy);\n    s.lightmap = UnpackLightingmap(lightColor);\n    s.lightmap_test = v_luv.z;\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture2D(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * pbrParams.w) * normalize(v_tangent) +\n      (nmmp.y * pbrParams.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  s.position = v_position;\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    vec4 res = texture2D(pbrMap, PBR_UV);\n    pbr.x *= res.r;\n    pbr.y *= res.g;\n    pbr.z *= res.b;\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture2D(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture2D(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = clamp(pbr.x, 0.0, 0.96);\n  s.roughness = clamp(pbr.y, 0.04, 1.0);\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture2D(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\n#if CC_FORWARD_ADD\n  #if CC_PIPELINE_TYPE == 0\n  # define LIGHTS_PER_PASS 1\n  #else\n  # define LIGHTS_PER_PASS 10\n  #endif\n  uniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightColor[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n  float SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n    float factor = distSqr * invSqrAttRadius;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    return smoothFactor * smoothFactor;\n  }\n  float GetDistAtt (float distSqr, float invSqrAttRadius) {\n    float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n    attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n    return attenuation;\n  }\n  float GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n    float cd = dot(litDir, L);\n    float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n    return (attenuation * attenuation);\n  }\n  vec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    int numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\n    for (int i = 0; i < LIGHTS_PER_PASS; i++) {\n      if (i >= numLights) break;\n      vec3 SLU = cc_lightPos[i].xyz - s.position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.001);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n      #if CC_RECEIVE_SHADOW\n        if (cc_lightPos[i].w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z + 0.001;\n            float shadowAttenuation = 0.0;\n            float cosAngle = clamp(1.0 - dot(N, normalize(cc_lightPos[i].xyz - s.position.xyz)), 0.0, 1.0);\n            vec3 projWorldPos = shadowPos.xyz + cosAngle * cc_shadowLPNNInfo.z * N;\n            vec4 pos = vec4(projWorldPos.xyz, shadowPos.w);\n            if (pcf > 3.0) shadowAttenuation = CCGetDirLightShadowFactorX25(pos, s.position);\n            else if (pcf > 2.0) shadowAttenuation = CCGetDirLightShadowFactorX9(pos, s.position);\n            else if (pcf > 1.0) shadowAttenuation = CCGetDirLightShadowFactorX5(pos, s.position);\n            else shadowAttenuation = CCGetDirLightShadowFactorX1(pos, s.position);\n            lightColor *= 1.0 - shadowAttenuation;\n          }\n        }\n      #endif\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    finalColor = finalColor * s.occlusion;\n    return vec4(finalColor, 0.0);\n  }\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    gl_FragData[0] = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 0\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingBase(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    gl_FragData[0] = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 1\n  void main () {\n    StandardSurface s; surf(s);\n    gl_FragData[0] = s.albedo;\n    gl_FragData[1] = vec4(s.position, s.roughness);\n    gl_FragData[2] = vec4(s.normal, s.metallic);\n    gl_FragData[3] = vec4(s.emissive, s.occlusion);\n  }\n#endif"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]},{"name":"CCShadow","defines":[]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotLightingMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_environment","defines":["CC_USE_IBL"]}]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{"name":"CCLocalBatched","defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"CCLocal","defines":["!USE_INSTANCING","!USE_BATCHING"]},{"name":"CCForwardLight","defines":["CC_FORWARD_ADD"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_lightingMap","defines":["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":216,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":59}},"defines":[{"name":"CC_USE_MORPH","type":"boolean","defines":[]},{"name":"CC_MORPH_TARGET_COUNT","type":"number","defines":["CC_USE_MORPH"],"range":[2,8]},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_USE_SKINNING","type":"boolean","defines":[]},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean","defines":["CC_USE_SKINNING"]},{"name":"USE_INSTANCING","type":"boolean","defines":[],"editor":{"elevated":true}},{"name":"USE_BATCHING","type":"boolean","defines":["!USE_INSTANCING"],"editor":{"elevated":true}},{"name":"USE_LIGHTMAP","type":"boolean","defines":[]},{"name":"CC_USE_FOG","type":"number","defines":[],"range":[0,4]},{"name":"CC_FORWARD_ADD","type":"boolean","defines":[]},{"name":"CC_RECEIVE_SHADOW","type":"boolean","defines":[]},{"name":"USE_VERTEX_COLOR","type":"boolean","defines":[]},{"name":"USE_NORMAL_MAP","type":"boolean","defines":[]},{"name":"HAS_SECOND_UV","type":"boolean","defines":[]},{"name":"SAMPLE_FROM_RT","type":"boolean","defines":[]},{"name":"CC_USE_IBL","type":"number","defines":[],"range":[0,2]},{"name":"CC_USE_HDR","type":"boolean","defines":[]},{"name":"USE_ALBEDO_MAP","type":"boolean","defines":[]},{"name":"ALBEDO_UV","type":"string","defines":["USE_ALBEDO_MAP"],"options":["v_uv","v_uv1"]},{"name":"NORMAL_UV","type":"string","defines":["USE_NORMAL_MAP"],"options":["v_uv","v_uv1"]},{"name":"PBR_UV","type":"string","defines":[],"options":["v_uv","v_uv1"]},{"name":"USE_PBR_MAP","type":"boolean","defines":[]},{"name":"USE_METALLIC_ROUGHNESS_MAP","type":"boolean","defines":[]},{"name":"USE_OCCLUSION_MAP","type":"boolean","defines":[]},{"name":"USE_EMISSIVE_MAP","type":"boolean","defines":[]},{"name":"EMISSIVE_UV","type":"string","defines":["USE_EMISSIVE_MAP"],"options":["v_uv","v_uv1"]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"ALPHA_TEST_CHANNEL","type":"string","defines":["USE_ALPHA_TEST"],"options":["a","r"]},{"name":"CC_PIPELINE_TYPE","type":"number","defines":["CC_FORWARD_ADD"],"range":[0,1]}],"blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"albedo","type":16,"count":1},{"name":"albedoScaleAndCutoff","type":16,"count":1},{"name":"pbrParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleParam","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"albedoMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_ALBEDO_MAP"]},{"name":"normalMap","type":28,"count":1,"stageFlags":16,"binding":2,"defines":["USE_NORMAL_MAP"]},{"name":"pbrMap","type":28,"count":1,"stageFlags":16,"binding":3,"defines":["USE_PBR_MAP"]},{"name":"metallicRoughnessMap","type":28,"count":1,"stageFlags":16,"binding":4,"defines":["USE_METALLIC_ROUGHNESS_MAP"]},{"name":"occlusionMap","type":28,"count":1,"stageFlags":16,"binding":5,"defines":["USE_OCCLUSION_MAP"]},{"name":"emissiveMap","type":28,"count":1,"stageFlags":16,"binding":6,"defines":["USE_EMISSIVE_MAP"]}],"attributes":[{"name":"a_position","type":15,"count":1,"stageFlags":1,"format":32,"location":0,"defines":[]},{"name":"a_normal","type":15,"count":1,"stageFlags":1,"format":32,"location":1,"defines":[]},{"name":"a_texCoord","type":14,"count":1,"stageFlags":1,"format":21,"location":2,"defines":[]},{"name":"a_tangent","type":16,"count":1,"stageFlags":1,"format":44,"location":3,"defines":[]},{"name":"a_vertexId","type":13,"count":1,"stageFlags":1,"format":11,"location":6,"defines":["CC_USE_MORPH"]},{"name":"a_joints","type":"u32vec4","count":1,"stageFlags":1,"location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","type":16,"count":1,"stageFlags":1,"format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":7,"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"]},{"name":"a_matWorld0","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","USE_LIGHTMAP"]},{"name":"a_dyn_batch_id","type":13,"count":1,"stageFlags":1,"format":11,"location":12,"defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"a_color","type":16,"count":1,"stageFlags":1,"format":44,"location":13,"defines":["USE_VERTEX_COLOR"]},{"name":"a_texCoord1","type":14,"count":1,"stageFlags":1,"format":21,"location":14,"defines":[]}],"varyings":[{"name":"v_fog_factor","type":13,"count":1,"stageFlags":1,"location":0,"defines":[]},{"name":"v_shadowPos","type":16,"count":1,"stageFlags":1,"location":1,"defines":[]},{"name":"v_color","type":16,"count":1,"stageFlags":1,"location":2,"defines":["USE_VERTEX_COLOR"]},{"name":"v_position","type":15,"count":1,"stageFlags":1,"location":3,"defines":[]},{"name":"v_normal","type":15,"count":1,"stageFlags":1,"location":4,"defines":[]},{"name":"v_uv","type":14,"count":1,"stageFlags":1,"location":5,"defines":[]},{"name":"v_uv1","type":14,"count":1,"stageFlags":1,"location":6,"defines":[]},{"name":"v_tangent","type":15,"count":1,"stageFlags":1,"location":7,"defines":["USE_NORMAL_MAP"]},{"name":"v_bitangent","type":15,"count":1,"stageFlags":1,"location":8,"defines":["USE_NORMAL_MAP"]},{"name":"v_luv","type":15,"count":1,"stageFlags":1,"location":9,"defines":["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}]},{"hash":826679743,"name":"builtin-standard|shadow-caster-vs:vert|shadow-caster-fs:frag","glsl4":{"vert":"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\n    int getVertexId() {\n      return gl_VertexIndex;\n    }\n  layout(set = 2, binding = 4) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    layout(set = 2, binding = 6) uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    layout(set = 2, binding = 7) uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    layout(set = 2, binding = 8) uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    layout(location = 4) in u32vec4 a_joints;\n  layout(location = 5) in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      layout(location = 7) in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(set = 2, binding = 3) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(set = 2, binding = 2) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    layout(set = 2, binding = 5) uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(set = 2, binding = 3) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\n#if USE_INSTANCING\n  layout(location = 8) in vec4 a_matWorld0;\n  layout(location = 9) in vec4 a_matWorld1;\n  layout(location = 10) in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    layout(location = 11) in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  layout(location = 12) in float a_dyn_batch_id;\n  layout(set = 2, binding = 0) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(set = 2, binding = 0) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  layout(location = 13) in vec2 a_texCoord1;\n#endif\nlayout(location = 0) out vec2 v_uv;\nlayout(location = 1) out vec2 v_uv1;\nlayout(location = 2) out vec4 v_worldPos;\nlayout(location = 3) out float v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  v_worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * v_worldPos;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\n  ret = fract(ret);\n  ret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n  return ret;\n}\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\nlayout(location = 0) in vec2 v_uv;\nlayout(location = 1) in vec2 v_uv1;\nlayout(location = 2) in vec4 v_worldPos;\nlayout(location = 3) in float v_clip_depth;\n#if USE_ALBEDO_MAP\n  layout(set = 1, binding = 1) uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      vec4 viewStartPos = cc_matLightView * v_worldPos;\n      float dist = length(viewStartPos.xyz);\n      float linearDepth = cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n      return vec4(linearDepth, 1.0, 1.0, 1.0);\n    }\n  }\n  if (cc_shadowLPNNInfo.y > 0.000001) {\n    return packDepthToRGBA(v_clip_depth);\n  }\n  return vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl3":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(std140) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  in vec2 a_texCoord1;\n#endif\nout vec2 v_uv;\nout vec2 v_uv1;\nout vec4 v_worldPos;\nout float v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  v_worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * v_worldPos;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\n  ret = fract(ret);\n  ret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n  return ret;\n}\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec4 v_worldPos;\nin float v_clip_depth;\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      vec4 viewStartPos = cc_matLightView * v_worldPos;\n      float dist = length(viewStartPos.xyz);\n      float linearDepth = cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n      return vec4(linearDepth, 1.0, 1.0, 1.0);\n    }\n  }\n  if (cc_shadowLPNNInfo.y > 0.000001) {\n    return packDepthToRGBA(v_clip_depth);\n  }\n  return vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      attribute highp vec4 a_jointAnimInfo;\n    #endif\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    uniform highp vec4 cc_joints[90];\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n#endif\n      uniform vec4 tilingOffset;\nuniform highp mat4 cc_matLightViewProj;\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  attribute vec2 a_texCoord1;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  v_worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * v_worldPos;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n   uniform vec4 albedo;\n   uniform vec4 albedoScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\n  ret = fract(ret);\n  ret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n  return ret;\n}\nuniform highp mat4 cc_matLightView;\n  uniform lowp vec4 cc_shadowNFLSInfo;\n  uniform lowp vec4 cc_shadowLPNNInfo;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture2D(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      vec4 viewStartPos = cc_matLightView * v_worldPos;\n      float dist = length(viewStartPos.xyz);\n      float linearDepth = cc_shadowNFLSInfo.x + (-dist / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x));\n      return vec4(linearDepth, 1.0, 1.0, 1.0);\n    }\n  }\n  if (cc_shadowLPNNInfo.y > 0.000001) {\n    return packDepthToRGBA(v_clip_depth);\n  }\n  return vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCShadow","defines":[]}],"samplerTextures":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{"name":"CCLocalBatched","defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"CCLocal","defines":["!USE_INSTANCING","!USE_BATCHING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":179,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":22}},"defines":[{"name":"CC_USE_MORPH","type":"boolean","defines":[]},{"name":"CC_MORPH_TARGET_COUNT","type":"number","defines":["CC_USE_MORPH"],"range":[2,8]},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_USE_SKINNING","type":"boolean","defines":[]},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean","defines":["CC_USE_SKINNING"]},{"name":"USE_INSTANCING","type":"boolean","defines":[],"editor":{"elevated":true}},{"name":"USE_BATCHING","type":"boolean","defines":["!USE_INSTANCING"],"editor":{"elevated":true}},{"name":"USE_LIGHTMAP","type":"boolean","defines":["USE_INSTANCING"]},{"name":"HAS_SECOND_UV","type":"boolean","defines":[]},{"name":"USE_ALBEDO_MAP","type":"boolean","defines":[]},{"name":"ALBEDO_UV","type":"string","defines":["USE_ALBEDO_MAP"],"options":["v_uv","v_uv1"]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"ALPHA_TEST_CHANNEL","type":"string","defines":["USE_ALPHA_TEST"],"options":["a","r"]}],"blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"albedo","type":16,"count":1},{"name":"albedoScaleAndCutoff","type":16,"count":1},{"name":"pbrParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleParam","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"albedoMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_ALBEDO_MAP"]}],"attributes":[{"name":"a_position","type":15,"count":1,"stageFlags":1,"format":32,"location":0,"defines":[]},{"name":"a_normal","type":15,"count":1,"stageFlags":1,"format":32,"location":1,"defines":[]},{"name":"a_texCoord","type":14,"count":1,"stageFlags":1,"format":21,"location":2,"defines":[]},{"name":"a_tangent","type":16,"count":1,"stageFlags":1,"format":44,"location":3,"defines":[]},{"name":"a_vertexId","type":13,"count":1,"stageFlags":1,"format":11,"location":6,"defines":["CC_USE_MORPH"]},{"name":"a_joints","type":"u32vec4","count":1,"stageFlags":1,"location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","type":16,"count":1,"stageFlags":1,"format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":7,"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"]},{"name":"a_matWorld0","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","USE_LIGHTMAP"]},{"name":"a_dyn_batch_id","type":13,"count":1,"stageFlags":1,"format":11,"location":12,"defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"a_texCoord1","type":14,"count":1,"stageFlags":1,"format":21,"location":13,"defines":[]}],"varyings":[{"name":"v_uv","type":14,"count":1,"stageFlags":1,"location":0,"defines":[]},{"name":"v_uv1","type":14,"count":1,"stageFlags":1,"location":1,"defines":[]},{"name":"v_worldPos","type":16,"count":1,"stageFlags":1,"location":2,"defines":[]},{"name":"v_clip_depth","type":13,"count":1,"stageFlags":1,"location":3,"defines":[]}]}],[{"name":"opaque","passes":[{"program":"builtin-standard|standard-vs|standard-fs","properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,1]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}},"migrations":{"properties":{"pbrParams":{"removeImmediately":true}}}},{"phase":"deferred","propertyIndex":0,"program":"builtin-standard|standard-vs|standard-fs","blendState":{"targets":[{"blend":false},{"blend":false},{"blend":false},{"blend":false}]},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,1]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}},{"phase":"forward-add","propertyIndex":0,"program":"builtin-standard|standard-vs|standard-fs","embeddedMacros":{"CC_FORWARD_ADD":true},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthFunc":2,"depthTest":true,"depthWrite":false},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,1]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}},{"phase":"shadow-caster","propertyIndex":0,"program":"builtin-standard|shadow-caster-vs:vert|shadow-caster-fs:frag","rasterizerState":{"cullMode":1},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST"},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"handleInfo":["pbrParams",2,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP"},"handleInfo":["pbrParams",3,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,1]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}}]},{"name":"transparent","passes":[{"program":"builtin-standard|standard-vs|standard-fs","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,1]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}},{"phase":"forward-add","propertyIndex":0,"program":"builtin-standard|standard-vs|standard-fs","embeddedMacros":{"CC_FORWARD_ADD":true},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthFunc":2,"depthTest":true,"depthWrite":false},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,1]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}},{"phase":"shadow-caster","propertyIndex":0,"program":"builtin-standard|shadow-caster-vs:vert|shadow-caster-fs:frag","rasterizerState":{"cullMode":1},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST"},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"handleInfo":["pbrParams",2,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP"},"handleInfo":["pbrParams",3,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,1]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}}]}]]],0,0,[],[],[]],[[{"fmt":"0","w":0,"h":0}],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["20g1ukYUVPvKWKBRznAKo+"]}],[2],0,[],[],[]],[[{"name":"default_btn_normal","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"texture":"20835ba4-6145-4fbc-a58a-051ce700aa3e@6c48a","packable":true}],[3],0,[0],[3],[10]],[[{"fmt":"0","w":0,"h":0}],[1],0,[],[],[]],[[[30,".bin",33672,2830540677,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":26976,"length":6696,"count":1674,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":26976,"count":562,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.36163267493247986,-0.000683648104313761,-0.3038347363471985],"maxPosition",8,[1,0.36163267493247986,0.10646120458841324,0.3207029402256012]]]],0,0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["31pGzDhFRERJFWOg4nXhf1@16ba9"]}],[2],0,[],[],[]],[[[31,"DV014A_Tuca_Green_Mask",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{"USE_ALBEDO_MAP":true}],[[[{"metallic":0.4000000059604645,"roughness":0.7071067690849304},"mainTexture",6,0]],11]]],0,0,[0,0],[9,10],[11,5]],[[[33],[34,"DV014A_Tuca_Green_Mask",[-2],[20,"5dvVXjzhJZ8oAclR0ti7Gi",-1,0]],[35,"DV014A_Tuca_Green_Mask",1,[[47,-3,[0,"0amVxf0+1ZyooyQM2OSuVU"],[0],[48],1]],[20,"f3/yw9M3deH4iZ3cE6lOkP",1,0],[1,0.0003037750720977783,0,6.745160940767555e-20],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,-90.00000000000003,0,0]]],0,[0,11,1,0,-1,2,0,0,2,0,12,1,3],[0,0],[-1,13],[12,13]],[[[49,"main"],[36,"Canvas",33554432,"df1+pxg2lKI41LszMVlZ5w",[-5,-6,-7,-8,-9,-10,-11,-12],[[1,-1,[0,"0dngp/9gNO34wUQjZfN/CX"],[5,750,1334]],[50,-3,[0,"3f2oTdCepERZdpmIfLsrhd"],-2],[51,45,-4,[0,"e8a+bU/8dPDbbJguUzLdoF"]]],[1,375,667,0]],[37,"Container",33554432,[-14,-15,-16,-17,-18,-19,-20],[[1,-13,[0,"f7NISe7HdAD68SLfhnddy8"],[5,500,500]]]],[8,"CameraAccess",false,33554432,1,[-25,-26],[[[3,-21,[5,750,1334]],[21,0,-22,[4,4278190080],5],-23,[2,45,100,100,-24]],4,4,1,4]],[8,"ARExperience",false,33554432,1,[-30,-31,-32],[[[3,-27,[5,750,1334]],-28,[2,45,100,100,-29]],4,1,4]],[8,"Minigame",false,33554432,1,[-37,-38],[[[3,-33,[5,750,1334]],-34,[21,0,-35,[4,4294956544],17],[2,45,100,100,-36]],4,1,4,4]],[8,"Menu",false,33554432,1,[-43,-44],[[[3,-39,[5,64,64]],[53,-40,[4,4283268863],28],-41,[2,45,100,100,-42]],4,4,1,4]],[8,"ARMask",false,33554432,1,[-48,-49],[[[3,-45,[5,750,1334]],-46,[2,45,100,100,-47]],4,1,4]],[8,"QRScan",false,33554432,1,[-53,-54],[[[3,-50,[5,750,1334]],-51,[2,45,100,100,-52]],4,1,4]],[8,"PopupAgeGate",false,33554432,1,[-58,2],[[[3,-55,[5,750,1334]],-56,[2,45,100,100,-57]],4,1,4]],[16,"ToggleMale",33554432,2,[-62,-63],[[[1,-59,[0,"a7yxb8GDhNnIT24rnD3lO4"],[5,28,28]],[22,-60,[0,"3a4GKzsKZCNLuWHErVRJ1B"],37],-61],4,4,1],[1,-100,-60,0]],[16,"ToggleFemale",33554432,2,[-67,-68],[[[1,-64,[0,"a7yxb8GDhNnIT24rnD3lO4"],[5,28,28]],[22,-65,[0,"3a4GKzsKZCNLuWHErVRJ1B"],38],-66],4,4,1],[1,50,-57.04,0]],[6,"Button",33554432,3,[-73],[[1,-69,[0,"98TYGMtwRBTYZZn4EZmhzJ"],[5,150,60]],[4,1,0,-70,[0,"77BcV1zfNHo4LI4KRqZupe"],0],[12,3,0.95,-72,[0,"2fOwBXUwBNvaJ4NyyrOq4C"],[[9,"760c8nm/YRFbreTY7hz9+VO","OnAccept",3]],[4,4292269782],-71,1,2,3,4]],[1,0,-442.639,0]],[6,"Button",33554432,4,[-78],[[1,-74,[0,"98TYGMtwRBTYZZn4EZmhzJ"],[5,150,60]],[4,1,0,-75,[0,"77BcV1zfNHo4LI4KRqZupe"],7],[12,3,0.95,-77,[0,"2fOwBXUwBNvaJ4NyyrOq4C"],[[9,"82044MShsVP+aWlVWp1qKm0","OnNext",4]],[4,4292269782],-76,8,9,10,11]],[1,0,-442.639,0]],[6,"Button",33554432,5,[-83],[[1,-79,[0,"98TYGMtwRBTYZZn4EZmhzJ"],[5,150,60]],[4,1,0,-80,[0,"77BcV1zfNHo4LI4KRqZupe"],12],[12,3,0.95,-82,[0,"2fOwBXUwBNvaJ4NyyrOq4C"],[[9,"82f801uYvhLjJGu+OmdfkFW","OnUnlock",5]],[4,4292269782],-81,13,14,15,16]],[1,0,-442.639,0]],[6,"Button",33554432,7,[-88],[[1,-84,[0,"98TYGMtwRBTYZZn4EZmhzJ"],[5,150,60]],[4,1,0,-85,[0,"77BcV1zfNHo4LI4KRqZupe"],18],[12,3,0.95,-87,[0,"2fOwBXUwBNvaJ4NyyrOq4C"],[[9,"6340cEMwIFKj6xOiw4bdfgd","OnNext",7]],[4,4292269782],-86,19,20,21,22]],[1,0,-442.639,0]],[6,"ButtonScan",33554432,6,[-93],[[1,-89,[0,"98TYGMtwRBTYZZn4EZmhzJ"],[5,200,80]],[4,1,0,-90,[0,"77BcV1zfNHo4LI4KRqZupe"],23],[25,3,-92,[0,"2fOwBXUwBNvaJ4NyyrOq4C"],[[9,"5aba5DZbFBJrosr5qgJdzZh","OnScan",6]],[4,4292269782],-91,24,25,26,27]],[1,0,-550,0]],[6,"ButtonClose",33554432,8,[-98],[[1,-94,[0,"98TYGMtwRBTYZZn4EZmhzJ"],[5,200,80]],[4,1,0,-95,[0,"77BcV1zfNHo4LI4KRqZupe"],29],[25,3,-97,[0,"2fOwBXUwBNvaJ4NyyrOq4C"],[[9,"1a33efXlGJMr5EXS/ugZcP6","OnClose",8]],[4,4292269782],-96,30,31,32,33]],[1,0,-550,0]],[16,"EditBoxAge",33554432,2,[-102,-103],[[[1,-99,[0,"1fhJOVuOVAGYSYZoiE25Uz"],[5,200,40]],[4,1,0,-100,[0,"43qH95z3VGeYelCElKd6FW"],36],-101],4,4,1],[1,0,140,0]],[6,"ButtonAccept",33554432,2,[-108],[[1,-104,[0,"98TYGMtwRBTYZZn4EZmhzJ"],[5,150,60]],[4,1,0,-105,[0,"77BcV1zfNHo4LI4KRqZupe"],39],[12,3,0.95,-107,[0,"2fOwBXUwBNvaJ4NyyrOq4C"],[[9,"8cff2rohshCOZeZrmZHXJEp","OnAccept",9]],[4,4292269782],-106,40,41,42,43]],[1,0,-173.656,0]],[54,"main",[-109,-110,1,-111],[55,[56],[57,[4,4283190348]],[58],[59]]],[10,"Overlay",33554432,9,[[1,-112,[0,"f7NISe7HdAD68SLfhnddy8"],[5,750,1334]],[23,0,-113,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,3221225472],34],[2,45,40,36,-114]]],[10,"Background",33554432,2,[[1,-115,[0,"f7NISe7HdAD68SLfhnddy8"],[5,500,500]],[23,0,-116,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4286611584],35],[2,45,500,500,-117]]],[11,"LabelGender",33554432,2,[[1,-118,[0,"c68UOAlNhN171Umca6yVvF"],[5,500,50.4]],[14,"(Optional) You are:",20,20,1,-119,[0,"2frm37uaJHQr0AEEaYyM82"]],[52,41,216.613,42.26,-120]],[1,0,8.187000000000001,0]],[27,["5dvVXjzhJZ8oAclR0ti7Gi"]],[10,"Label",33554432,3,[[1,-121,[0,"c68UOAlNhN171Umca6yVvF"],[5,600,50.4]],[14,"Camera access",30,30,1,-122,[0,"2frm37uaJHQr0AEEaYyM82"]]]],[7,"Label",512,33554432,12,[[1,-123,[0,"07QMd0h1dLcYd/vjigaip6"],[5,150,60]],[5,"Ok",20,20,1,false,-124,[0,"ee3IZdy2dLIaAWpjI7P0FL"],[4,4278190080]]]],[11,"Label",33554432,4,[[1,-125,[0,"c68UOAlNhN171Umca6yVvF"],[5,243.4,50.4]],[15,"AR EXPERIENCE",30,30,-126,[0,"2frm37uaJHQr0AEEaYyM82"]]],[1,0,487.375,0]],[38,"mc",33554432,4,[[3,-127,[5,155.79,164.67]],[61,0,"default","attack_burst2",-128,6]],[1,2,2,2]],[7,"Label",512,33554432,13,[[1,-129,[0,"07QMd0h1dLcYd/vjigaip6"],[5,150,60]],[5,"Next",20,20,1,false,-130,[0,"ee3IZdy2dLIaAWpjI7P0FL"],[4,4278190080]]]],[10,"Label",33554432,5,[[1,-131,[0,"c68UOAlNhN171Umca6yVvF"],[5,151.67,50.4]],[15,"MINIGAME",30,30,-132,[0,"2frm37uaJHQr0AEEaYyM82"]]]],[7,"Label",512,33554432,14,[[1,-133,[0,"07QMd0h1dLcYd/vjigaip6"],[5,150,60]],[5,"Unlock",20,20,1,false,-134,[0,"ee3IZdy2dLIaAWpjI7P0FL"],[4,4278190080]]]],[10,"Label",33554432,7,[[1,-135,[0,"c68UOAlNhN171Umca6yVvF"],[5,135.03,50.4]],[15,"AR MASK",30,30,-136,[0,"2frm37uaJHQr0AEEaYyM82"]]]],[7,"Label",512,33554432,15,[[1,-137,[0,"07QMd0h1dLcYd/vjigaip6"],[5,150,60]],[5,"Next",20,20,1,false,-138,[0,"ee3IZdy2dLIaAWpjI7P0FL"],[4,4278190080]]]],[39,"ARMask",[-139]],[40,"GameMgr","14bBt948tJzJxdTRAUcfgl",20,[34],[[62,-147,-146,-145,-144,-143,-142,-141,-140]]],[10,"Label",33554432,6,[[1,-148,[0,"c68UOAlNhN171Umca6yVvF"],[5,88.33,50.4]],[15,"MENU",30,30,-149,[0,"2frm37uaJHQr0AEEaYyM82"]]]],[7,"Label",512,33554432,16,[[1,-150,[0,"07QMd0h1dLcYd/vjigaip6"],[5,200,80]],[5,"Scan",30,30,1,false,-151,[0,"ee3IZdy2dLIaAWpjI7P0FL"],[4,4278190080]]]],[18,"Label",33554432,8,[[[1,-152,[0,"c68UOAlNhN171Umca6yVvF"],[5,750,40]],-153],4,1],[1,0,500,0]],[7,"Label",512,33554432,17,[[1,-154,[0,"07QMd0h1dLcYd/vjigaip6"],[5,200,80]],[5,"Close",30,30,1,false,-155,[0,"ee3IZdy2dLIaAWpjI7P0FL"],[4,4278190080]]]],[11,"LabelAge",33554432,2,[[1,-156,[0,"c68UOAlNhN171Umca6yVvF"],[5,500,50.4]],[14,"Please input your age",20,20,1,-157,[0,"2frm37uaJHQr0AEEaYyM82"]]],[1,0,214.8,0]],[43,"TEXT_LABEL",false,33554432,18,[[[13,-158,[0,"779kAXGTtMZKXfYlOg0Tfd"],[5,198,40],[0,0,1]],-159],4,1],[1,-98,20,0]],[18,"PLACEHOLDER_LABEL",33554432,18,[[[13,-160,[0,"d07wQj4whCUqYGJH1lEpVp"],[5,198,40],[0,0,1]],-161],4,1],[1,-98,20,0]],[19,"Checkmark",false,33554432,10,[[[1,-162,[0,"e4k6OSwohL75lyfsntvPC5"],[5,26,26]],-163],4,1]],[11,"Label",33554432,10,[[13,-164,[0,"c68UOAlNhN171Umca6yVvF"],[5,100,50.4],[0,0,0.5]],[26,"Male",0,20,20,1,-165,[0,"2frm37uaJHQr0AEEaYyM82"]]],[1,25,0,0]],[19,"Checkmark",false,33554432,11,[[[1,-166,[0,"e4k6OSwohL75lyfsntvPC5"],[5,26,26]],-167],4,1]],[11,"Label",33554432,11,[[13,-168,[0,"c68UOAlNhN171Umca6yVvF"],[5,100,50.4],[0,0,0.5]],[26,"Female",0,20,20,1,-169,[0,"2frm37uaJHQr0AEEaYyM82"]]],[1,25,0,0]],[7,"Label",512,33554432,19,[[1,-170,[0,"07QMd0h1dLcYd/vjigaip6"],[5,150,60]],[5,"Accept",20,20,1,false,-171,[0,"ee3IZdy2dLIaAWpjI7P0FL"],[4,4278190080]]]],[41,"Main Light","c0y6F5f+pAvI805TdmxIjx",20,[[63,-172,[64]]],[3,-0.24999999999999997,-0.24999999999999997,-0.06698729810778066,0.9330127018922194],[1,-30,-30,0]],[44,"Main Camera","c9DMICJLFO5IeO07EPon7U",20,[-173]],[65,6,1822425087,49],[45,"Camera",1,[-174],[1,0,0,1000]],[66,0,1073741824,667,2000,6,41943040,51,[4,4278190080]],[67,3],[68,4],[69,5],[70,7,50,34],[71,6],[72,8],[14,"",30,30,1,38,[0,"2frm37uaJHQr0AEEaYyM82"]],[73,9,2],[60,"",40,20,1,false,41,[0,"ddIY+NJvlDTIQAg7PLVrGo"]],[5,"Enter text here...",20,20,1,false,42,[0,"8fhi7qRLFJbK0abIJuXmCW"],[4,4290493371]],[74,2,8,18,[0,"1bCHrwPGZOPrbmPh93kwpe"],61,62],[24,0,43,[0,"25nHiyhlVLhbUiFI4JJ9Sn"]],[28,false,10,[0,"58GFHdMmJFBa4quSrrbzsk"],[4,4292269782],10,64],[24,0,45,[0,"25nHiyhlVLhbUiFI4JJ9Sn"]],[28,false,11,[0,"58GFHdMmJFBa4quSrrbzsk"],[4,4292269782],11,66],[42,34,[46,"5dvVXjzhJZ8oAclR0ti7Gi",-175,[75,"0eiCAxHrNCRI1ZLdm+h7kS",[[76,"DV014A_Tuca_Green_Mask",["_name"],24],[17,["_lpos"],24,[1,0,0.35,0]],[17,["_lrot"],24,[3,0,0,0,1]],[77,["_materials","0"],[27,["0amVxf0+1ZyooyQM2OSuVU"]],45],[17,["_lscale"],24,[1,2,2,2]]]],44]]],0,[0,0,1,0,14,52,0,0,1,0,0,1,0,-1,51,0,-2,3,0,-3,4,0,-4,5,0,-5,7,0,-6,9,0,-7,6,0,-8,8,0,0,2,0,-1,22,0,-2,40,0,-3,18,0,-4,23,0,-5,10,0,-6,11,0,-7,19,0,0,3,0,0,3,0,-3,53,0,0,3,0,-1,25,0,-2,12,0,0,4,0,-2,54,0,0,4,0,-1,27,0,-2,28,0,-3,13,0,0,5,0,-2,55,0,0,5,0,0,5,0,-1,30,0,-2,14,0,0,6,0,0,6,0,-3,57,0,0,6,0,-1,36,0,-2,16,0,0,7,0,-2,56,0,0,7,0,-1,32,0,-2,15,0,0,8,0,-2,58,0,0,8,0,-1,38,0,-2,17,0,0,9,0,-2,60,0,0,9,0,-1,21,0,0,10,0,0,10,0,-3,65,0,-1,43,0,-2,44,0,0,11,0,0,11,0,-3,67,0,-1,45,0,-2,46,0,0,12,0,0,12,0,4,12,0,0,12,0,-1,26,0,0,13,0,0,13,0,4,13,0,0,13,0,-1,29,0,0,14,0,0,14,0,4,14,0,0,14,0,-1,31,0,0,15,0,0,15,0,4,15,0,0,15,0,-1,33,0,0,16,0,0,16,0,4,16,0,0,16,0,-1,37,0,0,17,0,0,17,0,4,17,0,0,17,0,-1,39,0,0,18,0,0,18,0,-3,63,0,-1,41,0,-2,42,0,0,19,0,0,19,0,4,19,0,0,19,0,-1,47,0,-1,48,0,-2,49,0,-4,35,0,0,21,0,0,21,0,0,21,0,0,22,0,0,22,0,0,22,0,0,23,0,0,23,0,0,23,0,0,25,0,0,25,0,0,26,0,0,26,0,0,27,0,0,27,0,0,28,0,0,28,0,0,29,0,0,29,0,0,30,0,0,30,0,0,31,0,0,31,0,0,32,0,0,32,0,0,33,0,0,33,0,-1,68,0,15,60,0,16,58,0,17,57,0,18,56,0,19,55,0,20,54,0,21,53,0,0,35,0,0,36,0,0,36,0,0,37,0,0,37,0,0,38,0,-2,59,0,0,39,0,0,39,0,0,40,0,0,40,0,0,41,0,-2,61,0,0,42,0,-2,62,0,0,43,0,-2,64,0,0,44,0,0,44,0,0,45,0,-2,66,0,0,46,0,0,46,0,0,47,0,0,47,0,0,48,0,-1,50,0,-1,52,0,11,68,0,22,20,1,8,20,2,8,9,34,8,35,58,23,59,60,24,67,60,25,65,60,26,63,175],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,64,65,66,67],[1,2,5,6,7,1,27,1,2,5,6,7,1,2,5,6,7,1,1,2,5,6,7,1,2,5,6,7,1,1,2,5,6,7,1,1,1,1,1,1,2,5,6,7,28,29,30,1,2,1,2],[0,0,0,1,2,3,14,0,0,0,1,2,0,0,0,1,2,3,0,0,0,1,2,0,0,0,1,2,3,0,0,0,1,2,3,3,6,4,4,0,0,0,1,2,15,16,6,7,4,7,4]],[[{"fmt":"0","w":0,"h":0}],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["54TknWPwVPqJqeCR+Y/Czo"]}],[2],0,[],[],[]],[[{"name":"default_btn_pressed","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"texture":"544e49d6-3f05-4fa8-9a9e-091f98fc2ce8@6c48a","packable":true}],[3],0,[0],[3],[17]],[[{"fmt":"0","w":0,"h":0}],[1],0,[],[],[]],[[{"fmt":"0","w":0,"h":0}],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["95EkngnxZFbYuFpsqVTaFr"]}],[2],0,[],[],[]],[[{"name":"default_btn_disabled","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"texture":"951249e0-9f16-456d-8b85-a6ca954da16b@6c48a","packable":true}],[3],0,[0],[3],[18]],[[[32,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[9,10],[19,5]],[[{"fmt":"0","w":0,"h":0}],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["bdG8q6vX1KcbFDmXyII4Pk"]}],[2],0,[],[],[]],[[{"name":"default_editbox_bg","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"texture":"bd1bcaba-bd7d-4a71-b143-997c882383e4@6c48a","packable":true}],[3],0,[0],[3],[20]],[[[78,"mc","\nmc.png\nsize: 459,1032\nformat: RGBA8888\nfilter: Linear,Linear\nrepeat: none\narm\n  rotate: true\n  xy: 126, 3\n  size: 17, 47\n  orig: 17, 48\n  offset: 0, 0\n  index: -1\narrow\n  rotate: true\n  xy: 418, 848\n  size: 73, 13\n  orig: 75, 15\n  offset: 1, 1\n  index: -1\nbody\n  rotate: true\n  xy: 319, 136\n  size: 105, 79\n  orig: 105, 80\n  offset: 0, 1\n  index: -1\nbody2\n  rotate: false\n  xy: 317, 56\n  size: 103, 78\n  orig: 105, 80\n  offset: 1, 1\n  index: -1\nbow\n  rotate: true\n  xy: 374, 11\n  size: 27, 47\n  orig: 28, 48\n  offset: 0, 0\n  index: -1\nburst1\n  rotate: true\n  xy: 2, 261\n  size: 370, 188\n  orig: 376, 189\n  offset: 6, 1\n  index: -1\nburst2\n  rotate: false\n  xy: 2, 841\n  size: 376, 189\n  orig: 376, 189\n  offset: 0, 0\n  index: -1\nburst3\n  rotate: true\n  xy: 192, 280\n  size: 351, 195\n  orig: 352, 196\n  offset: 1, 1\n  index: -1\nburst4\n  rotate: false\n  xy: 2, 633\n  size: 358, 206\n  orig: 360, 206\n  offset: 1, 0\n  index: -1\ncrossbow\n  rotate: true\n  xy: 389, 502\n  size: 146, 55\n  orig: 148, 57\n  offset: 1, 1\n  index: -1\neye\n  rotate: false\n  xy: 419, 323\n  size: 10, 10\n  orig: 10, 10\n  offset: 0, 0\n  index: -1\nfx1\n  rotate: true\n  xy: 418, 923\n  size: 107, 39\n  orig: 109, 41\n  offset: 1, 1\n  index: -1\nfx2\n  rotate: false\n  xy: 389, 381\n  size: 34, 119\n  orig: 35, 121\n  offset: 1, 1\n  index: -1\nfx3\n  rotate: false\n  xy: 433, 858\n  size: 19, 63\n  orig: 19, 63\n  offset: 0, 0\n  index: -1\nfx4\n  rotate: false\n  xy: 175, 3\n  size: 6, 17\n  orig: 6, 19\n  offset: 0, 1\n  index: -1\nglasses\n  rotate: true\n  xy: 389, 321\n  size: 58, 28\n  orig: 58, 28\n  offset: 0, 0\n  index: -1\nhead\n  rotate: false\n  xy: 183, 140\n  size: 134, 101\n  orig: 134, 101\n  offset: 0, 0\n  index: -1\nhead2\n  rotate: false\n  xy: 183, 39\n  size: 132, 99\n  orig: 134, 101\n  offset: 1, 1\n  index: -1\nheal1\n  rotate: true\n  xy: 380, 841\n  size: 189, 36\n  orig: 191, 38\n  offset: 1, 1\n  index: -1\nheal2\n  rotate: true\n  xy: 362, 650\n  size: 189, 36\n  orig: 191, 38\n  offset: 1, 1\n  index: -1\nheal3a\n  rotate: false\n  xy: 192, 243\n  size: 189, 35\n  orig: 191, 38\n  offset: 1, 1\n  index: -1\nheal3b\n  rotate: false\n  xy: 183, 2\n  size: 189, 35\n  orig: 191, 38\n  offset: 1, 2\n  index: -1\nheal3c\n  rotate: false\n  xy: 2, 22\n  size: 179, 237\n  orig: 179, 251\n  offset: 0, 0\n  index: -1\nheal4\n  rotate: true\n  xy: 317, 40\n  size: 14, 97\n  orig: 16, 103\n  offset: 1, 3\n  index: -1\nheal5\n  rotate: false\n  xy: 389, 290\n  size: 29, 29\n  orig: 29, 29\n  offset: 0, 0\n  index: -1\nheal6\n  rotate: false\n  xy: 425, 422\n  size: 18, 18\n  orig: 20, 20\n  offset: 1, 1\n  index: -1\nleg_L\n  rotate: false\n  xy: 433, 472\n  size: 19, 28\n  orig: 19, 28\n  offset: 0, 0\n  index: -1\nleg_R\n  rotate: false\n  xy: 433, 442\n  size: 19, 28\n  orig: 19, 28\n  offset: 0, 0\n  index: -1\nlight\n  rotate: false\n  xy: 419, 335\n  size: 38, 44\n  orig: 38, 44\n  offset: 0, 0\n  index: -1\nmouth\n  rotate: false\n  xy: 362, 640\n  size: 21, 8\n  orig: 21, 8\n  offset: 0, 0\n  index: -1\nshadow\n  rotate: false\n  xy: 2, 2\n  size: 122, 18\n  orig: 124, 20\n  offset: 1, 1\n  index: -1\nstake\n  rotate: true\n  xy: 425, 452\n  size: 48, 6\n  orig: 50, 8\n  offset: 1, 1\n  index: -1\nstring\n  rotate: false\n  xy: 454, 876\n  size: 1, 45\n  orig: 3, 47\n  offset: 1, 1\n  index: -1\ntrail\n  rotate: true\n  xy: 400, 655\n  size: 184, 25\n  orig: 190, 71\n  offset: 5, 23\n  index: -1\n",["mc.png"],{"skeleton":{"hash":"RU+X/8sDEPLVc9ioUt6+f142yQs","spine":"3.8.97","x":-68.41,"y":-10.05,"width":155.79,"height":164.67,"images":"./images/","audio":"E:/krou/What we do in the shadows"},"bones":[{"name":"root","scaleX":0.3,"scaleY":0.3},{"name":"bone","parent":"root","y":41.98},{"name":"torso","parent":"bone","length":24.07,"rotation":90,"y":0.57},{"name":"torso1","parent":"torso","length":24.07,"x":24.07},{"name":"torso2","parent":"torso1","length":24.07,"x":24.07},{"name":"torso3","parent":"torso2","length":24.07,"x":24.07},{"name":"torso4","parent":"torso3","length":24.07,"x":24.07},{"name":"torso5","parent":"torso4","length":24.07,"x":24.07},{"name":"head","parent":"torso5","length":44.57,"x":47.09},{"name":"head1","parent":"head","length":44.57,"x":44.57},{"name":"head2","parent":"head1","length":44.57,"x":44.57},{"name":"glasses","parent":"head2","rotation":90,"x":31.86,"y":-100.9,"transform":"noRotationOrReflection"},{"name":"armR","parent":"torso5","length":23.75,"rotation":-90,"x":17.62,"y":144.22,"transform":"noRotationOrReflection"},{"name":"armR2","parent":"armR","length":23.75,"x":23.75},{"name":"armR3","parent":"armR2","length":23.75,"x":23.75},{"name":"armR4","parent":"armR3","length":23.75,"x":23.75},{"name":"armR5","parent":"armR4","length":23.75,"x":23.75},{"name":"legR","parent":"bone","length":19.51,"rotation":-90,"x":-75,"y":26.64},{"name":"legL","parent":"bone","length":19.51,"rotation":-90,"x":76.78,"y":26.64},{"name":"armL","parent":"torso5","length":23.75,"rotation":-90,"x":17.62,"y":-147.92,"transform":"noRotationOrReflection"},{"name":"armL2","parent":"armL","length":23.75,"x":23.75},{"name":"armL3","parent":"armL2","length":23.75,"x":23.75},{"name":"armL4","parent":"armL3","length":23.75,"x":23.75},{"name":"armL5","parent":"armL4","length":23.75,"x":23.75},{"name":"head3","parent":"head2","length":44.57,"x":44.57},{"name":"head4","parent":"head3","length":44.57,"x":44.57},{"name":"legR2","parent":"legR","length":19.51,"x":19.51},{"name":"legR3","parent":"legR2","length":19.51,"x":19.51},{"name":"legL2","parent":"legL","length":19.51,"x":19.51},{"name":"legL3","parent":"legL2","length":19.51,"x":19.51},{"name":"chest","parent":"torso3","x":-4.17,"y":-88.03},{"name":"head5","parent":"head4","length":44.57,"x":44.57},{"name":"shoulder","parent":"armR","rotation":-90,"transform":"noRotationOrReflection"},{"name":"shadow","parent":"bone","y":-41.98},{"name":"glare","parent":"glasses","x":19.79,"y":-0.36},{"name":"stakeR","parent":"armR5","length":20.88,"rotation":82.48,"x":23.68,"y":-0.3},{"name":"stakeL","parent":"armL5","length":20.88,"rotation":82.48,"x":23.68,"y":0.02},{"name":"fx","parent":"root","x":257.27,"y":152.12},{"name":"1","parent":"fx","length":321.65,"rotation":180,"x":-23.78},{"name":"explosion","parent":"fx"},{"name":"2","parent":"explosion"},{"name":"3","parent":"explosion"},{"name":"particle1","parent":"explosion","rotation":90},{"name":"4","parent":"particle1","length":42.54,"x":19.26},{"name":"particle2","parent":"explosion","rotation":66.9},{"name":"5","parent":"particle2","length":42.54,"x":19.26,"scaleX":0.6769},{"name":"particle3","parent":"explosion","rotation":-6.46},{"name":"6","parent":"particle3","length":42.54,"x":19.26,"scaleX":0.7067},{"name":"particle4","parent":"explosion","rotation":-40.8},{"name":"7","parent":"particle4","length":42.54,"x":19.26,"scaleX":0.5655},{"name":"particle5","parent":"explosion","rotation":-60.13},{"name":"8","parent":"particle5","length":42.54,"x":19.26,"scaleX":0.8314},{"name":"particle6","parent":"explosion","rotation":-93.23},{"name":"9","parent":"particle6","length":42.54,"x":19.26},{"name":"particle7","parent":"explosion","rotation":-127.25},{"name":"10","parent":"particle7","length":42.54,"x":19.26,"scaleX":0.6902},{"name":"particle8","parent":"explosion","rotation":130.63},{"name":"11","parent":"particle8","length":42.54,"x":19.26,"scaleX":0.88},{"name":"1b","parent":"fx","length":321.65,"rotation":180,"x":-23.78},{"name":"crossbow","parent":"armR5","length":100,"rotation":90,"x":-51.48,"y":-395.79},{"name":"bow2_1","parent":"crossbow","length":24.79,"rotation":-95.96,"x":234.34,"y":34.83},{"name":"bow2_2","parent":"bow2_1","length":20.37,"rotation":-10.83,"x":24.83,"y":-0.37},{"name":"bow2_3","parent":"bow2_2","length":18.93,"rotation":-9.77,"x":20.37},{"name":"bow2_4","parent":"bow2_3","length":17.17,"rotation":-4.4,"x":18.93},{"name":"bow2_5","parent":"bow2_4","length":17.67,"rotation":-4.71,"x":17.17},{"name":"bow2_6","parent":"bow2_5","length":16.21,"rotation":-3.8,"x":17.67},{"name":"bow2_7","parent":"bow2_6","length":17.45,"rotation":-2.96,"x":16.21},{"name":"bow2_8","parent":"bow2_7","length":16.94,"rotation":8.06,"x":17.45},{"name":"bow1_1","parent":"crossbow","length":24.79,"rotation":-85.07,"x":234.34,"y":50.28,"scaleX":-1},{"name":"bow1_2","parent":"bow1_1","length":20.37,"rotation":-10.83,"x":24.83,"y":-0.37},{"name":"bow1_3","parent":"bow1_2","length":18.93,"rotation":-9.77,"x":20.37},{"name":"bow1_4","parent":"bow1_3","length":17.17,"rotation":-4.4,"x":18.93},{"name":"bow1_5","parent":"bow1_4","length":17.67,"rotation":-4.71,"x":17.17},{"name":"bow1_6","parent":"bow1_5","length":16.21,"rotation":-3.8,"x":17.67},{"name":"bow1_7","parent":"bow1_6","length":17.45,"rotation":-2.96,"x":16.21},{"name":"bow1_8","parent":"bow1_7","length":16.94,"rotation":8.06,"x":17.45},{"name":"string1","parent":"bow1_8","length":146.02,"rotation":-146.66,"x":29.06,"y":2.06,"scaleX":0.9209},{"name":"string2","parent":"bow2_8","length":146.02,"rotation":34.46,"x":16.88,"y":-3.17,"scaleX":-1},{"name":"arrow","parent":"crossbow","length":100,"x":23.84,"y":60.71},{"name":"burst","parent":"root"},{"name":"1c","parent":"fx","length":321.65,"rotation":180,"x":-23.78},{"name":"heal","parent":"root"},{"name":"heal1","parent":"heal"},{"name":"heal2","parent":"heal"},{"name":"heal3","parent":"heal"},{"name":"heal4","parent":"heal","x":31.27,"y":114.39},{"name":"heal5","parent":"heal","x":-14.5,"y":9.43},{"name":"heal6","parent":"heal","y":-24.97,"scaleX":0.7545,"scaleY":0.7545},{"name":"heal1b","parent":"heal"},{"name":"heal2b","parent":"heal"},{"name":"heal1c","parent":"heal"},{"name":"heal2c","parent":"heal"},{"name":"heal4b","parent":"heal","x":-260.17,"y":132.98,"scaleX":0.7385,"scaleY":0.871},{"name":"heal4b2","parent":"heal","x":-166.46,"y":116.08,"scaleX":0.6914,"scaleY":0.6914},{"name":"heal4b3","parent":"heal","x":-79.43,"y":96.64,"scaleX":0.6018,"scaleY":0.8154},{"name":"heal4b4","parent":"heal","x":122.75,"y":89.04,"scaleX":0.6366,"scaleY":0.8071},{"name":"heal4b5","parent":"heal","x":235.28,"y":167.62,"scaleX":0.7549},{"name":"heal4b6","parent":"heal","x":-223.69,"y":122.84,"scaleX":0.4802,"scaleY":0.7348},{"name":"heal5b","parent":"heal","x":-230.95,"y":50.69,"scaleX":0.829,"scaleY":0.829},{"name":"heal5b2","parent":"heal","x":-105.57,"y":4.2,"scaleX":0.7052,"scaleY":0.7052},{"name":"heal5b3","parent":"heal","x":139.47,"y":8.12,"scaleX":0.8227,"scaleY":0.8227},{"name":"heal5b4","parent":"heal","x":200.59,"y":43.37,"scaleX":0.6863,"scaleY":0.6863},{"name":"heal5b5","parent":"heal","x":-250.89,"y":14.41,"scaleX":0.5263,"scaleY":0.5263},{"name":"heal5b6","parent":"heal","x":247.5,"y":13.29,"scaleX":0.4993,"scaleY":0.4993},{"name":"heal6b","parent":"heal","x":-231.92,"y":14.47,"scaleX":0.5482,"scaleY":0.5482},{"name":"heal6b2","parent":"heal","x":-162.17,"y":-9.8,"scaleX":0.3144,"scaleY":0.3144},{"name":"heal6b3","parent":"heal","x":-89.15,"y":-11.6,"scaleX":0.5963,"scaleY":0.5963},{"name":"heal6b4","parent":"heal","x":52.95,"y":21.98},{"name":"heal6b5","parent":"heal","x":158.38,"scaleX":0.4682,"scaleY":0.4682},{"name":"heal6b6","parent":"heal","x":221.88,"y":18.72,"scaleX":0.56,"scaleY":0.56},{"name":"heal3b","parent":"heal"},{"name":"heal3c","parent":"heal"},{"name":"heal2d","parent":"heal"},{"name":"heal1d","parent":"heal"},{"name":"heal7","parent":"heal"}],"slots":[{"name":"bg","bone":"root","color":"ff00ffff"},{"name":"trail","bone":"root"},{"name":"heal3b","bone":"heal3","dark":"000000"},{"name":"heal3b2","bone":"heal3b","dark":"000000"},{"name":"heal3b3","bone":"heal3c","dark":"000000"},{"name":"heal4b5","bone":"heal4b5"},{"name":"heal4b6","bone":"heal4b6"},{"name":"heal5b6","bone":"heal5b6"},{"name":"heal5b4","bone":"heal5b4"},{"name":"heal5b","bone":"heal5b"},{"name":"heal6b","bone":"heal6b"},{"name":"heal6b6","bone":"heal6b6"},{"name":"heal1","bone":"heal1","dark":"000000"},{"name":"heal3","bone":"heal7","dark":"000000"},{"name":"heal1b","bone":"heal1b","dark":"000000"},{"name":"heal1c","bone":"heal1c","dark":"000000"},{"name":"heal1d","bone":"heal1d"},{"name":"heal2","bone":"heal2","dark":"000000"},{"name":"heal2b","bone":"heal2b","dark":"000000"},{"name":"heal2c","bone":"heal2c","dark":"000000"},{"name":"heal2d","bone":"heal2d"},{"name":"shadow","bone":"shadow","attachment":"shadow"},{"name":"arm2","bone":"armL","attachment":"arm"},{"name":"stake2","bone":"stakeL","attachment":"stake"},{"name":"leg_R","bone":"legR","attachment":"leg_R"},{"name":"leg_L","bone":"legL","attachment":"leg_L"},{"name":"arrow3","bone":"arrow"},{"name":"arrow2","bone":"arrow"},{"name":"fx12","bone":"1b"},{"name":"fx13","bone":"1c"},{"name":"body","bone":"torso","attachment":"body"},{"name":"head","bone":"head","attachment":"head"},{"name":"glasses","bone":"glasses","attachment":"glasses"},{"name":"glare","bone":"glasses","attachment":"glare"},{"name":"light","bone":"glare","attachment":"light"},{"name":"glare2","bone":"glasses","attachment":"glare"},{"name":"light2","bone":"glare","attachment":"light"},{"name":"stake","bone":"stakeR","attachment":"stake"},{"name":"bow1","bone":"bow1_1"},{"name":"crossbow","bone":"crossbow"},{"name":"string","bone":"string1"},{"name":"string2","bone":"string2"},{"name":"bow2","bone":"bow2_1"},{"name":"arrow","bone":"arrow"},{"name":"arm","bone":"armR","attachment":"arm"},{"name":"fx3","bone":"3"},{"name":"fx4","bone":"4"},{"name":"fx5","bone":"5"},{"name":"fx6","bone":"6"},{"name":"fx7","bone":"7"},{"name":"fx8","bone":"8"},{"name":"fx9","bone":"9"},{"name":"fx10","bone":"10"},{"name":"fx11","bone":"11"},{"name":"fx2","bone":"2"},{"name":"fx1","bone":"1"},{"name":"eye","bone":"head2"},{"name":"eye2","bone":"head2"},{"name":"mouth","bone":"head"},{"name":"burst","bone":"burst"},{"name":"heal3a","bone":"heal3","dark":"000000"},{"name":"heal3a2","bone":"heal3b","dark":"000000"},{"name":"heal3a3","bone":"heal3c","dark":"000000"},{"name":"heal4b2","bone":"heal4b2"},{"name":"heal6b2","bone":"heal6b2"},{"name":"heal4","bone":"heal4"},{"name":"heal4b","bone":"heal4b"},{"name":"heal4b3","bone":"heal4b3"},{"name":"heal4b4","bone":"heal4b4"},{"name":"heal5","bone":"heal5"},{"name":"heal5b2","bone":"heal5b2"},{"name":"heal5b3","bone":"heal5b3"},{"name":"heal5b5","bone":"heal5b5"},{"name":"heal6","bone":"heal6"},{"name":"heal6b3","bone":"heal6b3"},{"name":"heal6b4","bone":"heal6b4"},{"name":"heal6b5","bone":"heal6b5"}],"skins":[{"name":"default","attachments":{"arm":{"arm":{"type":"mesh","hull":42,"width":57,"height":159,"uvs":[0.60478,0.02114,0.75648,0.05164,0.8598,0.09102,0.93,0.14464,0.94886,0.20676,0.9329,0.2705,0.91235,0.34597,0.89491,0.41512,0.87727,0.49063,0.85982,0.56635,0.84023,0.6372,0.82326,0.71152,0.80655,0.78571,0.78955,0.85121,0.7721,0.91249,0.68306,0.95842,0.54761,0.98172,0.44261,0.98171,0.31734,0.95841,0.22789,0.91248,0.20939,0.85269,0.20157,0.82112,0.19291,0.78617,0.18547,0.75352,0.17623,0.71295,0.16826,0.67797,0.15879,0.63638,0.15016,0.60362,0.14028,0.5661,0.13206,0.53076,0.12273,0.49063,0.11327,0.45482,0.10326,0.41695,0.09568,0.38248,0.08765,0.34597,0.07882,0.30819,0.07,0.27047,0.05565,0.20811,0.07,0.14464,0.1402,0.09102,0.24817,0.05164,0.39522,0.02114,0.49546,0.15403,0.43168,0.07099,0.20712,0.15431,0.25764,0.11567,0.33287,0.08508,0.56428,0.07037,0.66634,0.08508,0.73708,0.11366,0.79771,0.15351,0.81017,0.20613,0.19156,0.20898,0.20375,0.26742,0.21947,0.34231,0.23743,0.41353,0.25389,0.48739,0.27224,0.56286,0.29133,0.63247,0.32387,0.78227,0.34185,0.84927,0.36199,0.89828,0.41027,0.92128,0.49231,0.93338,0.58662,0.92211,0.63941,0.89831,0.65847,0.84848,0.67308,0.78175,0.30817,0.70918,0.69108,0.70763,0.798,0.2675,0.77995,0.34239,0.76264,0.41292,0.74642,0.48661,0.72506,0.56229,0.70737,0.63282,0.21471,0.30656,0.23068,0.38096,0.24504,0.45136,0.26739,0.52805,0.28176,0.59959,0.30092,0.67496,0.32008,0.75051,0.33285,0.8169],"triangles":[12,67,69,59,82,67,23,82,59,22,23,59,83,59,67,21,22,59,21,59,83,66,83,67,13,66,67,60,83,66,12,13,67,20,21,83,20,83,60,61,60,66,65,61,66,61,19,20,61,20,60,13,65,66,14,65,13,64,62,61,65,64,61,63,62,64,18,19,61,18,61,62,15,65,14,64,65,15,17,62,63,18,62,17,16,63,64,16,64,15,17,63,16,75,58,80,74,75,80,10,75,74,26,27,80,26,80,58,81,58,75,25,26,58,81,25,58,69,81,75,69,75,10,68,81,69,11,69,10,24,25,81,24,81,68,82,68,69,23,24,68,23,68,82,67,82,69,11,12,69,8,73,72,56,78,73,30,31,78,30,78,56,79,56,73,29,30,56,29,56,79,74,79,73,57,79,74,28,29,79,57,28,79,9,73,8,74,73,9,80,57,74,27,28,57,27,57,80,9,10,74,70,54,76,71,54,70,6,71,70,34,35,76,34,76,54,77,54,71,33,34,54,33,54,77,72,77,71,7,72,71,55,77,72,6,7,71,32,33,77,32,77,55,78,55,72,31,32,55,31,55,78,73,78,72,7,8,72,47,41,0,48,47,0,43,41,47,46,40,41,43,46,41,1,48,0,49,48,1,45,39,40,2,49,1,46,45,40,44,38,39,50,49,2,3,50,2,42,43,47,42,47,48,42,48,49,46,43,42,45,46,42,45,44,39,51,50,3,51,3,4,37,38,44,52,37,44,42,53,52,44,45,42,42,52,44,51,49,50,5,70,51,36,37,52,36,52,53,4,5,51,70,76,53,35,36,53,35,53,76,49,70,42,51,70,49,53,42,70,5,6,70],"vertices":[1,12,-21.01,6.2,1,1,12,-16.16,14.85,1,2,12,-9.9,20.74,0.99908,13,-33.65,20.74,0.00092,2,12,-1.38,24.74,0.97915,13,-25.12,24.74,0.02085,2,12,8.5,25.81,0.89606,13,-15.25,25.81,0.10394,3,12,18.63,24.9,0.67456,13,-5.11,24.9,0.3234,14,-28.86,24.9,0.00203,3,12,30.63,23.73,0.26553,13,6.89,23.73,0.67587,14,-16.86,23.73,0.05859,4,12,41.63,22.74,0.04559,13,17.88,22.74,0.67032,14,-5.86,22.74,0.28408,15,-29.61,22.74,0,4,12,53.63,21.73,0.0003,13,29.89,21.73,0.28531,14,6.14,21.73,0.68365,15,-17.6,21.73,0.03074,3,13,41.93,20.74,0.03868,14,18.18,20.74,0.6922,15,-5.56,20.74,0.26913,4,13,53.19,19.62,0.00025,14,29.45,19.62,0.27267,15,5.7,19.62,0.71261,16,-18.04,19.62,0.01446,3,14,41.27,18.65,0.02317,15,17.52,18.65,0.7561,16,-6.23,18.65,0.22072,2,15,29.32,17.7,0.26095,16,5.57,17.7,0.73905,2,15,39.73,16.73,0.0237,16,15.99,16.73,0.9763,1,16,25.73,15.74,1,1,16,33.03,10.66,1,1,16,36.74,2.94,1,1,16,36.73,-3.04,1,1,16,33.03,-10.18,1,1,16,25.73,-15.28,1,2,15,39.96,-16.34,0.01688,16,16.22,-16.34,0.98312,2,15,34.95,-16.78,0.12698,16,11.2,-16.78,0.87302,2,15,29.39,-17.28,0.24886,16,5.64,-17.28,0.75114,3,14,47.94,-17.7,0.01121,15,24.2,-17.7,0.47457,16,0.45,-17.7,0.51423,3,14,41.49,-18.23,0.02513,15,17.75,-18.23,0.75506,16,-6,-18.23,0.21981,4,13,59.67,-18.68,0.00009,14,35.93,-18.68,0.14059,15,12.18,-18.68,0.73526,16,-11.56,-18.68,0.12406,4,13,53.06,-19.22,0.0002,14,29.32,-19.22,0.27781,15,5.57,-19.22,0.71174,16,-18.17,-19.22,0.01025,4,13,47.85,-19.71,0.018,14,24.11,-19.71,0.46423,15,0.36,-19.71,0.5123,16,-23.38,-19.71,0.00547,3,13,41.89,-20.28,0.03838,14,18.14,-20.28,0.67773,15,-5.6,-20.28,0.28389,4,12,60.01,-20.74,0.00003,13,36.27,-20.74,0.15897,14,12.52,-20.74,0.67163,15,-11.22,-20.74,0.16937,4,12,53.63,-21.28,0.00007,13,29.89,-21.28,0.29589,14,6.14,-21.28,0.6647,15,-17.6,-21.28,0.03934,4,12,47.94,-21.82,0.01719,13,24.2,-21.82,0.48927,14,0.45,-21.82,0.47316,15,-23.3,-21.82,0.02039,4,12,41.92,-22.39,0.0353,13,18.17,-22.39,0.6938,14,-5.57,-22.39,0.27056,15,-29.32,-22.39,0.00034,4,12,36.44,-22.82,0.13823,13,12.69,-22.82,0.69956,14,-11.05,-22.82,0.16204,15,-34.8,-22.82,0.00017,3,12,30.63,-23.28,0.24725,13,6.89,-23.28,0.70565,14,-16.86,-23.28,0.0471,3,12,24.63,-23.78,0.45609,13,0.88,-23.78,0.52002,14,-22.87,-23.78,0.02389,3,12,18.63,-24.28,0.66458,13,-5.12,-24.28,0.3347,14,-28.86,-24.28,0.00072,2,12,8.71,-25.1,0.89375,13,-15.03,-25.1,0.10625,2,12,-1.38,-24.28,0.98093,13,-25.12,-24.28,0.01907,2,12,-9.9,-20.28,0.9994,13,-33.65,-20.28,0.0006,1,12,-16.16,-14.13,1,1,12,-21.01,-5.74,1,1,12,0.11,-0.03,1,1,12,-13.09,-3.67,1,2,12,0.16,-16.47,0.98548,13,-23.59,-16.47,0.01452,2,12,-5.98,-13.59,0.9992,13,-29.73,-13.59,0.0008,1,12,-10.85,-9.3,1,1,12,-13.19,3.89,1,1,12,-10.85,9.71,1,2,12,-6.3,13.74,0.99918,13,-30.05,13.74,0.00082,2,12,0.03,17.2,0.98404,13,-23.71,17.2,0.01596,2,12,8.4,17.91,0.9166,13,-15.35,17.91,0.0834,2,12,8.85,-17.35,0.91205,13,-14.89,-17.35,0.08795,3,12,18.14,-16.66,0.69423,13,-5.6,-16.66,0.30556,14,-29.35,-16.66,0.00021,3,12,30.05,-15.76,0.2259,13,6.31,-15.76,0.74167,14,-17.44,-15.76,0.03242,4,12,41.38,-14.74,0.02304,13,17.63,-14.74,0.74142,14,-6.12,-14.74,0.23554,15,-29.86,-14.74,0.00001,3,13,29.37,-13.8,0.26239,14,5.63,-13.8,0.71163,15,-18.12,-13.8,0.02598,3,13,41.37,-12.75,0.02378,14,17.63,-12.75,0.73183,15,-6.12,-12.75,0.24439,3,14,28.7,-11.67,0.24578,15,4.95,-11.67,0.7502,16,-18.8,-11.67,0.00402,2,15,28.77,-9.81,0.19773,16,5.02,-9.81,0.80227,2,15,39.42,-8.79,0.00553,16,15.68,-8.79,0.99447,1,16,23.47,-7.64,1,1,16,27.13,-4.89,1,1,16,29.05,-0.21,1,1,16,27.26,5.17,1,1,16,23.47,8.17,1,2,15,39.3,9.26,0.00934,16,15.55,9.26,0.99066,2,15,28.69,10.09,0.21434,16,4.94,10.09,0.78566,3,14,40.89,-10.71,0.01355,15,17.15,-10.71,0.8227,16,-6.6,-10.71,0.16375,3,14,40.65,11.12,0.0119,15,16.9,11.12,0.82238,16,-6.84,11.12,0.16572,3,12,18.16,17.21,0.69941,13,-5.59,17.21,0.29957,14,-29.33,17.21,0.00102,3,12,30.06,16.18,0.2416,13,6.32,16.18,0.71609,14,-17.43,16.18,0.04231,3,12,41.28,15.2,0.02991,13,17.53,15.2,0.71523,14,-6.21,15.2,0.25485,4,12,53,14.27,0.00004,13,29.25,14.27,0.26179,14,5.5,14.27,0.71953,15,-18.24,14.27,0.01864,3,13,41.28,13.06,0.02458,14,17.54,13.06,0.75395,15,-6.21,13.06,0.22146,3,14,28.75,12.05,0.23828,15,5.01,12.05,0.75531,16,-18.74,12.05,0.00641,3,12,24.37,-16.03,0.4495,13,0.62,-16.03,0.53345,14,-23.12,-16.03,0.01705,4,12,36.2,-15.12,0.11583,13,12.45,-15.12,0.74146,14,-11.29,-15.12,0.14271,15,-35.04,-15.12,0,4,12,47.39,-14.31,0.01128,13,23.64,-14.31,0.49618,14,-0.1,-14.31,0.47919,15,-23.85,-14.31,0.01334,3,13,35.84,-13.03,0.13382,14,12.09,-13.03,0.72269,15,-11.65,-13.03,0.14348,4,13,47.21,-12.21,0.01126,14,23.47,-12.21,0.4754,15,-0.28,-12.21,0.5112,16,-24.02,-12.21,0.00214,3,14,35.45,-11.12,0.11714,15,11.71,-11.12,0.79036,16,-12.04,-11.12,0.0925,3,14,47.46,-10.03,0.00589,15,23.72,-10.03,0.46943,16,-0.03,-10.03,0.52468,2,15,34.27,-9.3,0.0985,16,10.53,-9.3,0.9015],"edges":[0,2,82,0,80,82,78,80,2,4,26,28,38,40,76,78,4,6,36,38,28,30,34,36,30,32,32,34,72,74,74,76,6,8,8,10,68,70,70,72,64,66,66,68,60,62,62,64,56,58,58,60,52,54,54,56,48,50,50,52,44,46,46,48,40,42,42,44,10,12,12,14,14,16,16,18,18,20,20,22,22,24,24,26]}},"arm2":{"arm":{"type":"mesh","hull":42,"width":57,"height":159,"uvs":[0.60478,0.02114,0.75648,0.05164,0.8598,0.09102,0.93,0.14464,0.94886,0.20676,0.9329,0.2705,0.91235,0.34597,0.89491,0.41512,0.87727,0.49063,0.85982,0.56635,0.84023,0.6372,0.82326,0.71152,0.80655,0.78571,0.78955,0.85121,0.7721,0.91249,0.68306,0.95842,0.54761,0.98172,0.44261,0.98171,0.31734,0.95841,0.22789,0.91248,0.20939,0.85269,0.20157,0.82112,0.19291,0.78617,0.18547,0.75352,0.17623,0.71295,0.16826,0.67797,0.15879,0.63638,0.15016,0.60362,0.14028,0.5661,0.13206,0.53076,0.12273,0.49063,0.11327,0.45482,0.10326,0.41695,0.09568,0.38248,0.08765,0.34597,0.07882,0.30819,0.07,0.27047,0.05565,0.20811,0.07,0.14464,0.1402,0.09102,0.24817,0.05164,0.39522,0.02114,0.49546,0.15403,0.43168,0.07099,0.20712,0.15431,0.25764,0.11567,0.33287,0.08508,0.56428,0.07037,0.66634,0.08508,0.73708,0.11366,0.79771,0.15351,0.81017,0.20613,0.19156,0.20898,0.20375,0.26742,0.21947,0.34231,0.23743,0.41353,0.25389,0.48739,0.27224,0.56286,0.29133,0.63247,0.32387,0.78227,0.34185,0.84927,0.36199,0.89828,0.41027,0.92128,0.49231,0.93338,0.58662,0.92211,0.63941,0.89831,0.65847,0.84848,0.67308,0.78175,0.30817,0.70918,0.69108,0.70763,0.798,0.2675,0.77995,0.34239,0.76264,0.41292,0.74642,0.48661,0.72506,0.56229,0.70737,0.63282,0.21471,0.30656,0.23068,0.38096,0.24504,0.45136,0.26739,0.52805,0.28176,0.59959,0.30092,0.67496,0.32008,0.75051,0.33285,0.8169],"triangles":[12,67,69,59,82,67,23,82,59,22,23,59,83,59,67,21,22,59,21,59,83,66,83,67,13,66,67,60,83,66,12,13,67,20,21,83,20,83,60,61,60,66,65,61,66,61,19,20,61,20,60,13,65,66,14,65,13,64,62,61,65,64,61,63,62,64,18,19,61,18,61,62,15,65,14,64,65,15,17,62,63,18,62,17,16,63,64,16,64,15,17,63,16,75,58,80,74,75,80,10,75,74,26,27,80,26,80,58,81,58,75,25,26,58,81,25,58,69,81,75,69,75,10,68,81,69,11,69,10,24,25,81,24,81,68,82,68,69,23,24,68,23,68,82,67,82,69,11,12,69,8,73,72,56,78,73,30,31,78,30,78,56,79,56,73,29,30,56,29,56,79,74,79,73,57,79,74,28,29,79,57,28,79,9,73,8,74,73,9,80,57,74,27,28,57,27,57,80,9,10,74,70,54,76,71,54,70,6,71,70,34,35,76,34,76,54,77,54,71,33,34,54,33,54,77,72,77,71,7,72,71,55,77,72,6,7,71,32,33,77,32,77,55,78,55,72,31,32,55,31,55,78,73,78,72,7,8,72,47,41,0,48,47,0,43,41,47,46,40,41,43,46,41,1,48,0,49,48,1,45,39,40,2,49,1,46,45,40,44,38,39,50,49,2,3,50,2,42,43,47,42,47,48,42,48,49,46,43,42,45,46,42,45,44,39,51,50,3,51,3,4,37,38,44,52,37,44,42,53,52,44,45,42,42,52,44,51,49,50,5,70,51,36,37,52,36,52,53,4,5,51,70,76,53,35,36,53,35,53,76,49,70,42,51,70,49,53,42,70,5,6,70],"vertices":[1,19,-21.01,6.2,1,1,19,-16.16,14.85,1,2,19,-9.9,20.74,0.99908,20,-33.65,20.74,0.00092,2,19,-1.38,24.74,0.97915,20,-25.12,24.74,0.02085,2,19,8.5,25.81,0.89606,20,-15.25,25.81,0.10394,3,19,18.63,24.9,0.67456,20,-5.11,24.9,0.3234,21,-28.86,24.9,0.00203,3,19,30.63,23.73,0.26553,20,6.89,23.73,0.67587,21,-16.86,23.73,0.05859,4,19,41.63,22.74,0.04559,20,17.88,22.74,0.67032,21,-5.86,22.74,0.28408,22,-29.61,22.74,0,4,19,53.63,21.73,0.0003,20,29.89,21.73,0.28531,21,6.14,21.73,0.68365,22,-17.6,21.73,0.03074,3,20,41.93,20.74,0.03868,21,18.18,20.74,0.6922,22,-5.56,20.74,0.26913,4,20,53.19,19.62,0.00025,21,29.45,19.62,0.27267,22,5.7,19.62,0.71261,23,-18.04,19.62,0.01446,3,21,41.27,18.65,0.02317,22,17.52,18.65,0.7561,23,-6.23,18.65,0.22072,2,22,29.32,17.7,0.26095,23,5.57,17.7,0.73905,2,22,39.73,16.73,0.0237,23,15.99,16.73,0.9763,1,23,25.73,15.74,1,1,23,33.03,10.66,1,1,23,36.74,2.94,1,1,23,36.73,-3.04,1,1,23,33.03,-10.18,1,1,23,25.73,-15.28,1,2,22,39.96,-16.34,0.01688,23,16.22,-16.34,0.98312,2,22,34.95,-16.78,0.12698,23,11.2,-16.78,0.87302,2,22,29.39,-17.28,0.24886,23,5.64,-17.28,0.75114,3,21,47.94,-17.7,0.01121,22,24.2,-17.7,0.47457,23,0.45,-17.7,0.51423,3,21,41.49,-18.23,0.02513,22,17.75,-18.23,0.75506,23,-6,-18.23,0.21981,4,20,59.67,-18.68,0.00009,21,35.93,-18.68,0.14059,22,12.18,-18.68,0.73526,23,-11.56,-18.68,0.12406,4,20,53.06,-19.22,0.0002,21,29.32,-19.22,0.27781,22,5.57,-19.22,0.71174,23,-18.17,-19.22,0.01025,4,20,47.85,-19.71,0.018,21,24.11,-19.71,0.46423,22,0.36,-19.71,0.5123,23,-23.38,-19.71,0.00547,3,20,41.89,-20.28,0.03838,21,18.14,-20.28,0.67773,22,-5.6,-20.28,0.28389,4,19,60.01,-20.74,0.00003,20,36.27,-20.74,0.15897,21,12.52,-20.74,0.67163,22,-11.22,-20.74,0.16937,4,19,53.63,-21.28,0.00007,20,29.89,-21.28,0.29589,21,6.14,-21.28,0.6647,22,-17.6,-21.28,0.03934,4,19,47.94,-21.82,0.01719,20,24.2,-21.82,0.48927,21,0.45,-21.82,0.47316,22,-23.3,-21.82,0.02039,4,19,41.92,-22.39,0.0353,20,18.17,-22.39,0.6938,21,-5.57,-22.39,0.27056,22,-29.32,-22.39,0.00034,4,19,36.44,-22.82,0.13823,20,12.69,-22.82,0.69956,21,-11.05,-22.82,0.16204,22,-34.8,-22.82,0.00017,3,19,30.63,-23.28,0.24725,20,6.89,-23.28,0.70565,21,-16.86,-23.28,0.0471,3,19,24.63,-23.78,0.45609,20,0.88,-23.78,0.52002,21,-22.87,-23.78,0.02389,3,19,18.63,-24.28,0.66458,20,-5.12,-24.28,0.3347,21,-28.86,-24.28,0.00072,2,19,8.71,-25.1,0.89375,20,-15.03,-25.1,0.10625,2,19,-1.38,-24.28,0.98093,20,-25.12,-24.28,0.01907,2,19,-9.9,-20.28,0.9994,20,-33.65,-20.28,0.0006,1,19,-16.16,-14.13,1,1,19,-21.01,-5.74,1,1,19,0.11,-0.03,1,1,19,-13.09,-3.67,1,2,19,0.16,-16.47,0.98548,20,-23.59,-16.47,0.01452,2,19,-5.98,-13.59,0.9992,20,-29.73,-13.59,0.0008,1,19,-10.85,-9.3,1,1,19,-13.19,3.89,1,1,19,-10.85,9.71,1,2,19,-6.3,13.74,0.99918,20,-30.05,13.74,0.00082,2,19,0.03,17.2,0.98404,20,-23.71,17.2,0.01596,2,19,8.4,17.91,0.9166,20,-15.35,17.91,0.0834,2,19,8.85,-17.35,0.91205,20,-14.89,-17.35,0.08795,3,19,18.14,-16.66,0.69423,20,-5.6,-16.66,0.30556,21,-29.35,-16.66,0.00021,3,19,30.05,-15.76,0.2259,20,6.31,-15.76,0.74167,21,-17.44,-15.76,0.03242,4,19,41.38,-14.74,0.02304,20,17.63,-14.74,0.74142,21,-6.12,-14.74,0.23554,22,-29.86,-14.74,0.00001,3,20,29.37,-13.8,0.26239,21,5.63,-13.8,0.71163,22,-18.12,-13.8,0.02598,3,20,41.37,-12.75,0.02378,21,17.63,-12.75,0.73183,22,-6.12,-12.75,0.24439,3,21,28.7,-11.67,0.24578,22,4.95,-11.67,0.7502,23,-18.8,-11.67,0.00402,2,22,28.77,-9.81,0.19773,23,5.02,-9.81,0.80227,2,22,39.42,-8.79,0.00553,23,15.68,-8.79,0.99447,1,23,23.47,-7.64,1,1,23,27.13,-4.89,1,1,23,29.05,-0.21,1,1,23,27.26,5.17,1,1,23,23.47,8.17,1,2,22,39.3,9.26,0.00934,23,15.55,9.26,0.99066,2,22,28.69,10.09,0.21434,23,4.94,10.09,0.78566,3,21,40.89,-10.71,0.01355,22,17.15,-10.71,0.8227,23,-6.6,-10.71,0.16375,3,21,40.65,11.12,0.0119,22,16.9,11.12,0.82238,23,-6.84,11.12,0.16572,3,19,18.16,17.21,0.69941,20,-5.59,17.21,0.29957,21,-29.33,17.21,0.00102,3,19,30.06,16.18,0.2416,20,6.32,16.18,0.71609,21,-17.43,16.18,0.04231,3,19,41.28,15.2,0.02991,20,17.53,15.2,0.71523,21,-6.21,15.2,0.25485,4,19,53,14.27,0.00004,20,29.25,14.27,0.26179,21,5.5,14.27,0.71953,22,-18.24,14.27,0.01864,3,20,41.28,13.06,0.02458,21,17.54,13.06,0.75395,22,-6.21,13.06,0.22146,3,21,28.75,12.05,0.23828,22,5.01,12.05,0.75531,23,-18.74,12.05,0.00641,3,19,24.37,-16.03,0.4495,20,0.62,-16.03,0.53345,21,-23.12,-16.03,0.01705,4,19,36.2,-15.12,0.11583,20,12.45,-15.12,0.74146,21,-11.29,-15.12,0.14271,22,-35.04,-15.12,0,4,19,47.39,-14.31,0.01128,20,23.64,-14.31,0.49618,21,-0.1,-14.31,0.47919,22,-23.85,-14.31,0.01334,3,20,35.84,-13.03,0.13382,21,12.09,-13.03,0.72269,22,-11.65,-13.03,0.14348,4,20,47.21,-12.21,0.01126,21,23.47,-12.21,0.4754,22,-0.28,-12.21,0.5112,23,-24.02,-12.21,0.00214,3,21,35.45,-11.12,0.11714,22,11.71,-11.12,0.79036,23,-12.04,-11.12,0.0925,3,21,47.46,-10.03,0.00589,22,23.72,-10.03,0.46943,23,-0.03,-10.03,0.52468,2,22,34.27,-9.3,0.0985,23,10.53,-9.3,0.9015],"edges":[0,2,82,0,80,82,78,80,2,4,26,28,38,40,76,78,4,6,36,38,28,30,34,36,30,32,32,34,72,74,74,76,6,8,8,10,68,70,70,72,64,66,66,68,60,62,62,64,56,58,58,60,52,54,54,56,48,50,50,52,44,46,46,48,40,42,42,44,10,12,12,14,14,16,16,18,18,20,20,22,22,24,24,26]}},"arrow":{"arrow":{"x":113.72,"y":0.34,"width":251,"height":51}},"arrow2":{"arrow":{"x":78.13,"y":66.38,"rotation":5,"width":251,"height":51}},"arrow3":{"arrow":{"x":78.13,"y":-65.66,"rotation":-5,"width":251,"height":51}},"body":{"body":{"type":"mesh","hull":34,"width":351,"height":268,"uvs":[0.9492,0.90009,0.875,0.95013,0.75,0.97884,0.625,0.9864,0.5,0.9864,0.375,0.9864,0.25,0.97884,0.125,0.95164,0.06,0.91386,0.02192,0.83333,0.01447,0.74877,0.01292,0.7176,0.00989,0.66133,0.00643,0.59726,0.00601,0.53467,0.00553,0.46287,0.00608,0.39368,0.00668,0.31656,0.01169,0.24599,0.01731,0.16667,0.07385,0.00001,0.49135,0.00001,0.90885,0.00001,0.94695,0.08334,0.98506,0.16667,0.99072,0.28473,0.99078,0.36084,0.98995,0.42637,0.98955,0.50093,0.98859,0.56721,0.98809,0.63318,0.98543,0.69392,0.98276,0.73003,0.97386,0.82376,0.49438,0.75484,0.49438,0.78954,0.18583,0.73693,0.18413,0.77163,0.80977,0.73245,0.81233,0.76716,0.66276,0.74925,0.66361,0.78395,0.33059,0.74925,0.33059,0.78395,0.04312,0.72089,0.04512,0.75484,0.95965,0.70111,0.95894,0.73638,0.96598,0.28912,0.96597,0.42602,0.96495,0.56597,0.03731,0.59693,0.03359,0.46489,0.03633,0.31877,0.04639,0.17743,0.9536,0.17144,0.94354,0.26846,0.74719,0.31696,0.42683,0.31637,0.42097,0.35024,0.74606,0.71325,0.80944,0.67463,0.86677,0.60637,0.93806,0.39183,0.95563,0.34139,0.46339,0.42034,0.43928,0.38739,0.67365,0.68733,0.60186,0.63493,0.08201,0.883,0.13673,0.91371,0.25107,0.94187,0.37517,0.94827,0.50123,0.95211,0.62436,0.95083,0.74846,0.94059,0.86671,0.91115,0.05118,0.82945,0.93186,0.86665,0.94959,0.81648,0.74755,0.74108,0.89901,0.71759,0.90298,0.75043,0.74781,0.77583,0.61655,0.60665,0.84551,0.58287,0.90285,0.44813,0.92448,0.45414,0.88188,0.51164,0.90351,0.52365,0.50314,0.44727,0.48214,0.45892,0.55097,0.5331,0.53262,0.55112,0.70824,0.66698,0.78752,0.65067,0.82356,0.52194,0.87009,0.50048,0.74755,0.36746,0.66015,0.53779,0.57063,0.50392,0.65516,0.49104,0.82946,0.4756,0.76289,0.34245,0.73278,0.34305,0.913,0.38442,0.94112,0.30439,0.86246,0.33027,0.44904,0.34956,0.51336,0.42263,0.58233,0.46221,0.85975,0.30084,0.70743,0.44391,0.78265,0.43865,0.8017,0.4265,0.69064,0.42683,0.53995,0.32223,0.53958,0.34939,0.6444,0.34939,0.64365,0.31835,0.87626,0.44446,0.74857,0.56582,0.9673,0.50111,0.9675,0.36313,0.96378,0.63491,0.04,0.25016,0.03425,0.3968,0.03417,0.53677,0.0394,0.66115,0.23251,0.34803,0.28375,0.48735,0.34698,0.36155,0.40207,0.49958,0.15724,0.47685,0.11024,0.32956,0.20761,0.63255,0.3347,0.63924,0.45408,0.63972,0.24688,0.21896,0.76552,0.17697,0.57338,0.22651,0.85744,0.72551,0.86138,0.76023,0.58385,0.7521,0.58385,0.78831,0.93197,0.70956,0.93569,0.74332],"triangles":[133,134,129,126,134,133,133,129,130,135,133,130,124,62,50,102,114,120,97,102,120,86,97,120,88,97,86,102,113,114,96,102,97,96,113,102,89,86,87,88,86,89,99,101,112,121,112,113,121,113,96,99,112,121,85,96,97,85,97,88,62,85,88,62,88,89,100,101,99,84,100,99,92,100,84,50,62,89,68,92,84,85,95,121,85,121,96,94,99,121,94,121,95,84,99,94,61,95,85,61,85,62,67,84,94,68,84,67,124,145,62,62,141,61,60,94,95,145,81,62,81,141,62,38,61,141,60,38,80,61,60,95,38,60,61,67,143,68,68,34,137,82,141,81,39,38,141,39,141,142,80,38,39,83,80,39,67,94,60,60,40,67,80,40,60,83,40,80,55,23,24,139,21,22,139,22,23,139,23,55,54,19,20,138,20,21,54,20,138,140,21,139,58,138,21,18,19,54,125,18,54,55,111,139,56,55,24,25,56,24,56,111,55,140,58,21,139,119,140,138,134,54,134,125,54,48,56,25,106,111,56,106,56,48,17,18,125,57,139,111,57,119,139,53,17,125,116,58,140,116,140,119,53,125,134,107,111,106,64,106,48,103,57,111,103,111,107,104,119,57,104,57,103,129,134,138,131,129,138,118,119,104,116,108,58,117,108,116,138,58,131,59,58,108,64,48,25,26,64,25,59,131,58,123,64,26,98,104,103,105,107,106,105,106,64,63,105,64,66,59,108,123,63,64,16,17,53,126,16,53,126,53,134,109,65,108,66,108,65,117,109,108,49,63,123,27,123,26,49,123,27,114,103,107,98,103,114,115,118,104,115,104,98,113,98,114,112,115,98,113,112,98,120,107,105,114,107,120,90,65,109,86,120,105,87,86,105,63,87,105,49,87,63,91,65,90,116,118,117,118,116,119,101,110,118,110,117,118,109,117,110,15,16,126,130,129,131,115,101,118,101,115,112,66,132,131,66,131,59,132,66,65,130,131,132,110,90,109,50,122,29,89,87,122,132,65,91,27,122,49,122,87,49,27,28,122,100,90,110,92,90,100,93,90,92,91,90,93,29,122,28,101,100,110,93,132,91,127,52,133,52,126,133,50,89,122,14,15,52,14,52,127,30,50,29,93,92,68,136,130,132,135,130,136,93,137,132,136,132,137,68,137,93,52,15,126,13,14,127,13,127,51,51,133,135,128,51,135,12,13,51,12,51,128,31,124,30,11,12,128,51,127,133,124,50,30,82,142,141,46,124,31,46,145,124,36,44,128,11,128,44,32,46,31,47,145,46,47,46,32,135,36,128,146,145,47,81,145,146,10,11,44,42,135,136,36,135,42,82,81,146,40,143,67,143,34,68,45,44,36,10,44,45,37,45,36,37,36,42,41,40,83,34,43,42,37,42,43,41,144,143,41,143,40,34,143,144,35,34,144,79,146,47,33,47,32,77,45,37,9,10,45,79,82,146,35,43,34,137,42,136,42,137,34,79,47,33,9,45,77,79,78,82,69,77,37,33,0,78,33,78,79,78,76,142,78,142,82,39,142,76,70,69,37,8,77,69,9,77,8,75,83,39,75,39,76,71,37,43,70,37,71,72,43,35,71,43,72,0,1,76,0,76,78,74,144,41,41,83,75,7,69,70,8,69,7,73,35,144,73,144,74,72,35,73,6,70,71,6,71,72,7,70,6,1,2,75,1,75,76,5,6,72,4,5,72,73,4,72,74,2,3,75,74,41,2,74,75,73,74,3,4,73,3],"vertices":[2,2,-1.89,-159.68,0.96,30,-69.92,-71.64,0.04,1,2,-15.3,-133.63,1,1,2,-23,-89.76,1,1,2,-25.02,-45.88,1,1,2,-25.02,-2.01,1,1,2,-25.02,41.87,1,1,2,-23,85.74,1,1,2,-15.71,129.62,1,1,2,-5.58,152.43,1,2,2,16,165.8,0.79372,3,-8.07,165.8,0.20628,3,2,38.66,168.42,0.28806,3,14.6,168.42,0.5925,4,-9.47,168.42,0.11944,3,2,47.02,168.96,0.12321,3,22.95,168.96,0.54021,4,-1.12,168.96,0.33658,4,2,62.1,170.02,0.08253,3,38.03,170.02,0.31902,4,13.97,170.02,0.48445,5,-10.1,170.02,0.114,4,3,55.2,171.24,0.12284,4,31.14,171.24,0.50907,5,7.07,171.24,0.24067,6,-17,171.24,0.12743,4,3,71.98,171.38,0.06239,4,47.91,171.38,0.25605,5,23.84,171.38,0.48073,6,-0.22,171.38,0.20083,4,4,67.15,171.55,0.18769,5,43.09,171.55,0.28838,6,19.02,171.55,0.35294,7,-5.05,171.55,0.17099,4,4,85.69,171.36,0.088,5,61.63,171.36,0.1824,6,37.56,171.36,0.30272,7,13.49,171.36,0.42688,3,5,82.3,171.15,0.10055,6,58.23,171.15,0.0917,7,34.16,171.15,0.80774,2,7,53.08,169.39,0.66622,8,5.98,169.39,0.33378,2,7,74.33,167.42,0.216,8,27.24,167.42,0.784,1,8,71.91,147.57,1,1,8,71.91,1.03,1,1,8,71.91,-145.51,1,1,8,49.57,-158.89,1,1,8,27.24,-172.26,1,3,7,42.69,-174.25,0.73474,8,-4.4,-174.25,0.24926,30,95,-86.22,0.016,3,6,46.36,-174.27,0.09216,7,22.3,-174.27,0.86784,30,74.6,-86.24,0.04,3,6,28.8,-173.98,0.47182,7,4.73,-173.98,0.44018,30,57.04,-85.95,0.088,4,5,32.89,-173.84,0.22497,6,8.82,-173.84,0.56352,7,-15.25,-173.84,0.14168,30,37.06,-85.81,0.06983,4,4,39.19,-173.5,0.15552,5,15.12,-173.5,0.3647,6,-8.95,-173.5,0.31422,30,19.29,-85.47,0.16556,5,3,45.58,-173.33,0.14504,4,21.51,-173.33,0.36031,5,-2.56,-173.33,0.25662,6,-26.62,-173.33,0.07851,30,1.61,-85.3,0.15952,3,3,29.3,-172.39,0.498,4,5.23,-172.39,0.322,30,-14.67,-84.36,0.18,4,2,43.69,-171.45,0.05416,3,19.62,-171.45,0.55518,4,-4.45,-171.45,0.22291,30,-24.34,-83.42,0.16775,3,2,18.57,-168.33,0.71279,3,-5.5,-168.33,0.20721,30,-49.46,-80.3,0.08,4,2,37.04,-0.03,0.13678,3,12.97,-0.03,0.52495,4,-11.1,-0.03,0.08227,30,-30.99,88,0.256,3,2,27.74,-0.03,0.27497,3,3.67,-0.03,0.48503,30,-40.29,88,0.24,3,2,41.84,108.27,0.12114,3,17.77,108.27,0.60978,4,-6.3,108.27,0.26908,2,2,32.54,108.87,0.30495,3,8.47,108.87,0.69505,3,3,18.97,-110.73,0.37192,4,-5.1,-110.73,0.15863,30,-24.99,-22.7,0.46945,3,2,33.74,-111.63,0.10358,3,9.67,-111.63,0.44067,30,-34.29,-23.6,0.45576,4,2,38.54,-59.13,0.10263,3,14.47,-59.13,0.42876,4,-9.6,-59.13,0.10261,30,-29.49,28.9,0.366,3,2,29.24,-59.43,0.21929,3,5.17,-59.43,0.41564,30,-38.79,28.6,0.36507,4,2,38.54,57.46,0.14881,3,14.47,57.46,0.59307,4,-9.6,57.46,0.14612,30,-29.49,145.49,0.112,3,2,29.24,57.46,0.31319,3,5.17,57.46,0.57481,30,-38.79,145.49,0.112,3,2,46.14,158.36,0.14176,3,22.07,158.36,0.54079,4,-2,158.36,0.31745,3,2,37.04,157.66,0.31986,3,12.97,157.66,0.60534,4,-11.1,157.66,0.0748,3,3,27.37,-163.34,0.47968,4,3.3,-163.34,0.32841,30,-16.59,-75.31,0.19191,4,2,41.98,-163.09,0.07296,3,17.92,-163.09,0.57348,4,-6.15,-163.09,0.20015,30,-26.05,-75.06,0.15341,3,7,41.52,-165.56,0.46438,8,-5.58,-165.56,0.48144,30,93.82,-77.53,0.05418,3,6,28.89,-165.56,0.46827,7,4.83,-165.56,0.44373,30,57.13,-77.53,0.088,4,4,39.52,-165.2,0.16825,5,15.45,-165.2,0.39759,6,-8.61,-165.2,0.23431,30,19.62,-77.17,0.19986,4,3,55.29,160.4,0.11639,4,31.22,160.4,0.51111,5,7.16,160.4,0.2462,6,-16.91,160.4,0.12629,4,4,66.61,161.71,0.176,5,42.54,161.71,0.37914,6,18.48,161.71,0.29513,7,-5.59,161.71,0.14973,3,5,81.71,160.74,0.13403,6,57.64,160.74,0.12223,7,33.57,160.74,0.74374,2,7,71.45,157.21,0.216,8,24.36,157.21,0.784,1,8,25.96,-161.22,1,2,7,47.05,-157.69,0.45414,8,-0.04,-157.69,0.54586,2,7,34.05,-88.77,0.88869,8,-13.04,-88.77,0.11131,2,7,34.21,23.68,0.8637,8,-12.88,23.68,0.1363,2,7,25.14,25.74,0.736,8,-21.96,25.73,0.264,3,3,24.12,-88.37,0.33338,4,0.05,-88.37,0.23386,30,-19.85,-0.34,0.43275,4,3,34.47,-110.62,0.2187,4,10.4,-110.62,0.18263,5,-13.67,-110.62,0.04744,30,-9.5,-22.59,0.55122,3,4,28.69,-130.74,0.23467,5,4.63,-130.74,0.23472,30,8.8,-42.71,0.53061,3,6,38.06,-155.76,0.12712,7,13.99,-155.76,0.6159,30,66.29,-67.73,0.25699,2,7,27.51,-161.93,0.952,30,79.81,-73.9,0.048,2,6,30.42,10.84,0.32122,7,6.35,10.84,0.67878,2,6,39.25,19.31,0.14775,7,15.18,19.31,0.85225,3,3,31.06,-62.96,0.3439,4,7,-62.96,0.21046,30,-12.9,25.07,0.44564,4,3,45.11,-37.76,0.10012,4,21.04,-37.76,0.24018,5,-3.03,-37.76,0.22276,30,1.14,50.27,0.43695,1,2,2.69,144.71,1,1,2,-5.54,125.5,1,1,2,-13.09,85.37,1,1,2,-14.8,41.81,1,1,2,-15.83,-2.44,1,1,2,-15.49,-45.66,1,1,2,-12.74,-89.22,1,1,2,-4.85,-130.72,1,2,2,17.04,155.53,0.77305,3,-7.02,155.53,0.22695,2,2,7.07,-153.59,0.976,30,-60.96,-65.56,0.024,3,2,20.52,-159.81,0.46419,3,-3.55,-159.81,0.45583,30,-47.51,-71.78,0.07997,4,2,40.73,-88.89,0.0675,3,16.66,-88.89,0.36337,4,-7.41,-88.89,0.12312,30,-27.3,-0.86,0.446,3,3,22.95,-142.06,0.35721,4,-1.11,-142.06,0.26206,30,-21.01,-54.03,0.38073,4,2,38.22,-143.45,0.10992,3,14.15,-143.45,0.44469,4,-9.91,-143.45,0.08606,30,-29.81,-55.42,0.35933,3,2,31.41,-88.99,0.17962,3,7.34,-88.99,0.40638,30,-36.62,-0.96,0.414,3,4,28.62,-42.91,0.25683,5,4.55,-42.91,0.29236,30,8.72,45.12,0.4508,4,4,34.99,-123.28,0.13272,5,10.92,-123.28,0.19913,6,-13.14,-123.28,0.0427,30,15.09,-35.25,0.62545,3,6,22.97,-143.41,0.28669,7,-1.1,-143.41,0.31946,30,51.21,-55.38,0.39385,4,5,45.42,-151,0.0365,6,21.36,-151,0.30389,7,-2.71,-151,0.31182,30,49.59,-62.97,0.34779,4,5,30.01,-136.05,0.22236,6,5.95,-136.05,0.2309,7,-18.12,-136.05,0.05293,30,34.18,-48.02,0.49382,3,5,26.79,-143.64,0.31731,6,2.73,-143.64,0.24192,30,30.96,-55.61,0.44076,2,6,23.2,-3.11,0.51451,7,-0.87,-3.11,0.48549,3,5,44.14,4.26,0.07134,6,20.08,4.26,0.58072,7,-3.99,4.26,0.34793,3,5,24.26,-19.9,0.41618,6,0.2,-19.9,0.32369,30,28.43,68.13,0.26013,4,4,43.5,-13.46,0.09236,5,19.43,-13.46,0.50585,6,-4.63,-13.46,0.22743,30,23.6,74.57,0.17436,4,3,36.52,-75.1,0.22142,4,12.45,-75.1,0.23243,5,-11.61,-75.1,0.0804,30,-7.44,12.93,0.46575,4,3,40.89,-102.93,0.13671,4,16.82,-102.93,0.2115,5,-7.25,-102.93,0.11871,30,-3.07,-14.9,0.53308,3,5,27.25,-115.58,0.16145,6,3.19,-115.58,0.13223,30,31.42,-27.55,0.70631,4,5,33,-131.91,0.18836,6,8.94,-131.91,0.25164,7,-15.13,-131.91,0.08135,30,37.17,-43.88,0.47865,2,7,20.52,-88.9,0.864,8,-26.57,-88.9,0.136,3,5,23.01,-58.22,0.30621,6,-1.06,-58.22,0.22277,30,27.18,29.81,0.47102,4,5,32.08,-26.8,0.26425,6,8.02,-26.8,0.38447,7,-16.05,-26.8,0.07257,30,36.26,61.23,0.27871,4,5,35.53,-56.47,0.16624,6,11.47,-56.47,0.27427,7,-12.6,-56.47,0.11146,30,39.7,31.56,0.44803,4,5,39.67,-117.65,0.10345,6,15.61,-117.65,0.24553,7,-8.46,-117.65,0.1674,30,43.84,-29.62,0.48361,2,7,27.22,-94.28,0.736,8,-19.87,-94.28,0.264,2,7,27.06,-83.71,0.736,8,-20.03,-83.71,0.264,3,6,40.04,-146.97,0.10339,7,15.98,-146.97,0.68061,30,68.28,-58.94,0.216,3,7,37.42,-156.84,0.54102,8,-9.67,-156.84,0.39772,30,89.73,-68.81,0.06126,3,7,30.49,-129.23,0.69893,8,-16.6,-129.23,0.264,30,82.79,-41.2,0.03707,2,7,25.32,15.88,0.736,8,-21.77,15.88,0.264,2,6,29.8,-6.69,0.33589,7,5.74,-6.69,0.66411,4,5,43.26,-30.9,0.08069,6,19.19,-30.9,0.36842,7,-4.87,-30.9,0.34733,30,47.43,57.13,0.20356,2,7,38.38,-128.28,0.75801,8,-8.72,-128.28,0.24199,3,6,24.1,-74.81,0.33807,7,0.03,-74.81,0.42129,30,52.34,13.22,0.24064,3,6,25.51,-101.21,0.26566,7,1.44,-101.21,0.3472,30,53.75,-13.18,0.38713,3,6,28.76,-107.9,0.25364,7,4.7,-107.9,0.44986,30,57,-19.87,0.2965,3,6,28.68,-68.92,0.26045,7,4.61,-68.92,0.46613,30,56.91,19.11,0.27342,2,7,32.64,-16.03,0.89336,8,-14.45,-16.03,0.10664,2,7,25.36,-15.9,0.736,8,-21.73,-15.9,0.264,2,7,25.36,-52.69,0.736,8,-21.73,-52.69,0.264,2,7,33.68,-52.43,0.85146,8,-13.41,-52.43,0.14854,3,6,23.95,-134.07,0.26702,7,-0.12,-134.07,0.31481,30,52.19,-46.04,0.41817,4,4,39.56,-89.25,0.13928,5,15.49,-89.25,0.31904,6,-8.57,-89.25,0.12756,30,19.66,-1.22,0.41412,4,5,32.84,-166.03,0.21553,6,8.77,-166.03,0.55465,7,-15.3,-166.03,0.14687,30,37.01,-78,0.08295,3,6,45.75,-166.1,0.08986,7,21.68,-166.1,0.84614,30,73.99,-78.07,0.064,5,3,45.11,-164.79,0.14814,4,21.05,-164.79,0.35879,5,-3.02,-164.79,0.21112,6,-27.09,-164.79,0.07766,30,1.15,-76.76,0.20429,2,7,51.96,159.45,0.59568,8,4.87,159.45,0.40432,4,4,84.86,161.47,0.056,5,60.79,161.47,0.32314,6,36.73,161.47,0.25615,7,12.66,161.47,0.36471,3,4,47.35,161.5,0.44538,5,23.28,161.5,0.29807,6,-0.79,161.5,0.25655,3,3,38.08,159.67,0.35961,4,14.01,159.67,0.4716,5,-10.05,159.67,0.16879,2,7,25.73,91.88,0.69509,32,-8.1,52.34,0.30491,5,5,36.52,73.9,0.17981,6,12.46,73.9,0.31483,7,-11.61,73.9,0.13977,30,40.69,161.93,0.072,32,29.23,70.32,0.29359,2,7,22.11,51.7,0.89855,32,-4.48,92.52,0.10145,5,5,33.25,32.37,0.26057,6,9.18,32.37,0.39016,7,-14.89,32.37,0.09273,30,37.42,120.4,0.144,32,32.51,111.86,0.11254,4,5,39.34,118.31,0.10988,6,15.27,118.31,0.26444,7,-8.79,118.31,0.14006,32,26.42,25.92,0.48563,2,7,30.68,134.8,0.40381,32,-13.05,9.42,0.59619,4,3,45.74,100.62,0.1377,4,21.68,100.62,0.35804,5,-2.39,100.62,0.3541,32,68.15,43.6,0.15016,5,3,43.95,56.02,0.15224,4,19.88,56.02,0.31831,5,-4.18,56.02,0.27667,30,-0.01,144.05,0.14025,32,69.94,88.21,0.11254,5,3,43.82,14.11,0.1564,4,19.76,14.11,0.39225,5,-4.31,14.11,0.25816,30,-0.14,102.14,0.12118,32,70.07,130.11,0.072,1,8,13.23,86.84,1,1,8,24.48,-95.2,1,1,8,11.2,-27.76,1,4,3,20.83,-127.46,0.35319,4,-3.23,-127.46,0.20464,5,-27.3,-127.46,0.00025,30,-23.13,-39.43,0.44193,4,2,35.59,-128.85,0.11604,3,11.53,-128.85,0.42525,4,-12.54,-128.85,0.04515,30,-32.44,-40.82,0.41356,4,2,37.77,-31.43,0.11384,3,13.7,-31.43,0.45162,4,-10.36,-31.43,0.08811,30,-30.26,56.6,0.34644,4,2,28.07,-31.43,0.26213,3,4,-31.43,0.37881,4,-20.06,-31.43,0.06703,30,-39.96,56.6,0.29203,4,2,49.17,-153.63,0.00187,3,25.1,-153.63,0.41215,4,1.04,-153.63,0.28496,30,-18.86,-65.6,0.30102,4,2,40.12,-154.93,0.09084,3,16.06,-154.93,0.50229,4,-8.01,-154.93,0.14545,30,-27.91,-66.9,0.26143],"edges":[0,2,2,4,4,6,6,8,8,10,10,12,12,14,14,16,16,18,18,20,20,22,22,24,24,26,26,28,28,30,30,32,32,34,34,36,36,38,38,40,40,42,42,44,44,46,46,48,48,50,50,52,52,54,54,56,56,58,58,60,60,62,62,64,64,66,66,0]},"body2":{"x":105.33,"y":-2.01,"rotation":-90,"width":351,"height":268}},"bow1":{"bow":{"type":"mesh","hull":29,"width":92,"height":159,"uvs":[0.2207,0.90656,0.20075,0.97038,0.11473,0.98519,0.03489,0.97174,0.02559,0.89928,0.09476,0.80874,0.19609,0.73861,0.30239,0.67205,0.38111,0.62176,0.46424,0.55627,0.54431,0.49058,0.61583,0.41406,0.67689,0.34545,0.73118,0.26991,0.76875,0.19593,0.78854,0.11821,0.78995,0.01482,0.96976,0.01481,0.96744,0.11956,0.94856,0.20821,0.90463,0.2943,0.85127,0.38133,0.78367,0.46366,0.70478,0.53873,0.61772,0.61153,0.53246,0.68282,0.43545,0.74709,0.34161,0.80695,0.26263,0.8616],"triangles":[0,1,2,2,3,4,0,2,4,28,0,5,0,4,5,5,6,28,28,6,27,26,27,7,27,6,7,7,8,26,26,8,25,8,9,25,25,9,24,9,10,24,24,10,23,10,11,23,23,11,22,11,12,22,22,12,21,12,13,21,21,13,20,13,14,20,20,14,19,14,15,19,19,15,18,15,16,18,18,16,17],"vertices":[1,75,17.42,9.01,1,1,75,26.83,13.23,1,1,75,33.25,8.03,1,1,75,35.63,0.76,1,1,75,26.6,-6.45,1,1,75,11.13,-9.33,1,2,74,15.26,-8.32,0.74801,75,-3.34,-7.93,0.25199,2,73,16.63,-8.28,0.44281,74,0.85,-8.25,0.55719,3,72,22.99,-8.14,0.06526,73,5.85,-7.77,0.93436,74,-9.94,-8.3,0.00038,3,71,26.55,-8.8,0.00547,72,10.08,-8,0.97021,73,-7.04,-8.49,0.02433,2,71,13.8,-7.86,0.80758,72,-2.7,-8.11,0.19242,2,70,18.26,-8.45,0.56674,71,-0.01,-8.48,0.43326,2,69,24.87,-9.2,0.10776,70,5.99,-8.31,0.89224,2,69,11.93,-7.89,0.96111,70,-6.98,-9.21,0.03889,2,68,23,-8.15,0.08005,69,-0.33,-7.98,0.91995,2,68,10.52,-7.62,0.95051,69,-12.69,-9.81,0.04949,1,68,-5.84,-9.2,1,1,68,-7.56,7.26,1,1,68,9.03,8.77,1,1,68,23.22,8.51,1,3,68,37.26,5.91,0.11837,69,11.03,8.5,0.88034,70,-10.65,6.8,0.00129,3,69,25.69,7.8,0.10058,70,3.92,8.59,0.89942,72,-33.29,4.7,0,3,70,18.41,8.89,0.61961,71,-1.2,8.82,0.38037,72,-19.02,7.28,0.00002,2,71,12.77,8.74,0.89857,72,-5.1,8.35,0.10143,3,71,26.82,7.82,0.01498,72,8.98,8.59,0.97599,73,-9.24,8,0.00903,3,72,22.76,8.83,0.109,73,4.5,9.15,0.89096,74,-12.17,8.53,0.00004,2,73,18.06,8.75,0.38511,74,1.39,8.84,0.61489,2,74,14.25,8.89,0.74851,75,-1.93,9.25,0.25149,2,74,25.56,9.39,0.01566,75,9.34,8.16,0.98434],"edges":[6,8,32,34,34,36,30,32,2,0,0,56,8,10,10,12,12,14,2,4,4,6,54,56,50,52,52,54,48,50,44,46,46,48,40,42,42,44,36,38,38,40,28,30,24,26,26,28,20,22,22,24,18,20,14,16,16,18]}},"bow2":{"bow":{"type":"mesh","hull":29,"width":92,"height":159,"uvs":[0.2207,0.90656,0.20075,0.97038,0.11473,0.98519,0.03489,0.97174,0.02559,0.89928,0.09476,0.80874,0.19609,0.73861,0.30239,0.67205,0.38111,0.62176,0.46424,0.55627,0.54431,0.49058,0.61583,0.41406,0.67689,0.34545,0.73118,0.26991,0.76875,0.19593,0.78854,0.11821,0.78995,0.01482,0.96976,0.01481,0.96744,0.11956,0.94856,0.20821,0.90463,0.2943,0.85127,0.38133,0.78367,0.46366,0.70478,0.53873,0.61772,0.61153,0.53246,0.68282,0.43545,0.74709,0.34161,0.80695,0.26263,0.8616],"triangles":[0,1,2,2,3,4,0,2,4,28,0,5,0,4,5,5,6,28,28,6,27,26,27,7,27,6,7,7,8,26,26,8,25,8,9,25,25,9,24,9,10,24,24,10,23,10,11,23,23,11,22,11,12,22,22,12,21,12,13,21,21,13,20,13,14,20,20,14,19,14,15,19,19,15,18,15,16,18,18,16,17],"vertices":[1,67,17.42,9.01,1,1,67,26.83,13.23,1,1,67,33.25,8.03,1,1,67,35.63,0.76,1,1,67,26.6,-6.45,1,1,67,11.13,-9.33,1,2,66,15.26,-8.32,0.74801,67,-3.34,-7.93,0.25199,2,65,16.63,-8.28,0.44281,66,0.85,-8.25,0.55719,3,64,22.99,-8.14,0.06526,65,5.85,-7.77,0.93436,66,-9.94,-8.3,0.00038,3,63,26.55,-8.8,0.00547,64,10.08,-8,0.97021,65,-7.04,-8.49,0.02433,2,63,13.8,-7.86,0.80758,64,-2.7,-8.11,0.19242,2,62,18.26,-8.45,0.56674,63,-0.01,-8.48,0.43326,2,61,24.87,-9.2,0.10776,62,5.99,-8.31,0.89224,2,61,11.93,-7.89,0.96111,62,-6.98,-9.21,0.03889,2,60,23,-8.15,0.08005,61,-0.33,-7.98,0.91995,2,60,10.52,-7.62,0.95051,61,-12.69,-9.81,0.04949,1,60,-5.84,-9.2,1,1,60,-7.56,7.26,1,1,60,9.03,8.77,1,1,60,23.22,8.51,1,3,60,37.26,5.91,0.11837,61,11.03,8.5,0.88034,62,-10.65,6.8,0.00129,3,61,25.69,7.8,0.10058,62,3.92,8.59,0.89942,64,-33.29,4.7,0,3,62,18.41,8.89,0.61961,63,-1.2,8.82,0.38037,64,-19.02,7.28,0.00002,2,63,12.77,8.74,0.89857,64,-5.1,8.35,0.10143,3,63,26.82,7.82,0.01498,64,8.98,8.59,0.97599,65,-9.24,8,0.00903,3,64,22.76,8.83,0.109,65,4.5,9.15,0.89096,66,-12.17,8.53,0.00004,2,65,18.06,8.75,0.38511,66,1.39,8.84,0.61489,2,66,14.25,8.89,0.74851,67,-1.93,9.25,0.25149,2,66,25.56,9.39,0.01566,67,9.34,8.16,0.98434],"edges":[6,8,32,34,34,36,30,32,2,0,0,56,8,10,10,12,12,14,2,4,4,6,54,56,50,52,52,54,48,50,44,46,46,48,40,42,42,44,36,38,38,40,28,30,24,26,26,28,20,22,22,24,18,20,14,16,16,18]}},"burst":{"burst1":{"x":25.64,"y":200.49,"width":1254,"height":630},"burst2":{"x":16.91,"y":199.48,"width":1254,"height":630},"burst3":{"x":9.76,"y":188.67,"width":1172,"height":653},"burst4":{"x":25.99,"y":170.51,"width":1200,"height":685}},"crossbow":{"crossbow":{"x":47.82,"y":7.5,"width":492,"height":191}},"eye":{"eye":{"x":9.75,"y":-36.56,"rotation":-90,"width":32,"height":32}},"eye2":{"eye":{"x":9.75,"y":-147.41,"rotation":-90,"width":32,"height":32}},"fx1":{"fx1":{"x":152.96,"y":-3.84,"rotation":180,"width":364,"height":136}},"fx2":{"fx2":{"x":-6.7,"y":-0.41,"width":116,"height":404}},"fx3":{"fx3":{"x":-2.85,"y":-8.56,"width":63,"height":211}},"fx4":{"fx4":{"x":20.5,"y":-0.03,"rotation":-90,"width":20,"height":64}},"fx5":{"fx4":{"x":20.5,"y":-0.03,"rotation":-90,"width":20,"height":64}},"fx6":{"fx4":{"x":20.5,"y":-0.03,"rotation":-90,"width":20,"height":64}},"fx7":{"fx4":{"x":20.5,"y":-0.03,"rotation":-90,"width":20,"height":64}},"fx8":{"fx4":{"x":20.5,"y":-0.03,"rotation":-90,"width":20,"height":64}},"fx9":{"fx4":{"x":20.5,"y":-0.03,"rotation":-90,"width":20,"height":64}},"fx10":{"fx4":{"x":20.5,"y":-0.03,"scaleX":0.8332,"scaleY":0.8332,"rotation":-90,"width":20,"height":64}},"fx11":{"fx4":{"x":20.5,"y":-0.03,"rotation":-90,"width":20,"height":64}},"fx12":{"fx1":{"x":152.96,"y":-3.84,"rotation":180,"width":364,"height":136}},"fx13":{"fx1":{"x":152.96,"y":-3.84,"rotation":180,"width":364,"height":136}},"glare":{"glare":{"type":"clipping","end":"light","vertexCount":56,"color":"ce3a3aff","vertices":[-15.13,17.2,-14.13,18.79,-14.24,22.59,-16.33,25.05,-19.25,26.32,-23.43,26.23,-26.44,24.59,-27.98,21.5,-27.8,18.22,-26.64,16.58,-29.04,15.94,-33.82,17.32,-40.13,19.84,-46.23,23.47,-50.47,27.07,-53.57,30.11,-55.4,32.91,-57.56,36.83,-59.59,41.02,-61.21,45.71,-62.11,50.25,-62.21,54.62,-62,59.37,-61.24,64.65,-59.43,70.13,-57.34,74.74,-54.78,78.04,-51.8,81.54,-48.29,84.66,-43.18,88.38,-37.72,91.02,-33.1,92.61,-28.12,93.52,-23.13,93.4,-18.11,93.34,-13.83,92.5,-9.14,90.87,-4.64,88.6,-0.98,86.26,2.92,82.75,6.24,79.48,8.72,75.96,11.05,72.38,12.63,68.77,14.01,64.62,14.73,59.82,14.65,56.16,14.61,51.14,13.88,45.98,12.32,40.28,9.78,35.32,6.51,30.99,3.42,27.22,-0.68,23.67,-5.32,20.41,-9.73,18.51]}},"glare2":{"glare":{"type":"clipping","end":"light2","vertexCount":48,"color":"ce3a3aff","vertices":[-13.73,-16.91,-14.51,-19.72,-16.33,-22.27,-19.25,-23.8,-23.43,-23.72,-26.26,-21.97,-27.63,-19.4,-28.22,-15.74,-34.65,-17.37,-40.02,-19.4,-45.88,-23.24,-50.37,-27.83,-53.72,-32.2,-56.83,-37.83,-59.01,-44.75,-59.24,-50.28,-59.46,-54.95,-58.68,-60.52,-57.45,-64.48,-55.56,-69.18,-52.6,-73.32,-48.82,-77.81,-43.21,-81.99,-37.39,-85.09,-32.67,-86.86,-27.75,-87.57,-23.23,-87.85,-17.76,-87.34,-12.86,-85.89,-9.69,-84.73,-5.07,-82.36,-1.44,-79.74,1.33,-76.81,4.18,-73.81,6.93,-70.58,8.73,-66.73,10.25,-62.9,11.57,-58.92,12.23,-54.45,12.08,-49.02,11.53,-43.36,9.78,-37.89,7.52,-34.01,5.37,-30.32,2.73,-27.13,-0.4,-24.16,-5.22,-20.71,-9.47,-18.6]}},"glasses":{"glasses":{"x":-25.27,"y":3.18,"rotation":-90,"width":194,"height":94}},"head":{"head":{"type":"mesh","hull":38,"width":448,"height":337,"uvs":[0.91903,0.87282,0.90135,0.94101,0.85329,0.96954,0.77247,0.98237,0.64722,0.98943,0.5202,0.99295,0.37638,0.98472,0.25908,0.95652,0.19482,0.9248,0.15796,0.89072,0.13524,0.85312,0.12463,0.76753,0.05089,0.72441,0.03624,0.63729,0.05051,0.58407,0.02121,0.52938,0.03179,0.48357,0.00636,0.43481,0.00778,0.3581,0.05304,0.28163,0.03536,0.19839,0.0625,0.13161,0.11438,0.10576,0.2361,0.04583,0.38345,0.00705,0.53941,0.00872,0.69058,0.07181,0.77131,0.04157,0.83164,0.10554,0.88532,0.11498,0.92527,0.15832,0.95472,0.24836,0.99146,0.33628,0.99253,0.40067,0.9691,0.4414,0.92748,0.46396,0.92796,0.61561,0.926,0.76757,0.694,0.11607,0.767,0.08512,0.82151,0.14466,0.87833,0.1472,0.90514,0.17436,0.93131,0.27111,0.96898,0.34664,0.97025,0.39162,0.95685,0.41538,0.92557,0.43235,0.91982,0.38228,0.88854,0.30505,0.68681,0.18794,0.77293,0.28885,0.61352,0.25165,0.3823,0.27111,0.53615,0.04621,0.38549,0.04112,0.2444,0.07506,0.25781,0.36106,0.33889,0.33221,0.18631,0.47478,0.25206,0.43235,0.15311,0.59614,0.19972,0.55456,0.12183,0.55032,0.07076,0.5605,0.06118,0.48497,0.04586,0.52401,0.03182,0.42386,0.03246,0.36785,0.08161,0.28893,0.0631,0.20576,0.07268,0.16587,0.12183,0.13786,0.90345,0.46415,0.90345,0.61808,0.89882,0.76709,0.89511,0.8656,0.88307,0.91486,0.84944,0.93824,0.77154,0.94975,0.64726,0.95879,0.52174,0.96208,0.38262,0.95221,0.267,0.92591,0.20703,0.89879,0.17735,0.87166,0.16065,0.84207,0.1452,0.74508,0.07718,0.69987,0.06111,0.64069,0.07718,0.59055,0.11428,0.58315,0.15014,0.64069,0.20579,0.59384,0.22929,0.53877,0.22001,0.48945,0.25402,0.46726,0.28617,0.41794,0.28555,0.38342,0.32574,0.37191,0.37088,0.3415,0.3919,0.30615,0.49301,0.29383,0.47879,0.32424,0.62533,0.27739,0.68098,0.23136,0.55979,0.31109,0.72859,0.29794,0.80649,0.33081,0.87574,0.33657,0.90171,0.4015],"triangles":[77,76,0,7,84,83,84,85,86,9,85,8,9,10,86,9,86,85,8,85,84,8,84,7,76,77,78,1,77,0,103,81,82,106,80,81,2,78,77,2,77,1,2,3,79,2,79,78,80,79,3,6,83,82,7,83,6,4,81,80,4,80,3,73,47,35,73,35,36,73,74,109,54,55,24,56,23,24,25,54,24,54,25,26,55,56,24,39,26,27,39,27,28,38,26,39,56,72,22,56,22,23,21,22,72,40,39,28,41,28,29,40,28,41,41,29,30,71,21,72,42,41,30,54,38,52,38,54,26,38,50,52,42,30,31,105,52,50,43,42,31,53,56,55,54,102,55,104,52,105,39,50,38,39,40,50,51,50,40,107,105,50,72,70,71,52,102,54,51,107,50,49,41,42,49,42,43,49,108,51,40,49,51,49,40,41,44,43,31,109,108,49,32,44,31,72,56,57,48,49,43,48,43,44,109,49,48,45,44,32,48,44,45,45,32,33,110,109,48,46,48,45,47,48,46,110,48,47,33,34,46,33,46,45,34,35,47,34,47,46,73,110,47,109,110,73,104,105,107,108,107,51,109,74,108,107,108,75,93,83,87,10,11,86,87,88,92,11,88,87,12,88,11,88,89,92,12,89,88,93,87,92,92,91,61,89,14,90,13,14,89,89,91,92,91,89,90,12,13,89,93,92,61,11,87,86,95,59,60,96,95,60,66,16,65,15,16,66,63,65,59,64,66,65,97,94,96,103,82,94,60,98,97,96,60,97,60,59,57,16,17,67,67,68,65,16,67,65,20,21,71,70,20,71,102,53,55,19,20,70,69,70,72,19,70,69,101,53,102,106,102,52,106,52,104,103,101,102,58,56,53,58,53,101,100,58,101,57,56,58,69,72,57,68,18,19,58,98,57,99,98,58,97,98,99,67,18,68,57,59,69,60,57,98,17,18,67,69,68,19,65,68,69,99,58,100,100,101,103,103,102,106,80,106,107,100,97,99,100,103,97,103,94,97,106,104,107,81,103,106,65,69,59,94,95,96,62,59,95,62,95,94,63,59,62,63,64,65,91,64,63,14,66,64,15,66,14,90,64,91,14,64,90,93,62,94,61,63,62,61,62,93,91,63,61,5,82,81,5,81,4,6,82,5,37,74,36,75,74,37,76,75,37,83,84,87,75,76,78,94,82,93,82,83,93,78,79,75,107,75,80,75,79,80,75,108,74,74,73,36,86,87,84,0,76,37],"vertices":[7,8,13.77,-179.23,0.36689,10,-75.37,-179.23,0.00406,25,-164.51,-179.23,0.00068,9,-29.09,-176.04,0.23856,24,-92.79,-187.73,0.0027,31,-154.23,-208.21,0.0008,7,41.46,-176.26,0.3863,2,8,-9.21,-171.31,0.496,7,20.51,-166.65,0.504,2,8,-18.83,-149.78,0.496,7,13.73,-144.78,0.504,2,8,-23.15,-113.57,0.496,7,13.87,-109.35,0.504,2,8,-25.53,-57.46,0.496,7,17.29,-54.81,0.504,2,8,-26.72,-0.55,0.96,7,29.39,38.9,0.04,2,8,-23.94,63.88,0.496,7,28.37,66.13,0.504,5,8,-14.44,116.43,0.49343,10,-103.58,116.43,0.00081,25,-192.72,116.43,0.00015,24,-166.93,95.69,0.0002,7,44.84,119.28,0.5054,7,8,-3.75,145.22,0.44097,10,-92.89,145.22,0.01309,25,-182.03,145.22,0.00309,9,-50.94,145.29,0.03472,24,-159.34,127.38,0.00413,31,-264.18,94.51,0.00001,7,60.57,147.64,0.504,7,8,7.74,161.73,0.35852,10,-81.41,161.73,0.01792,25,-170.55,161.73,0.00485,9,-38.19,162.69,0.17602,24,-149.15,146.4,0.00637,31,-256.74,114.76,0.00008,7,75.37,163.13,0.43623,7,8,20.41,171.91,0.25457,10,-68.73,171.91,0.01706,25,-157.88,171.91,0.00515,9,-24.27,173.45,0.39176,24,-136.87,159,0.00661,31,-246.35,128.96,0.0002,7,90.46,171.91,0.32466,6,8,49.25,176.66,0.18759,10,-39.89,176.66,0.15838,25,-129.03,176.66,0.06698,9,9.51,179.3,0.49942,24,-104.24,169.51,0.07915,31,-215.51,143.92,0.00847,6,8,63.78,209.7,0.1468,10,-25.36,209.7,0.21323,25,-114.5,209.7,0.11967,9,30.46,212.48,0.36802,24,-88.14,205.3,0.12885,31,-204.57,181.61,0.02343,6,8,93.14,216.26,0.12822,10,4,216.26,0.24095,25,-85.14,216.26,0.15953,9,63.07,217.51,0.26968,24,-56.55,214.84,0.16113,31,-174.62,195.47,0.04049,6,8,111.08,209.87,0.09503,10,21.94,209.87,0.23706,25,-67.21,209.87,0.19115,9,83.89,209.78,0.23617,24,-34.86,210.09,0.17792,31,-152.48,193.8,0.06266,6,8,129.51,222.99,0.06285,10,40.37,222.99,0.2258,25,-48.78,222.99,0.22835,9,107.41,220.74,0.19758,24,-13.1,224.23,0.19226,31,-132.91,210.84,0.09316,6,8,144.94,218.26,0.04634,10,55.8,218.26,0.21405,25,-33.34,218.26,0.25183,9,124.78,214.01,0.17268,24,5.04,220,0.19747,31,-114.36,209.19,0.11762,6,8,161.38,229.65,0.02972,10,72.24,229.65,0.19755,25,-16.91,229.65,0.27848,9,145.38,222.67,0.1445,24,24.23,231.45,0.19992,31,-96.95,223.21,0.14983,6,8,187.23,229.01,0.01973,10,98.09,229.01,0.18163,25,8.95,229.01,0.29738,9,173.19,217.96,0.12297,24,52.43,230.67,0.19779,31,-68.92,226.39,0.18051,6,8,213,208.74,0.00762,10,123.86,208.74,0.14522,25,34.72,208.74,0.32541,9,199.78,192.51,0.0844,24,82.32,209.19,0.18272,31,-36.33,209.29,0.25462,6,8,241.05,216.66,0.00144,10,151.91,216.66,0.11712,25,62.77,216.66,0.34012,9,231.43,194.24,0.05877,24,113.41,215.33,0.16515,31,-6.39,219.72,0.3174,6,8,263.56,204.5,0.00026,10,174.41,204.5,0.10608,25,85.27,204.5,0.34198,9,252.43,177.8,0.05008,24,136.5,201.99,0.15643,31,18.33,209.73,0.34517,5,10,183.13,181.25,0.0933,25,93.98,181.25,0.33894,9,257.79,152.72,0.04141,24,145.31,177.91,0.14452,31,30.42,187.12,0.38183,5,10,203.32,126.73,0.04639,25,114.18,126.73,0.28896,9,269.67,93.05,0.01543,24,165.42,120.48,0.08711,31,58.36,133.07,0.56211,5,10,216.39,60.71,0.00634,25,127.25,60.71,0.11079,9,270.2,23.78,0.00072,24,175.63,51.96,0.01482,31,78.05,66.65,0.86733,2,24,170.31,-18.01,0.0002,31,82.56,-3.38,0.9998,6,8,283.71,-76.88,0.00027,10,194.57,-76.88,0.01562,25,105.43,-76.88,0.11346,9,220.81,-105.77,0.0025,24,144.83,-83.22,0.06761,31,66.45,-71.51,0.80054,6,8,293.9,-113.05,0.00202,10,204.76,-113.05,0.03129,25,115.62,-113.05,0.15345,9,224.27,-142.38,0.00679,24,153.37,-118.99,0.11048,31,79.91,-105.73,0.69595,6,8,272.34,-140.08,0.00907,10,183.2,-140.08,0.05043,25,94.06,-140.08,0.17434,9,199.17,-163.59,0.01484,24,131.48,-143.5,0.14612,31,61.66,-133.06,0.60519,6,8,269.16,-164.13,0.0154,10,180.02,-164.13,0.06436,25,90.88,-164.13,0.18135,9,192.7,-185.81,0.02135,24,128.18,-166.41,0.16779,31,61.59,-156.21,0.54975,6,8,254.56,-182.02,0.02125,10,165.41,-182.02,0.07375,25,76.27,-182.02,0.1832,9,176.06,-200.23,0.0265,24,113.73,-183,0.17961,31,49.6,-174.66,0.51569,6,8,224.21,-195.22,0.03705,10,135.07,-195.22,0.09286,25,45.93,-195.22,0.18212,9,146.18,-207.01,0.03874,24,85.08,-193.89,0.19822,31,22.76,-189.45,0.45102,6,8,194.58,-211.67,0.0558,10,105.44,-211.67,0.11083,25,16.3,-211.67,0.17644,9,116.84,-217.74,0.05189,24,57.54,-208.63,0.21114,31,-2.46,-207.89,0.39389,6,8,172.88,-212.15,0.0653,10,83.74,-212.15,0.11785,25,-5.4,-212.15,0.17283,9,96.53,-214.74,0.0579,24,37.01,-208.49,0.21429,31,-22.81,-210.62,0.37183,6,8,159.16,-201.66,0.07452,10,70.02,-201.66,0.12342,25,-19.13,-201.66,0.1692,9,85.54,-202.29,0.06333,24,24.38,-197.7,0.21555,31,-36.82,-201.7,0.35397,6,8,151.55,-183.01,0.11088,10,62.41,-183.01,0.14162,25,-26.73,-183.01,0.15403,9,83.89,-182.59,0.08331,24,20,-178.42,0.21558,31,-43.85,-183.23,0.29458,6,8,100.45,-183.23,0.26461,10,11.3,-183.23,0.17678,25,-77.84,-183.23,0.09136,9,44.19,-178.19,0.14626,24,-19.93,-179.62,0.1819,31,-83.22,-189.99,0.13909,3,8,49.24,-182.35,0.56275,10,-39.91,-182.35,0.2101,9,2.22,-177.46,0.22715,6,8,268.79,-78.41,0.00077,10,179.65,-78.41,0.01796,25,90.51,-78.41,0.13042,9,206,-104.12,0.00325,24,129.93,-83.65,0.07556,31,51.76,-74.02,0.77203,6,8,279.22,-111.12,0.00262,10,190.08,-111.12,0.0325,25,100.94,-111.12,0.15609,9,210.34,-137.53,0.00737,24,138.91,-116.13,0.1128,31,65.18,-104.93,0.68862,6,8,259.16,-135.54,0.01028,10,170.02,-135.54,0.05247,25,80.88,-135.54,0.17762,9,187.25,-156.55,0.01591,24,118.7,-138.2,0.14964,31,48.26,-129.6,0.59408,6,8,258.3,-160.99,0.01628,10,169.16,-160.99,0.06559,25,80.02,-160.99,0.18187,9,182.72,-180.7,0.02208,24,117.59,-162.74,0.1693,31,50.59,-154.05,0.54488,6,8,249.15,-173,0.02108,10,160.01,-173,0.0733,25,70.87,-173,0.1833,9,172.31,-190.44,0.0263,24,108.64,-173.84,0.17899,31,43.28,-166.3,0.51703,6,8,216.55,-184.73,0.03921,10,127.4,-184.73,0.09496,25,38.26,-184.73,0.18209,9,140.63,-195.34,0.04027,24,77.96,-183.12,0.19992,31,14.19,-179.78,0.44356,6,8,191.09,-201.6,0.05698,10,101.95,-201.6,0.11157,25,12.81,-201.6,0.1761,9,115.07,-207.27,0.0526,24,54.32,-198.5,0.21135,31,-7.06,-198.31,0.3914,6,8,175.93,-202.18,0.06593,10,86.79,-202.18,0.11812,25,-2.35,-202.18,0.17266,9,101.07,-205.36,0.05824,24,40.19,-198.57,0.21422,31,-21.04,-200.35,0.37083,6,8,167.93,-196.17,0.07355,10,78.78,-196.17,0.12275,25,-10.36,-196.17,0.16968,9,94.85,-198.15,0.06274,24,33.02,-192.3,0.21529,31,-29.02,-195.15,0.35599,6,8,162.21,-182.16,0.09122,10,73.06,-182.16,0.13258,25,-16.08,-182.16,0.16277,9,92.83,-183.32,0.07287,24,28.95,-177.9,0.21644,31,-35.06,-181.46,0.32412,6,8,179.08,-179.58,0.07071,10,89.94,-179.58,0.12085,25,0.8,-179.58,0.17203,9,107.94,-183.48,0.06108,24,43.94,-175.95,0.21466,31,-20.49,-177.43,0.36067,6,8,205.11,-165.57,0.04484,10,115.96,-165.57,0.10017,25,26.82,-165.57,0.18368,9,133.1,-174.42,0.0442,24,67.58,-163.46,0.20427,31,1.17,-161.76,0.42284,6,8,244.57,-75.19,0.00295,10,155.43,-75.19,0.02419,25,66.29,-75.19,0.19248,9,183.22,-95.78,0.00567,24,106.21,-78.58,0.09873,31,27.56,-72.31,0.67597,6,8,210.57,-113.77,0.02595,10,121.43,-113.77,0.08062,25,32.28,-113.77,0.22033,9,145.35,-125.26,0.03016,24,72.84,-113.07,0.20005,31,-0.67,-111.13,0.44289,6,8,223.1,-42.36,0.00132,10,133.96,-42.36,0.0119,25,44.82,-42.36,0.37258,9,168.49,-59.68,0.00245,24,86.58,-44.9,0.08292,31,3.41,-41.71,0.52884,5,10,127.4,61.23,0.03496,25,38.26,61.23,0.46164,9,182.62,43.52,0.00951,24,86.15,59.26,0.11935,31,-11.57,61.37,0.37455,2,24,157.8,-15.67,0.00024,31,69.85,-2.81,0.99976,5,10,204.91,59.8,0.00667,25,115.77,59.8,0.1157,9,258.78,25.28,0.00082,24,164.11,51.85,0.0157,31,66.65,64.93,0.86112,5,10,193.47,123.01,0.04633,25,104.33,123.01,0.28952,9,259.29,91.32,0.01544,24,155.39,117.31,0.08729,31,48.87,128.53,0.56143,6,8,186.23,117,0.00787,10,97.09,117,0.1496,25,7.95,117,0.33804,9,159.02,106.36,0.07305,24,54,118.19,0.22633,31,-51.65,115.23,0.20512,6,8,195.95,80.68,0.00116,10,106.81,80.68,0.09296,25,17.67,80.68,0.4175,9,164.59,67.79,0.0319,24,64.9,80.78,0.22471,31,-35.62,79.71,0.23178,6,8,147.91,149.03,0.04289,10,58.76,149.03,0.22506,25,-30.38,149.03,0.24541,9,119.95,145.13,0.16422,24,9.89,151.12,0.21685,31,-99.93,141.66,0.10557,6,8,162.21,119.57,0.02146,10,73.06,119.57,0.2063,25,-16.08,119.57,0.28105,9,132.87,113.5,0.11677,24,27.1,121.61,0.24841,31,-78.76,114.85,0.12602,6,8,107.01,163.9,0.11227,10,17.87,163.9,0.24775,25,-71.28,163.9,0.16592,9,74.39,164.53,0.25543,24,-37.94,163.96,0.17251,31,-149.08,147.7,0.04612,6,8,121.02,143.03,0.0833,10,31.88,143.03,0.25599,25,-57.26,143.03,0.18276,9,88.52,142.52,0.2269,24,-20.87,144.14,0.19502,31,-129.4,130.46,0.05604,6,8,122.45,177.92,0.08135,10,33.31,177.92,0.23812,25,-55.83,177.92,0.2015,9,93.75,177,0.22084,24,-20.51,179.02,0.18768,31,-133.93,165.04,0.07051,6,8,119.02,200.8,0.08299,10,29.88,200.8,0.23456,25,-59.26,200.8,0.20357,9,92.35,200.01,0.22264,24,-25.11,201.6,0.18407,31,-141.64,186.76,0.07217,6,8,144.47,205.09,0.04849,10,55.33,205.09,0.21629,25,-33.81,205.09,0.24819,9,122.49,201.1,0.17587,24,4.58,206.89,0.19762,31,-112.98,196.15,0.11354,6,8,131.32,211.95,0.06285,10,42.18,211.95,0.22579,25,-46.97,211.95,0.22832,9,108.1,209.62,0.19736,24,-10.85,213.32,0.19239,31,-129.16,200.35,0.09329,6,8,165.07,218.24,0.02895,10,75.92,218.24,0.19634,25,-13.22,218.24,0.27991,9,147.78,210.89,0.14268,24,28.25,220.12,0.19996,31,-91.39,212.56,0.15216,6,8,183.94,217.96,0.0199,10,94.8,217.96,0.18161,25,5.66,217.96,0.29718,9,168.45,207.5,0.12297,24,49.2,219.65,0.19782,31,-70.59,215.02,0.18053,6,8,210.54,195.94,0.00749,10,121.4,195.94,0.14456,25,32.26,195.94,0.32597,9,195.44,180.25,0.08348,24,79.73,196.44,0.18312,31,-37.1,196.31,0.25538,6,8,238.57,204.23,0.00159,10,149.43,204.23,0.11728,25,60.28,204.23,0.33973,9,226.87,182.46,0.05901,24,110.54,203.02,0.16526,31,-7.52,207.13,0.31714,6,8,252.01,199.94,0.00055,10,162.87,199.94,0.10887,25,73.73,199.94,0.34158,9,240.07,175.48,0.05225,24,124.59,197.96,0.15875,31,7.1,204.08,0.33799,6,8,261.45,177.92,0.00008,10,172.31,177.92,0.095,25,83.16,177.92,0.3393,9,246.45,151.47,0.0426,24,134.26,175.08,0.14626,31,19.87,182.78,0.37675,6,8,151.49,-172.25,0.11958,10,62.35,-172.25,0.14741,25,-26.79,-172.25,0.15058,9,85.96,-171.9,0.0888,24,20.55,-167.55,0.21681,31,-44.82,-172.39,0.27681,6,8,99.61,-172.25,0.2665,10,10.47,-172.25,0.17841,25,-78.67,-172.25,0.09003,9,44.29,-167.3,0.14817,24,-21.36,-168.82,0.18153,31,-86.14,-179.5,0.13536,3,8,49.4,-170.17,0.56223,10,-39.74,-170.17,0.20983,9,2.66,-165.4,0.22794,7,8,16.2,-168.51,0.36689,10,-72.94,-168.51,0.00406,25,-162.08,-168.51,0.00068,9,-26.74,-165.36,0.23857,24,-91.96,-176.83,0.0027,31,-154.93,-197.3,0.0008,7,45.07,-165.91,0.3863,2,8,-0.4,-163.12,0.496,7,30.03,-159.38,0.504,2,8,-8.28,-148.05,0.496,7,24.29,-144.04,0.504,2,8,-12.16,-113.15,0.496,7,24.78,-109.87,0.504,2,8,-15.2,-57.47,0.496,7,27.57,-55.61,0.504,2,8,-16.31,-1.24,0.496,7,30.73,-0.1,0.504,2,8,-12.99,61.08,0.496,7,39.05,62.46,0.504,5,8,-4.12,112.88,0.49221,10,-93.27,112.88,0.0012,25,-182.41,112.88,0.00022,24,-156.13,94.04,0.0003,7,54.74,114.73,0.50606,7,8,5.02,139.75,0.44723,10,-84.12,139.75,0.01359,25,-173.27,139.75,0.00321,9,-42.05,140.03,0.01929,24,-149.81,123.42,0.00431,31,-254.18,91.92,0.00001,7,68.63,141.23,0.51236,7,8,14.16,153.05,0.39801,10,-74.98,153.05,0.01948,25,-164.13,153.05,0.00524,9,-31.78,154.06,0.08746,24,-141.6,138.75,0.00688,31,-248.2,108.24,0.00009,7,80.55,153.72,0.48284,7,8,24.13,160.53,0.32984,10,-65.01,160.53,0.02152,25,-154.15,160.53,0.00641,9,-20.67,162.07,0.21506,24,-131.72,148.23,0.00826,31,-239.74,119.01,0.00024,7,92.5,160.15,0.41866,6,8,56.82,167.45,0.16706,10,-32.33,167.45,0.14842,25,-121.47,167.45,0.06315,9,17.11,169.99,0.53824,24,-95.42,161.36,0.07486,31,-205.63,137.08,0.00826,6,8,72.05,197.92,0.14616,10,-17.09,197.92,0.21331,25,-106.23,197.92,0.12019,9,38.13,200.36,0.3671,24,-78.85,194.37,0.1293,31,-193.84,172.08,0.02394,6,8,92,205.12,0.13044,10,2.85,205.12,0.241,25,-86.29,205.12,0.1576,9,61,206.52,0.27141,24,-57.07,203.66,0.1601,31,-173.57,184.33,0.03945,6,8,108.89,197.92,0.10184,10,19.75,197.92,0.23917,25,-69.39,197.92,0.1834,9,80.03,198.13,0.24366,24,-37.04,198.02,0.17496,31,-152.95,181.55,0.05695,6,8,111.39,181.3,0.10045,10,22.24,181.3,0.24158,25,-66.9,181.3,0.18216,9,81.24,181.44,0.24241,24,-33.52,181.66,0.17706,31,-147.18,165.84,0.05634,6,8,92,165.23,0.14605,10,2.85,165.23,0.24448,25,-86.29,165.23,0.1404,9,57.19,166.84,0.28383,24,-55.29,163.85,0.15342,31,-166.24,145.16,0.03184,6,8,107.78,140.3,0.11174,10,18.64,140.3,0.26112,25,-70.5,140.3,0.15276,9,73.04,140.98,0.26022,24,-35.98,140.46,0.17546,31,-143.86,124.69,0.03869,6,8,126.34,129.78,0.06999,10,37.2,129.78,0.26322,25,-51.94,129.78,0.18763,9,93.36,128.76,0.21182,24,-14.15,131.2,0.20984,31,-120.95,118.58,0.0575,6,8,142.96,133.93,0.04543,10,53.82,133.93,0.2394,25,-35.32,133.93,0.23085,9,112.72,130.83,0.16987,24,4.74,135.95,0.22595,31,-102.91,125.92,0.0885,6,8,150.44,118.7,0.03166,10,61.3,118.7,0.23377,25,-27.84,118.7,0.24793,9,119.59,114.55,0.14266,24,13.81,120.78,0.24844,31,-91.8,112.18,0.09554,6,8,167.06,104.29,0.01367,10,77.92,104.29,0.1931,25,-11.22,104.29,0.30089,9,136.51,97.37,0.09328,24,32.97,106.15,0.26991,31,-70.79,100.36,0.12915,6,8,178.7,104.57,0.00834,10,89.55,104.57,0.16027,25,0.41,104.57,0.33517,9,149.3,95.43,0.07346,24,45.9,106.01,0.25283,31,-57.96,102.04,0.16993,6,8,182.57,86.57,0.00379,10,93.43,86.57,0.13482,25,4.29,86.57,0.3709,9,151.21,76.59,0.05061,24,50.43,87.62,0.27007,31,-50.91,84.46,0.1698,6,8,192.82,66.35,0.00048,10,103.68,66.35,0.0789,25,14.54,66.35,0.45906,9,159.24,54.05,0.0228,24,61.53,66.43,0.2447,31,-36.95,65.02,0.19406,6,8,204.73,56.93,0.00001,10,115.59,56.93,0.04282,25,26.45,56.93,0.51726,9,169.99,41.85,0.01111,24,73.87,55.85,0.16681,31,-23.25,56.28,0.26198,5,10,119.75,11.63,0.00063,25,30.61,11.63,0.93005,9,165.52,-4.35,0.00003,24,75.91,9.47,0.0044,31,-14.75,10.64,0.06489,5,10,109.5,18,0.00354,25,20.36,18,0.89714,9,156.8,4.11,0.00039,24,66.09,16.64,0.05154,31,-25.48,16.36,0.04739,6,8,214.43,-47.65,0.00279,10,125.29,-47.65,0.02078,25,36.15,-47.65,0.42367,9,159.17,-62.84,0.00469,24,77.79,-49.32,0.13267,31,-4.67,-47.32,0.4154,6,8,229.94,-72.58,0.0051,10,140.8,-72.58,0.03123,25,51.66,-72.58,0.25177,9,169.69,-90.04,0.00817,24,92.02,-74.79,0.12642,31,12.97,-70.55,0.57731,6,8,203.07,-18.29,0.00023,10,113.93,-18.29,0.00232,25,24.79,-18.29,0.83782,9,153.65,-32.28,0.0004,24,68.06,-19.84,0.06222,31,-18.43,-19.48,0.09701,6,8,207.5,-93.91,0.01965,10,118.36,-93.91,0.07309,25,29.22,-93.91,0.25714,9,145.37,-105.52,0.02483,24,70.1,-93.52,0.2076,31,-6.11,-92.15,0.41768,6,8,196.42,-128.81,0.04344,10,107.28,-128.81,0.10419,25,18.14,-128.81,0.20315,9,130.56,-136.91,0.04474,24,59.83,-126.67,0.21803,31,-11.65,-126.41,0.38645,6,8,194.49,-159.83,0.05406,10,105.34,-159.83,0.1093,25,16.2,-159.83,0.18261,9,124.53,-166.79,0.05083,24,58.03,-157.09,0.21124,31,-9.18,-156.79,0.39195,6,8,172.6,-171.47,0.0812,10,83.46,-171.47,0.12821,25,-5.68,-171.47,0.1685,9,103.72,-174.37,0.0677,24,38.49,-167.51,0.21729,31,-27.07,-169.84,0.3371],"edges":[0,2,6,8,8,10,10,12,12,14,14,16,16,18,18,20,20,22,38,40,42,44,44,46,46,48,48,50,50,52,52,54,54,56,56,58,62,64,72,74,74,0,68,70,70,72,2,4,4,6,22,24,24,26,26,28,28,30,30,32,32,34,34,36,36,38,40,42,64,66,66,68,58,60,60,62]},"head2":{"x":139.14,"y":7.51,"rotation":-90,"width":448,"height":337}},"heal1":{"heal1":{"scaleX":1.2,"scaleY":1.2,"width":636,"height":127}},"heal1b":{"heal1":{"scaleX":1.2,"scaleY":1.2,"width":636,"height":127}},"heal1c":{"heal1":{"scaleX":1.2,"scaleY":1.2,"width":636,"height":127}},"heal1d":{"heal1":{"scaleX":1.2,"scaleY":1.2,"width":636,"height":127}},"heal2":{"heal2":{"scaleX":1.2,"scaleY":1.2,"width":636,"height":127}},"heal2b":{"heal2":{"scaleX":1.2,"scaleY":1.2,"width":636,"height":127}},"heal2c":{"heal2":{"scaleX":1.2,"scaleY":1.2,"width":636,"height":127}},"heal2d":{"heal2":{"scaleX":1.2,"scaleY":1.2,"width":636,"height":127}},"heal3":{"heal3c":{"y":448.01,"scaleX":1.2,"scaleY":1.2,"width":598,"height":836}},"heal3a":{"heal3a":{"y":-0.23,"width":638,"height":126}},"heal3a2":{"heal3a":{"y":-0.23,"width":638,"height":126}},"heal3a3":{"heal3a":{"y":-0.23,"width":638,"height":126}},"heal3b":{"heal3b":{"y":37.88,"width":638,"height":125}},"heal3b2":{"heal3b":{"y":37.88,"width":638,"height":125}},"heal3b3":{"heal3b":{"y":37.88,"width":638,"height":125}},"heal4":{"heal4":{"width":54,"height":344}},"heal4b":{"heal4":{"width":54,"height":344}},"heal4b2":{"heal4":{"width":54,"height":344}},"heal4b3":{"heal4":{"width":54,"height":344}},"heal4b4":{"heal4":{"width":54,"height":344}},"heal4b5":{"heal4":{"width":54,"height":344}},"heal4b6":{"heal4":{"width":54,"height":344}},"heal5":{"heal5":{"width":98,"height":98}},"heal5b":{"heal5":{"width":98,"height":98}},"heal5b2":{"heal5":{"width":98,"height":98}},"heal5b3":{"heal5":{"width":98,"height":98}},"heal5b4":{"heal5":{"width":98,"height":98}},"heal5b5":{"heal5":{"width":98,"height":98}},"heal5b6":{"heal5":{"width":98,"height":98}},"heal6":{"heal6":{"y":13.45,"width":66,"height":66}},"heal6b":{"heal6":{"width":66,"height":66}},"heal6b2":{"heal6":{"width":66,"height":66}},"heal6b3":{"heal6":{"width":66,"height":66}},"heal6b4":{"heal6":{"x":21.03,"y":-29,"width":66,"height":66}},"heal6b5":{"heal6":{"width":66,"height":66}},"heal6b6":{"heal6":{"width":66,"height":66}},"leg_L":{"leg_L":{"type":"mesh","hull":14,"width":64,"height":94,"uvs":[0.91569,0.82175,0.66667,0.96677,0.33333,0.96677,0.08209,0.82174,0.03772,0.66667,0.03772,0.5,0.03772,0.33333,0.09097,0.17826,0.33333,0.03172,0.66667,0.03172,0.91347,0.17825,0.95784,0.33333,0.95784,0.5,0.95784,0.66667,0.82642,0.66667,0.17137,0.66667,0.82642,0.5,0.17137,0.5,0.82642,0.33333,0.17136,0.33333,0.27822,0.17832,0.50231,0.11487,0.7264,0.17983,0.50453,0.88379,0.28487,0.82789,0.73306,0.82336],"triangles":[3,24,2,2,23,1,2,24,23,1,25,0,1,23,25,25,23,14,24,14,23,24,3,15,25,14,0,14,24,15,0,14,13,3,4,15,14,12,13,4,17,15,15,17,14,14,17,16,4,5,17,14,16,12,16,11,12,5,19,17,19,16,17,20,18,19,20,21,22,19,18,16,5,6,19,16,18,11,22,18,20,18,10,11,6,7,19,19,7,20,18,22,10,21,9,22,22,9,10,20,8,21,20,7,8,21,8,9],"vertices":[3,18,55.99,26.32,0.00008,28,36.48,26.32,0.1692,29,16.97,26.32,0.83072,2,28,50.11,10.38,0.00244,29,30.6,10.38,0.99756,2,28,50.11,-10.95,0.00418,29,30.6,-10.95,0.99582,3,18,55.99,-27.03,0.0002,28,36.48,-27.03,0.1809,29,16.97,-27.03,0.8189,3,18,41.41,-29.87,0.03725,28,21.9,-29.87,0.45371,29,2.4,-29.87,0.50904,3,18,25.74,-29.87,0.2688,28,6.24,-29.87,0.59289,29,-13.27,-29.87,0.1383,3,18,10.08,-29.87,0.67159,28,-9.43,-29.87,0.31938,29,-28.94,-29.87,0.00904,2,18,-4.5,-26.46,0.9008,28,-24.01,-26.46,0.0992,2,18,-18.28,-10.95,0.99879,28,-37.78,-10.95,0.00121,2,18,-18.28,10.38,0.99998,28,-37.78,10.38,0.00002,2,18,-4.5,26.18,0.93123,28,-24.01,26.18,0.06877,3,18,10.08,29.02,0.71393,28,-9.43,29.02,0.27718,29,-28.94,29.02,0.00888,3,18,25.74,29.02,0.28225,28,6.24,29.02,0.5793,29,-13.27,29.02,0.13845,3,18,41.41,29.02,0.03597,28,21.9,29.02,0.44705,29,2.4,29.02,0.51697,3,18,41.41,20.6,0.0239,28,21.9,20.6,0.43343,29,2.4,20.6,0.54267,3,18,41.41,-21.32,0.02572,28,21.9,-21.32,0.43818,29,2.4,-21.32,0.53609,3,18,25.74,20.61,0.26139,28,6.24,20.61,0.62269,29,-13.27,20.61,0.11592,3,18,25.74,-21.32,0.25147,28,6.24,-21.32,0.6325,29,-13.27,-21.32,0.11603,3,18,10.08,20.61,0.75404,28,-9.43,20.61,0.24126,29,-28.94,20.61,0.0047,3,18,10.08,-21.32,0.71251,28,-9.43,-21.32,0.28267,29,-28.94,-21.32,0.00483,2,18,-4.5,-14.48,0.96301,28,-24,-14.48,0.03699,1,18,-10.46,-0.14,1,2,18,-4.35,14.2,0.97787,28,-23.86,14.2,0.02213,1,29,22.8,0,1,2,28,37.06,-14.05,0.06656,29,17.55,-14.05,0.93344,2,28,36.63,14.63,0.07131,29,17.12,14.63,0.92869],"edges":[0,2,2,4,4,6,8,10,10,12,14,16,16,18,18,20,22,24,24,26,6,8,26,0,12,14,20,22]}},"leg_R":{"leg_R":{"type":"mesh","hull":14,"width":64,"height":94,"uvs":[0.91569,0.82175,0.66667,0.96677,0.33333,0.96677,0.08209,0.82174,0.03772,0.66667,0.03772,0.5,0.03772,0.33333,0.09097,0.17826,0.33333,0.03172,0.66667,0.03172,0.91347,0.17825,0.95784,0.33333,0.95784,0.5,0.95784,0.66667,0.82642,0.66667,0.17137,0.66667,0.82642,0.5,0.17137,0.5,0.82642,0.33333,0.17136,0.33333,0.27822,0.17832,0.50231,0.11487,0.7264,0.17983,0.50453,0.88379,0.28487,0.82789,0.73306,0.82336],"triangles":[3,4,15,0,14,13,14,24,15,25,14,0,24,3,15,24,14,23,25,23,14,1,23,25,1,25,0,2,24,23,2,23,1,3,24,2,19,16,17,16,11,12,14,16,12,4,5,17,14,17,16,15,17,14,4,17,15,14,12,13,21,8,9,20,7,8,20,8,21,22,9,10,21,9,22,18,22,10,19,7,20,6,7,19,18,10,11,22,18,20,16,18,11,5,6,19,5,19,17,19,18,16,20,21,22,20,18,19],"vertices":[3,17,55.99,26.11,0.00083,26,36.48,26.11,0.20237,27,16.97,26.11,0.7968,2,26,50.11,10.17,0.0072,27,30.6,10.17,0.9928,2,26,50.11,-11.16,0.0024,27,30.6,-11.16,0.9976,3,17,55.99,-27.24,0.00143,26,36.48,-27.24,0.16227,27,16.97,-27.24,0.83631,3,17,41.41,-30.08,0.05536,26,21.9,-30.08,0.42087,27,2.4,-30.08,0.52378,3,17,25.74,-30.08,0.32546,26,6.24,-30.08,0.5329,27,-13.27,-30.08,0.14165,3,17,10.08,-30.08,0.73919,26,-9.43,-30.08,0.25162,27,-28.94,-30.08,0.0092,2,17,-4.5,-26.68,0.94049,26,-24.01,-26.68,0.05951,1,17,-18.28,-11.16,1,2,17,-18.28,10.17,0.99998,26,-37.78,10.17,0.00002,2,17,-4.5,25.96,0.93318,26,-24.01,25.96,0.06682,3,17,10.08,28.8,0.72647,26,-9.43,28.8,0.26865,27,-28.94,28.8,0.00489,3,17,25.74,28.8,0.308,26,6.24,28.8,0.57651,27,-13.27,28.8,0.11549,3,17,41.41,28.8,0.04773,26,21.9,28.8,0.47769,27,2.4,28.8,0.47459,3,17,41.41,20.39,0.03346,26,21.9,20.39,0.46719,27,2.4,20.39,0.49934,3,17,41.41,-21.53,0.03979,26,21.9,-21.53,0.40963,27,2.4,-21.53,0.55058,3,17,25.74,20.39,0.28724,26,6.24,20.39,0.61717,27,-13.27,20.39,0.0956,3,17,25.74,-21.53,0.30535,26,6.24,-21.53,0.57677,27,-13.27,-21.53,0.11788,3,17,10.08,20.39,0.76229,26,-9.43,20.39,0.23544,27,-28.94,20.39,0.00226,3,17,10.08,-21.53,0.77645,26,-9.43,-21.53,0.21871,27,-28.94,-21.53,0.00484,2,17,-4.5,-14.69,0.98281,26,-24,-14.69,0.01719,1,17,-10.46,-0.35,1,2,17,-4.35,13.99,0.97783,26,-23.86,13.99,0.02217,1,27,22.8,-0.21,1,2,26,37.06,-14.27,0.05603,27,17.55,-14.27,0.94397,2,26,36.63,14.42,0.0961,27,17.12,14.42,0.9039],"edges":[0,2,2,4,4,6,8,10,10,12,14,16,16,18,18,20,22,24,24,26,6,8,26,0,12,14,20,22]}},"light":{"light":{"x":-47.33,"y":-25.8,"rotation":-90,"width":128,"height":145}},"light2":{"light":{"x":-45.16,"y":-132.44,"rotation":-90,"width":128,"height":145}},"mouth":{"mouth":{"x":30.29,"y":-88.93,"rotation":-90,"width":70,"height":27}},"shadow":{"shadow":{"width":414,"height":67}},"stake":{"stake":{"x":58.86,"y":-0.6,"width":168,"height":27}},"stake2":{"stake":{"x":58.86,"y":-0.6,"width":168,"height":27}},"string":{"string":{"x":72.79,"y":0.15,"rotation":-90,"width":11,"height":158}},"string2":{"string":{"x":72.79,"y":0.15,"rotation":-90,"width":11,"height":158}},"trail":{"trail":{"x":-151.32,"width":632,"height":238}}}}],"events":{"arrow":{},"hit":{}},"animations":{"arrow":{"slots":{"arm":{"attachment":[{"name":null}]},"arm2":{"attachment":[{"name":null}]},"arrow":{"attachment":[{"name":"arrow"}]},"arrow2":{"attachment":[{"name":null}]},"arrow3":{"attachment":[{"name":null}]},"body":{"attachment":[{"name":null}]},"bow1":{"attachment":[{"name":null}]},"bow2":{"attachment":[{"name":null}]},"crossbow":{"attachment":[{"name":null}]},"eye":{"attachment":[{"name":null}]},"eye2":{"attachment":[{"name":null}]},"glasses":{"attachment":[{"name":null}]},"head":{"attachment":[{"name":null}]},"leg_L":{"attachment":[{"name":null}]},"leg_R":{"attachment":[{"name":null}]},"light":{"attachment":[{"name":"light"}]},"light2":{"attachment":[{"name":"light"}]},"mouth":{"attachment":[{"name":null}]},"shadow":{"attachment":[{"name":null}]},"stake":{"attachment":[{"name":null}]},"stake2":{"attachment":[{"name":null}]},"string":{"attachment":[{"name":null}]},"string2":{"attachment":[{"name":null}]},"trail":{"color":[{"color":"ffffff00"},{"time":0.1667,"color":"ffffffff","curve":"stepped"},{"time":4,"color":"ffffffff"}],"attachment":[{"name":"trail"}]}},"bones":{"chest":{"rotate":[{"angle":-1.91}],"translate":[{}],"scale":[{}]},"bone":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso":{"rotate":[{"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13}],"scale":[{}]},"torso1":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso4":{"rotate":[{}],"translate":[{"x":-0.04,"y":1.26}],"scale":[{}]},"torso5":{"rotate":[{}],"translate":[{"x":-0.01,"y":1.26}],"scale":[{}]},"head":{"rotate":[{"angle":4.36}],"translate":[{}],"scale":[{}]},"glasses":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armR":{"rotate":[{"angle":-15.88}],"translate":[{"x":-3.82,"y":9.37}],"scale":[{}]},"armR2":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR3":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR4":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR5":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"legR":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armL":{"rotate":[{"angle":-2.34}],"translate":[{"x":0.18,"y":-5.6}],"scale":[{}]},"armL2":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL3":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL4":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL5":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"head1":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head2":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head3":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head4":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"legR2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legR3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"head5":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"shadow":{"translate":[{"x":-7}],"scale":[{"x":0.97,"y":0.97}]},"glare":{"translate":[{}]},"arrow":{"rotate":[{"angle":-1.59}],"translate":[{"x":431.57,"y":-201.93}]}}},"arrow_explosion":{"slots":{"arm":{"attachment":[{"name":null}]},"arm2":{"attachment":[{"name":null}]},"arrow":{"attachment":[{"name":"arrow"},{"time":0.0333,"name":null}]},"arrow2":{"attachment":[{"name":null},{"time":0.0333,"name":null}]},"arrow3":{"attachment":[{"name":null},{"time":0.0333,"name":null}]},"body":{"attachment":[{"name":null}]},"bow1":{"attachment":[{"name":null}]},"bow2":{"attachment":[{"name":null}]},"crossbow":{"attachment":[{"name":null}]},"eye":{"attachment":[{"name":null}]},"eye2":{"attachment":[{"name":null}]},"fx1":{"color":[{"time":0.1333,"color":"ffffffff"},{"time":0.2333,"color":"ffffff7d"}],"attachment":[{"name":null},{"time":0.0333,"name":"fx1"},{"time":0.2333,"name":null},{"time":0.5333,"name":null}]},"fx2":{"color":[{"time":0.0667,"color":"ffffffff"},{"time":0.2667,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.0333,"name":"fx2"},{"time":0.2667,"name":null},{"time":0.5333,"name":null}]},"fx3":{"color":[{"time":0.0333,"color":"ffffffff"},{"time":0.2333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.0333,"name":"fx3"},{"time":0.2333,"name":null},{"time":0.5333,"name":null}]},"fx4":{"color":[{"time":0.1333,"color":"ffffffff"},{"time":0.3,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1333,"name":"fx4"},{"time":0.5333,"name":null}]},"fx5":{"color":[{"time":0.1333,"color":"ffffffff"},{"time":0.3,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1333,"name":"fx4"},{"time":0.5333,"name":null}]},"fx6":{"color":[{"time":0.1333,"color":"ffffffff"},{"time":0.3,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1333,"name":"fx4"},{"time":0.5333,"name":null}]},"fx7":{"color":[{"time":0.1333,"color":"ffffffff"},{"time":0.3,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1333,"name":"fx4"},{"time":0.5333,"name":null}]},"fx8":{"color":[{"time":0.1333,"color":"ffffffff"},{"time":0.3,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1333,"name":"fx4"},{"time":0.5333,"name":null}]},"fx9":{"color":[{"time":0.1333,"color":"ffffffff"},{"time":0.3,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1333,"name":"fx4"},{"time":0.5333,"name":null}]},"fx10":{"color":[{"time":0.1333,"color":"ffffffff"},{"time":0.3,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1333,"name":"fx4"},{"time":0.5333,"name":null}]},"fx11":{"color":[{"time":0.1333,"color":"ffffffff"},{"time":0.3,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1333,"name":"fx4"},{"time":0.5333,"name":null}]},"fx12":{"color":[{"time":0.1333,"color":"ffffffff"},{"time":0.2333,"color":"ffffff7d"}],"attachment":[{"time":0.0333,"name":null},{"time":0.2333,"name":null}]},"fx13":{"color":[{"time":0.1333,"color":"ffffffff"},{"time":0.2333,"color":"ffffff7d"}],"attachment":[{"time":0.0333,"name":null},{"time":0.2333,"name":null}]},"glasses":{"attachment":[{"name":null}]},"head":{"attachment":[{"name":null}]},"leg_L":{"attachment":[{"name":null}]},"leg_R":{"attachment":[{"name":null}]},"light":{"attachment":[{"name":"light"}]},"light2":{"attachment":[{"name":"light"}]},"mouth":{"attachment":[{"name":null}]},"shadow":{"attachment":[{"name":null}]},"stake":{"attachment":[{"name":null}]},"stake2":{"attachment":[{"name":null}]},"string":{"attachment":[{"name":null}]},"string2":{"attachment":[{"name":null}]},"trail":{"attachment":[{"name":"trail"},{"time":0.0333,"name":null}]}},"bones":{"1":{"rotate":[{"curve":"stepped"},{"time":0.0333,"curve":"stepped"},{"time":0.5333}],"translate":[{"x":124.29,"y":2.09,"curve":0,"c2":0.4,"c3":0.75},{"time":0.0333,"x":126.6,"y":2.09,"curve":0,"c2":0.4,"c3":0.75},{"time":0.2333,"x":149,"y":2.09,"curve":"stepped"},{"time":0.5333,"x":149,"y":2.09}],"scale":[{"curve":"stepped"},{"time":0.0333,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.1333,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.2333,"x":0.5,"y":0.1,"curve":"stepped"},{"time":0.5333,"x":0.5,"y":0.1}]},"2":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{"curve":"stepped"},{"time":0.0333,"curve":"stepped"},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.0333,"curve":0,"c2":0.4,"c3":0.75},{"time":0.2667,"x":0.2,"y":0.2},{"time":0.5333}]},"3":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{"curve":"stepped"},{"time":0.0333,"curve":0,"c2":0.4,"c3":0.75},{"time":0.2333,"x":-7.33},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.0333,"curve":0.25,"c4":0.6},{"time":0.2333,"x":1.5,"y":1.5},{"time":0.5333}]},"4":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{},{"time":0.1333,"x":3.57,"curve":0.25,"c4":0.6},{"time":0.3,"x":130.32},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"5":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{"curve":"stepped"},{"time":0.1333},{"time":0.3,"x":58.48},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"6":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{},{"time":0.1333,"x":-13.39,"curve":0.25,"c4":0.6},{"time":0.3,"x":10.04},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"7":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{},{"time":0.1333,"x":-7.37,"curve":0.25,"c4":0.6},{"time":0.3,"x":76.39},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"8":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{},{"time":0.1333,"x":-0.3,"curve":0.25,"c4":0.6},{"time":0.3,"x":30.96},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"9":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{},{"time":0.1333,"x":20.55,"curve":0.25,"c4":0.6},{"time":0.3,"x":75.41},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"10":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{},{"time":0.1333,"x":9.97,"curve":0.25,"c4":0.6},{"time":0.3,"x":44.72},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"11":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{},{"time":0.1333,"x":7.76,"curve":0.25,"c4":0.6},{"time":0.3,"x":57.26},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"chest":{"rotate":[{"angle":-1.91}],"translate":[{}],"scale":[{}]},"bone":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso":{"rotate":[{"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13}],"scale":[{}]},"torso1":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso4":{"rotate":[{}],"translate":[{"x":-0.04,"y":1.26}],"scale":[{}]},"torso5":{"rotate":[{}],"translate":[{"x":-0.01,"y":1.26}],"scale":[{}]},"head":{"rotate":[{"angle":4.36}],"translate":[{}],"scale":[{}]},"glasses":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armR":{"rotate":[{"angle":-15.88}],"translate":[{"x":-3.82,"y":9.37}],"scale":[{}]},"armR2":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR3":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR4":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR5":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"legR":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armL":{"rotate":[{"angle":-2.34}],"translate":[{"x":0.18,"y":-5.6}],"scale":[{}]},"armL2":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL3":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL4":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL5":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"head1":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head2":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head3":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head4":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"legR2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legR3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"head5":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"shadow":{"translate":[{"x":-7}],"scale":[{"x":0.97,"y":0.97}]},"glare":{"translate":[{}]},"arrow":{"rotate":[{"angle":-1.59}],"translate":[{"x":431.57,"y":-201.93}]},"particle8":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{"curve":"stepped"},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"particle7":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{"curve":"stepped"},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"particle6":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{"curve":"stepped"},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"particle5":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{"curve":"stepped"},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"particle4":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{"curve":"stepped"},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"particle3":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{"curve":"stepped"},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"particle2":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{"curve":"stepped"},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"particle1":{"rotate":[{"curve":"stepped"},{"time":0.5333}],"translate":[{"curve":"stepped"},{"time":0.5333}],"scale":[{"curve":"stepped"},{"time":0.5333}]},"explosion":{"rotate":[{"curve":"stepped"},{"time":0.0333,"curve":"stepped"},{"time":0.5333}],"translate":[{"x":115.93,"y":12.11,"curve":"stepped"},{"time":0.0333,"x":115.93,"y":12.11,"curve":"stepped"},{"time":0.5333,"x":115.93,"y":12.11}],"scale":[{"x":3,"y":2},{"time":0.0333},{"time":0.5333,"x":3,"y":2}]},"fx":{"rotate":[{"curve":"stepped"},{"time":0.0333,"curve":"stepped"},{"time":0.5333}],"translate":[{"x":-257.27,"y":-152.12,"curve":"stepped"},{"time":0.0333,"x":-257.27,"y":-152.12,"curve":"stepped"},{"time":0.5333,"x":-257.27,"y":-152.12}],"scale":[{"curve":"stepped"},{"time":0.0333,"curve":"stepped"},{"time":0.5333}]},"1b":{"rotate":[{"time":0.0333,"angle":5}],"translate":[{"x":191.74,"y":114.23,"curve":0,"c2":0.4,"c3":0.75},{"time":0.0333,"x":105.69,"y":76.67,"curve":0,"c2":0.35,"c3":0.621,"c4":0.84},{"time":0.2333,"x":127.58,"y":79.03,"curve":"stepped"},{"time":0.5333,"x":127.58,"y":79.03}],"scale":[{"time":0.0333,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.1333,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.2333,"x":0.5,"y":0.1}]},"1c":{"rotate":[{"time":0.0333,"angle":-5}],"translate":[{"x":122.65,"y":-73.3,"curve":0,"c2":0.4,"c3":0.75},{"time":0.0333,"x":106.06,"y":-72.76,"curve":0,"c2":0.35,"c3":0.621,"c4":0.84},{"time":0.2333,"x":138.31,"y":-74.66,"curve":"stepped"},{"time":0.5333,"x":138.31,"y":-74.66}],"scale":[{"time":0.0333,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.1333,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.2333,"x":0.5,"y":0.1}]}},"drawOrder":[{"time":0.0333,"offsets":[{"slot":"fx12","offset":25},{"slot":"fx13","offset":25}]},{"time":0.2,"offsets":[{"slot":"fx1","offset":-10}]}],"events":[{"time":0.0333,"name":"hit"}]},"attack_01":{"slots":{"eye":{"attachment":[{"name":null}]},"eye2":{"attachment":[{"name":null}]},"fx1":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff7d"}],"attachment":[{"name":null},{"time":0.1667,"name":"fx1"},{"time":0.3667,"name":null},{"time":0.5,"name":null}]},"fx2":{"color":[{"time":0.2,"color":"ffffffff"},{"time":0.4,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1667,"name":"fx2"},{"time":0.4,"name":null},{"time":0.5,"name":null}]},"fx3":{"color":[{"time":0.1667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1667,"name":"fx3"},{"time":0.3667,"name":null},{"time":0.5,"name":null}]},"fx4":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx5":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx6":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx7":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx8":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx9":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx10":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx11":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx12":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff7d"}],"attachment":[{"name":null},{"time":0.1667,"name":null},{"time":0.5,"name":null}]},"fx13":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff7d"}],"attachment":[{"name":null},{"time":0.1667,"name":null},{"time":0.5,"name":null}]},"light":{"attachment":[{"name":"light"},{"time":0.3333,"name":null}]},"light2":{"attachment":[{"name":"light"},{"time":0.3333,"name":null}]},"mouth":{"attachment":[{"name":null}]}},"bones":{"1":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":24.71},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.2667,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.3667,"x":0.5,"y":0.1},{"time":0.5}]},"2":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.4,"c3":0.75},{"time":0.4,"x":0.2,"y":0.2},{"time":0.5}]},"3":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":-7.33},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0.25,"c4":0.6},{"time":0.3667,"x":1.5,"y":1.5},{"time":0.5}]},"4":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":3.57,"curve":0.25,"c4":0.6},{"time":0.4333,"x":130.32},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"5":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.2667},{"time":0.4333,"x":58.48},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"6":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":-13.39,"curve":0.25,"c4":0.6},{"time":0.4333,"x":10.04},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"7":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":-7.37,"curve":0.25,"c4":0.6},{"time":0.4333,"x":76.39},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"8":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":-0.3,"curve":0.25,"c4":0.6},{"time":0.4333,"x":30.96},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"9":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":20.55,"curve":0.25,"c4":0.6},{"time":0.4333,"x":75.41},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"10":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":9.97,"curve":0.25,"c4":0.6},{"time":0.4333,"x":44.72},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"11":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":7.76,"curve":0.25,"c4":0.6},{"time":0.4333,"x":57.26},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"head2":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armR2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":28.85,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":4.37,"curve":"stepped"},{"time":0.2667,"angle":4.37,"curve":"stepped"},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"legL3":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"head1":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armL4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":14.11,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":14.09,"curve":"stepped"},{"time":0.2667,"angle":14.09,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armL3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":14.11,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":14.09,"curve":"stepped"},{"time":0.2667,"angle":14.09,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"torso4":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":1.22,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.5}],"translate":[{"x":-0.04,"y":1.26,"curve":0.25,"c3":0.75},{"time":0.1,"x":0.15,"y":3.83,"curve":0.25,"c4":0.6},{"time":0.1667,"x":0.48,"y":-7.5,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":0.13,"y":-4.07,"curve":0.25,"c3":0.75},{"time":0.5,"x":-0.04,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"head3":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armL":{"rotate":[{"angle":-2.34,"curve":0.25,"c3":0.75},{"time":0.1,"angle":34.66,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-46.64,"curve":"stepped"},{"time":0.2667,"angle":-46.64,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-2.34}],"translate":[{"x":0.18,"y":-5.6,"curve":"stepped"},{"time":0.1,"x":0.18,"y":-5.6,"curve":0.25,"c4":0.6},{"time":0.1667,"x":-21.01,"y":134.8,"curve":"stepped"},{"time":0.2667,"x":-21.01,"y":134.8,"curve":0.25,"c3":0.75},{"time":0.5,"x":0.18,"y":-5.6}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"legR3":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armR":{"rotate":[{"angle":-15.88,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-89.03,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":71.17,"curve":"stepped"},{"time":0.2667,"angle":71.17,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-15.88}],"translate":[{"x":-3.82,"y":9.37,"curve":0.25,"c3":0.75},{"time":0.1,"x":7.27,"y":8.05,"curve":0.25,"c4":0.6},{"time":0.1667,"x":-2.08,"y":-45.13,"curve":"stepped"},{"time":0.2667,"x":-2.08,"y":-45.13,"curve":0.25,"c3":0.75},{"time":0.5,"x":-3.82,"y":9.37}],"scale":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":1.132,"curve":"stepped"},{"time":0.2667,"x":1.132,"curve":0.25,"c3":0.75},{"time":0.5}]},"legL2":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"torso2":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":1.22,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.5}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.1,"y":-2.99,"curve":"stepped"},{"time":0.2667,"x":0.1,"y":-2.99,"curve":0.25,"c3":0.75},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"torso3":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":1.22,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.5}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.38,"y":-7.17,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":0.13,"y":-3.94,"curve":0.25,"c3":0.75},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"glasses":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":12.54,"y":1.04,"curve":0.25,"c3":0.75},{"time":0.3333,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"legR2":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"torso":{"rotate":[{"angle":-1.84,"curve":0.25,"c3":0.75},{"time":0.1,"angle":0.69,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.84,"curve":"stepped"},{"time":0.2667,"angle":-1.84,"curve":"stepped"},{"time":0.5,"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13,"curve":0.25,"c3":0.75},{"time":0.1,"x":-25.21,"y":-0.13,"curve":0.25,"c4":0.6},{"time":0.1667,"x":23.3,"y":-1.1,"curve":"stepped"},{"time":0.2667,"x":23.3,"y":-1.1,"curve":0.25,"c3":0.75},{"time":0.5,"x":-6.97,"y":-0.13}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"head5":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armL5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":14.11,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":14.09,"curve":"stepped"},{"time":0.2667,"angle":14.09,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"stakeR":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":-28.73,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-80.44,"curve":"stepped"},{"time":0.2667,"angle":-80.44,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":-50.22},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":0.25,"c4":0.6},{"time":0.1667,"x":10.71,"y":0.25,"curve":"stepped"},{"time":0.2667,"x":10.71,"y":0.25,"curve":0.25,"c3":0.75},{"time":0.5}]},"torso5":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":1.22,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.5}],"translate":[{"x":-0.01,"y":1.26,"curve":0.25,"c3":0.75},{"time":0.1,"x":0.41,"y":5.53,"curve":0.25,"c4":0.6},{"time":0.1667,"x":0.72,"y":-9.18,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":0.19,"y":-4.96,"curve":0.25,"c3":0.75},{"time":0.5,"x":-0.01,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"chest":{"rotate":[{"angle":-1.91,"curve":0.25,"c3":0.75},{"time":0.1,"angle":2.32,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.91,"curve":"stepped"},{"time":0.2333,"angle":-1.91,"curve":"stepped"},{"time":0.2667,"angle":-1.91,"curve":"stepped"},{"time":0.3,"angle":-1.91,"curve":"stepped"},{"time":0.5,"angle":-1.91}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1,"x":-12.22,"y":1.28,"curve":0.25,"c4":0.6},{"time":0.1667,"x":2.11,"y":-20.43,"curve":"stepped"},{"time":0.2333,"x":2.11,"y":-20.43,"curve":"stepped"},{"time":0.2667,"x":2.11,"y":-20.43,"curve":"stepped"},{"time":0.3,"x":2.11,"y":-20.43,"curve":0.25,"c3":0.75},{"time":0.5}],"scale":[{"curve":0.25,"c3":0.75},{"time":0.1,"x":1.117,"y":1.117,"curve":0.25,"c4":0.6},{"time":0.1667,"x":0.782,"y":0.782,"curve":"stepped"},{"time":0.2333,"x":0.782,"y":0.782,"curve":"stepped"},{"time":0.2667,"x":0.782,"y":0.782,"curve":"stepped"},{"time":0.3,"x":0.782,"y":0.782,"curve":0.25,"c3":0.75},{"time":0.5}]},"armR4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":28.85,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":4.37,"curve":"stepped"},{"time":0.2667,"angle":4.37,"curve":"stepped"},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armR3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":28.85,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":4.37,"curve":"stepped"},{"time":0.2667,"angle":4.37,"curve":"stepped"},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armL2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":14.11,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":14.09,"curve":"stepped"},{"time":0.2667,"angle":14.09,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"shadow":{"translate":[{"x":-7,"curve":0.25,"c3":0.75},{"time":0.1,"x":-10,"curve":0.25,"c4":0.6},{"time":0.1667,"x":30,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2333,"x":25,"curve":"stepped"},{"time":0.3,"x":25,"curve":0,"c2":0.21,"c3":0.75},{"time":0.5,"x":-7}]},"head":{"rotate":[{"angle":4.36,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-1.82,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.29,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.54,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.36}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.36,"y":-2.38,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"torso1":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":1.22,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.5}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.11,"y":-3.49,"curve":"stepped"},{"time":0.2667,"x":0.11,"y":-3.49,"curve":0.25,"c3":0.75},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"legL":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":0.25,"c3":0.625,"c4":0.5},{"time":0.1,"y":9.75,"curve":0.375,"c2":0.5,"c3":0.75},{"time":0.1667,"x":48.76,"curve":"stepped"},{"time":0.3333,"x":48.76,"curve":0,"c2":0.19,"c3":0.437,"c4":0.6},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"head4":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"bone":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"legR":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armR5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":28.85,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":4.37,"curve":"stepped"},{"time":0.2667,"angle":4.37,"curve":"stepped"},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"stakeL":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":-5.24,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-9.01,"curve":"stepped"},{"time":0.2667,"angle":-9.01,"curve":0.25,"c3":0.75},{"time":0.5}]},"1b":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":24.71},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.2667,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.3667,"x":0.5,"y":0.1},{"time":0.5}]},"glare":{"translate":[{},{"time":0.3333,"y":152.85},{"time":0.5}]},"fx":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"x":75.81,"y":10.64,"curve":"stepped"},{"time":0.5,"x":75.81,"y":10.64}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle8":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle7":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle6":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle5":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle4":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle3":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle2":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle1":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"explosion":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"1c":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":24.71},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.2667,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.3667,"x":0.5,"y":0.1},{"time":0.5}]}},"events":[{"time":0.1667,"name":"hit"}]},"attack_02":{"slots":{"eye":{"attachment":[{"name":null}]},"eye2":{"attachment":[{"name":null}]},"fx1":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff7d"}],"attachment":[{"name":null},{"time":0.5,"name":null}]},"fx2":{"color":[{"time":0.2,"color":"ffffffff"},{"time":0.4,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1667,"name":null},{"time":0.4,"name":null},{"time":0.5,"name":null}]},"fx3":{"color":[{"time":0.1667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1667,"name":null},{"time":0.3667,"name":null},{"time":0.5,"name":null}]},"fx4":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx5":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx6":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx7":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx8":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx9":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx10":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx11":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.5,"name":null}]},"fx12":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff7d"}],"attachment":[{"name":null},{"time":0.1667,"name":"fx1"},{"time":0.3667,"name":null},{"time":0.5,"name":null}]},"fx13":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff7d"}],"attachment":[{"name":null},{"time":0.1667,"name":null},{"time":0.5,"name":null}]},"light":{"attachment":[{"name":"light"},{"time":0.3333,"name":null}]},"light2":{"attachment":[{"name":"light"},{"time":0.3333,"name":null}]},"mouth":{"attachment":[{"name":null}]}},"bones":{"1":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":24.71},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.2667,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.3667,"x":0.5,"y":0.1},{"time":0.5}]},"2":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.4,"c3":0.75},{"time":0.4,"x":0.2,"y":0.2},{"time":0.5}]},"3":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":-7.33},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0.25,"c4":0.6},{"time":0.3667,"x":1.5,"y":1.5},{"time":0.5}]},"4":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":3.57,"curve":0.25,"c4":0.6},{"time":0.4333,"x":130.32},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"5":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.2667},{"time":0.4333,"x":58.48},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"6":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":-13.39,"curve":0.25,"c4":0.6},{"time":0.4333,"x":10.04},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"7":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":-7.37,"curve":0.25,"c4":0.6},{"time":0.4333,"x":76.39},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"8":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":-0.3,"curve":0.25,"c4":0.6},{"time":0.4333,"x":30.96},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"9":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":20.55,"curve":0.25,"c4":0.6},{"time":0.4333,"x":75.41},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"10":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":9.97,"curve":0.25,"c4":0.6},{"time":0.4333,"x":44.72},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"11":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.2667,"x":7.76,"curve":0.25,"c4":0.6},{"time":0.4333,"x":57.26},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"head1":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armR":{"rotate":[{"angle":-15.88,"curve":0.25,"c3":0.75},{"time":0.1,"angle":29.67,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-60.07,"curve":"stepped"},{"time":0.2667,"angle":-60.07,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-15.88}],"translate":[{"x":-3.82,"y":9.37,"curve":0.25,"c3":0.75},{"time":0.1,"x":0.36,"y":-49.91,"curve":0.25,"c4":0.6},{"time":0.1667,"x":-11.26,"y":15.74,"curve":"stepped"},{"time":0.2667,"x":-11.26,"y":15.74,"curve":0.25,"c3":0.75},{"time":0.5,"x":-3.82,"y":9.37}],"scale":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":1.132,"curve":"stepped"},{"time":0.2667,"x":1.132,"curve":0.25,"c3":0.75},{"time":0.5}]},"legL2":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armL5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":22.62,"curve":0.217,"c4":0.6},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armL3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":22.62,"curve":0.217,"c4":0.6},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armL2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":22.62,"curve":0.217,"c4":0.6},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"torso3":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":2.89,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.5}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.38,"y":-7.17,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":0.13,"y":-3.94,"curve":0.25,"c3":0.75},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"head2":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"legL":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":0.29,"c3":0.629,"c4":0.38},{"time":0.1667,"x":36.37,"y":-0.22,"curve":0.299,"c2":0.22,"c3":0.649,"c4":0.61},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"legR2":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"glasses":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":7.66,"y":0.63,"curve":0.25,"c3":0.75},{"time":0.3333,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"legR3":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"torso1":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":1.22,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.5}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.11,"y":-3.49,"curve":"stepped"},{"time":0.2667,"x":0.11,"y":-3.49,"curve":0.25,"c3":0.75},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"torso2":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":1.22,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.5}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.1,"y":-2.99,"curve":"stepped"},{"time":0.2667,"x":0.1,"y":-2.99,"curve":0.25,"c3":0.75},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"head":{"rotate":[{"angle":4.36,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-7.05,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.29,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.54,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.36}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.36,"y":-2.38,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"head4":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"bone":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"legL3":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armL4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":22.62,"curve":0.217,"c4":0.6},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"torso4":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":2.68,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.5}],"translate":[{"x":-0.04,"y":1.26,"curve":0.25,"c3":0.75},{"time":0.1,"x":0.15,"y":3.83,"curve":0.25,"c4":0.6},{"time":0.1667,"x":0.48,"y":-7.5,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":0.13,"y":-4.07,"curve":0.25,"c3":0.75},{"time":0.5,"x":-0.04,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armR3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":17.01,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":19.1,"curve":"stepped"},{"time":0.2667,"angle":19.1,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armR2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":17.01,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":19.1,"curve":"stepped"},{"time":0.2667,"angle":19.1,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armL":{"rotate":[{"angle":-2.34,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-79.41,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":90.71,"curve":"stepped"},{"time":0.2667,"angle":90.71,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-2.34}],"translate":[{"x":0.18,"y":-5.6,"curve":"stepped"},{"time":0.1,"x":0.18,"y":-5.6,"curve":0.25,"c4":0.6},{"time":0.1667,"x":-3.36,"y":17.86,"curve":"stepped"},{"time":0.2667,"x":-3.36,"y":17.86,"curve":0.25,"c3":0.75},{"time":0.5,"x":0.18,"y":-5.6}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"stakeL":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":-10.01,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-82.48,"curve":"stepped"},{"time":0.2667,"angle":-82.48,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":-45.78},{"time":0.5}]},"torso5":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":2.63,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.5}],"translate":[{"x":-0.01,"y":1.26,"curve":0.25,"c3":0.75},{"time":0.1,"x":0.41,"y":5.53,"curve":0.25,"c4":0.6},{"time":0.1667,"x":0.72,"y":-9.18,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":0.19,"y":-4.96,"curve":0.25,"c3":0.75},{"time":0.5,"x":-0.01,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"torso":{"rotate":[{"angle":-1.84,"curve":0.25,"c3":0.75},{"time":0.1,"angle":0.69,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.84,"curve":"stepped"},{"time":0.2667,"angle":-1.84,"curve":"stepped"},{"time":0.5,"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13,"curve":0.25,"c3":0.75},{"time":0.1,"x":-25.21,"y":-0.13,"curve":0.25,"c4":0.6},{"time":0.1667,"x":28.53,"y":10.66,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":23.3,"y":-1.1,"curve":0.25,"c3":0.75},{"time":0.5,"x":-6.97,"y":-0.13}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"legR":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"angle":-26.86,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"translate":[{"curve":0.265,"c3":0.618,"c4":0.43},{"time":0.1667,"x":3.09,"y":-5.15,"curve":0.351,"c2":0.4,"c3":0.757},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"head3":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"chest":{"rotate":[{"angle":-1.91,"curve":0.284,"c3":0.624,"c4":0.37},{"time":0.1,"angle":-2.53,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.91,"curve":"stepped"},{"time":0.2333,"angle":-1.91,"curve":"stepped"},{"time":0.2667,"angle":-1.91,"curve":"stepped"},{"time":0.3,"angle":-1.91,"curve":"stepped"},{"time":0.5,"angle":-1.91}],"translate":[{"curve":0.284,"c3":0.624,"c4":0.37},{"time":0.1,"x":-12.9,"y":-7.69,"curve":0.25,"c4":0.6},{"time":0.1667,"x":2.11,"y":-20.43,"curve":"stepped"},{"time":0.2333,"x":2.11,"y":-20.43,"curve":"stepped"},{"time":0.2667,"x":2.11,"y":-20.43,"curve":"stepped"},{"time":0.3,"x":2.11,"y":-20.43,"curve":0.25,"c3":0.75},{"time":0.5}],"scale":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"x":0.671,"y":0.671,"curve":0.25,"c4":0.6},{"time":0.1667,"x":0.782,"y":0.782,"curve":"stepped"},{"time":0.2333,"x":0.782,"y":0.782,"curve":"stepped"},{"time":0.2667,"x":0.782,"y":0.782,"curve":"stepped"},{"time":0.3,"x":0.782,"y":0.782,"curve":0.25,"c3":0.75},{"time":0.5}]},"armR5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":17.01,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":19.1,"curve":"stepped"},{"time":0.2667,"angle":19.1,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"stakeR":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":-22.83,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-34.6,"curve":"stepped"},{"time":0.2667,"angle":-34.6,"curve":0,"c2":0.21,"c3":0.75},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}]},"head5":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"armR4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":17.01,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":19.1,"curve":"stepped"},{"time":0.2667,"angle":19.1,"curve":0.25,"c3":0.75},{"time":0.5,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.5}]},"shadow":{"translate":[{"x":-7,"curve":0.25,"c3":0.75},{"time":0.1,"x":-10,"curve":0.25,"c4":0.6},{"time":0.1667,"x":30,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2333,"x":25,"curve":"stepped"},{"time":0.3,"x":25,"curve":0,"c2":0.21,"c3":0.75},{"time":0.5,"x":-7}]},"fx":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"x":199.46,"curve":"stepped"},{"time":0.5,"x":199.46}],"scale":[{"curve":"stepped"},{"time":0.5}]},"1b":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{},{"time":0.1667,"x":17.01,"y":13.23,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":24.71},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.2667,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.3667,"x":0.5,"y":0.1},{"time":0.5}]},"glare":{"translate":[{},{"time":0.3333,"y":152.85},{"time":0.5}]},"particle8":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle7":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle6":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle5":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle4":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle3":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle2":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"particle1":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"explosion":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.5}]},"1c":{"rotate":[{"curve":"stepped"},{"time":0.5}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":24.71},{"time":0.5}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.2667,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.3667,"x":0.5,"y":0.1},{"time":0.5}]}},"events":[{"time":0.1667,"name":"hit"}]},"attack_03":{"slots":{"eye":{"attachment":[{"name":null}]},"eye2":{"attachment":[{"name":null}]},"fx1":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff7d"}],"attachment":[{"name":null},{"time":0.1667,"name":"fx1"},{"time":0.3667,"name":null},{"time":0.6667,"name":null}]},"fx2":{"color":[{"time":0.2,"color":"ffffffff"},{"time":0.4,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1667,"name":"fx2"},{"time":0.4,"name":null},{"time":0.6667,"name":null}]},"fx3":{"color":[{"time":0.1667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.1667,"name":"fx3"},{"time":0.3667,"name":null},{"time":0.6667,"name":null}]},"fx4":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.6667,"name":null}]},"fx5":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.6667,"name":null}]},"fx6":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.6667,"name":null}]},"fx7":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.6667,"name":null}]},"fx8":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.6667,"name":null}]},"fx9":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.6667,"name":null}]},"fx10":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.6667,"name":null}]},"fx11":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.4333,"color":"ffffff00"}],"attachment":[{"name":null},{"time":0.2667,"name":"fx4"},{"time":0.6667,"name":null}]},"fx12":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff7d"}],"attachment":[{"time":0.1667,"name":"fx1"},{"time":0.3667,"name":null}]},"fx13":{"color":[{"time":0.2667,"color":"ffffffff"},{"time":0.3667,"color":"ffffff7d"}],"attachment":[{"time":0.1667,"name":null}]},"light":{"attachment":[{"name":"light"},{"time":0.3333,"name":null}]},"light2":{"attachment":[{"name":"light"},{"time":0.3333,"name":null}]},"mouth":{"attachment":[{"name":null}]}},"bones":{"1":{"rotate":[{"angle":-358.7,"curve":"stepped"},{"time":0.1667,"angle":-358.7,"curve":"stepped"},{"time":0.6667,"angle":-358.7}],"translate":[{"x":24.18,"y":11.96,"curve":"stepped"},{"time":0.1667,"x":24.18,"y":11.96,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":48.89,"y":11.96,"curve":"stepped"},{"time":0.6667,"x":48.89,"y":11.96}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.2667,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.3667,"x":0.5,"y":0.1,"curve":"stepped"},{"time":0.6667,"x":0.5,"y":0.1}]},"2":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.4,"c3":0.75},{"time":0.4,"x":0.2,"y":0.2},{"time":0.6667}]},"3":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":-7.33},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":0.25,"c4":0.6},{"time":0.3667,"x":1.5,"y":1.5},{"time":0.6667}]},"4":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{},{"time":0.2667,"x":3.57,"curve":0.25,"c4":0.6},{"time":0.4333,"x":130.32},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"5":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.2667},{"time":0.4333,"x":58.48},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"6":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{},{"time":0.2667,"x":-13.39,"curve":0.25,"c4":0.6},{"time":0.4333,"x":10.04},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"7":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{},{"time":0.2667,"x":-7.37,"curve":0.25,"c4":0.6},{"time":0.4333,"x":76.39},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"8":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{},{"time":0.2667,"x":-0.3,"curve":0.25,"c4":0.6},{"time":0.4333,"x":30.96},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"9":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{},{"time":0.2667,"x":20.55,"curve":0.25,"c4":0.6},{"time":0.4333,"x":75.41},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"10":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{},{"time":0.2667,"x":9.97,"curve":0.25,"c4":0.6},{"time":0.4333,"x":44.72},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"11":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{},{"time":0.2667,"x":7.76,"curve":0.25,"c4":0.6},{"time":0.4333,"x":57.26},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"armL5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":22.62,"curve":0.217,"c3":0.783,"c4":0.52},{"time":0.1667,"angle":23.48,"curve":"stepped"},{"time":0.2667,"angle":23.48,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":23.11,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"glasses":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":7.66,"y":0.63,"curve":0.25,"c3":0.75},{"time":0.3333,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"legR3":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"armL4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":22.62,"curve":0.217,"c3":0.783,"c4":0.52},{"time":0.1667,"angle":23.48,"curve":"stepped"},{"time":0.2667,"angle":23.48,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":23.11,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"armL2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":22.62,"curve":0.217,"c3":0.783,"c4":0.52},{"time":0.1667,"angle":23.48,"curve":"stepped"},{"time":0.2667,"angle":23.48,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":23.11,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"armL":{"rotate":[{"angle":-2.34,"curve":0.25,"c3":0.75},{"time":0.1,"angle":164.55,"curve":0.217,"c3":0.783,"c4":0.52},{"time":0.1667,"angle":67.7,"curve":"stepped"},{"time":0.2667,"angle":67.7,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":96.81,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":-2.34}],"translate":[{"x":0.18,"y":-5.6,"curve":"stepped"},{"time":0.1,"x":0.18,"y":-5.6,"curve":0.25,"c4":0.6},{"time":0.1667,"x":-3.36,"y":17.86,"curve":"stepped"},{"time":0.2667,"x":-3.36,"y":17.86,"curve":0.25,"c3":0.75},{"time":0.6667,"x":0.18,"y":-5.6}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"torso2":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":1.22,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.6667}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.1,"y":-2.99,"curve":"stepped"},{"time":0.2667,"x":0.1,"y":-2.99,"curve":0.25,"c3":0.75},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"head1":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"legR":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"head4":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"head":{"rotate":[{"angle":4.36,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-7.05,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.29,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.54,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":4.36}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.36,"y":-2.38,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"legR2":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"torso":{"rotate":[{"angle":-1.84,"curve":0.25,"c3":0.75},{"time":0.1,"angle":0.69,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.84,"curve":"stepped"},{"time":0.2667,"angle":-1.84,"curve":"stepped"},{"time":0.6667,"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13,"curve":0.25,"c3":0.75},{"time":0.1,"x":-25.21,"y":-0.13,"curve":0.25,"c4":0.6},{"time":0.1667,"x":23.3,"y":-1.1,"curve":"stepped"},{"time":0.2667,"x":23.3,"y":-1.1,"curve":0.25,"c3":0.75},{"time":0.6667,"x":-6.97,"y":-0.13}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"torso1":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":1.22,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.6667}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.11,"y":-3.49,"curve":"stepped"},{"time":0.2667,"x":0.11,"y":-3.49,"curve":0.25,"c3":0.75},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"torso5":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":2.63,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.6667}],"translate":[{"x":-0.01,"y":1.26,"curve":0.25,"c3":0.75},{"time":0.1,"x":0.41,"y":5.53,"curve":0.25,"c4":0.6},{"time":0.1667,"x":0.72,"y":-9.18,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":0.19,"y":-4.96,"curve":0.25,"c3":0.75},{"time":0.6667,"x":-0.01,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"head3":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"chest":{"rotate":[{"angle":-1.91,"curve":0.284,"c3":0.624,"c4":0.37},{"time":0.1,"angle":-2.53,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.91,"curve":"stepped"},{"time":0.2333,"angle":-1.91,"curve":"stepped"},{"time":0.2667,"angle":-1.91,"curve":"stepped"},{"time":0.3,"angle":-1.91,"curve":"stepped"},{"time":0.6667,"angle":-1.91}],"translate":[{"curve":0.284,"c3":0.624,"c4":0.37},{"time":0.1,"x":-12.9,"y":-7.69,"curve":0.25,"c4":0.6},{"time":0.1667,"x":2.11,"y":-20.43,"curve":"stepped"},{"time":0.2333,"x":2.11,"y":-20.43,"curve":"stepped"},{"time":0.2667,"x":2.11,"y":-20.43,"curve":"stepped"},{"time":0.3,"x":2.11,"y":-20.43,"curve":0.25,"c3":0.75},{"time":0.6667}],"scale":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"x":0.671,"y":0.671,"curve":0.25,"c4":0.6},{"time":0.1667,"x":0.782,"y":0.782,"curve":"stepped"},{"time":0.2333,"x":0.782,"y":0.782,"curve":"stepped"},{"time":0.2667,"x":0.782,"y":0.782,"curve":"stepped"},{"time":0.3,"x":0.782,"y":0.782,"curve":0.25,"c3":0.75},{"time":0.6667}]},"legL2":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"armL3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":22.62,"curve":0.217,"c3":0.783,"c4":0.52},{"time":0.1667,"angle":23.48,"curve":"stepped"},{"time":0.2667,"angle":23.48,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":23.11,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"head5":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"torso3":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":2.89,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.6667}],"translate":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":0.38,"y":-7.17,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":0.13,"y":-3.94,"curve":0.25,"c3":0.75},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"armR2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":25.4,"curve":0.217,"c3":0.783,"c4":0.52},{"time":0.1667,"angle":19.1,"curve":"stepped"},{"time":0.2667,"angle":19.1,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":21.8,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"armR":{"rotate":[{"angle":-15.88,"curve":0.25,"c3":0.75},{"time":0.1,"angle":147.28,"curve":0.209,"c3":0.684,"c4":0.47},{"time":0.1667,"angle":64.02,"curve":"stepped"},{"time":0.2667,"angle":64.02,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":86.95,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":-15.88}],"translate":[{"x":-3.82,"y":9.37,"curve":0.25,"c3":0.75},{"time":0.1,"x":7.71,"y":-13.21,"curve":0.25,"c4":0.6},{"time":0.1667,"x":-2.99,"y":-39.08,"curve":"stepped"},{"time":0.2667,"x":-2.99,"y":-39.08,"curve":0.25,"c3":0.75},{"time":0.6667,"x":-3.82,"y":9.37}],"scale":[{"curve":0.25,"c3":0.75},{"time":0.1667,"x":1.132,"curve":"stepped"},{"time":0.2667,"x":1.132,"curve":0.25,"c3":0.75},{"time":0.6667}]},"legL":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":0.25,"c3":0.625,"c4":0.5},{"time":0.1,"y":9.75,"curve":0.375,"c2":0.5,"c3":0.75},{"time":0.1667,"x":48.76,"curve":"stepped"},{"time":0.5,"x":48.76,"curve":0,"c2":0.19,"c3":0.437,"c4":0.6},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"stakeR":{"rotate":[{"curve":0.284,"c3":0.625,"c4":0.38},{"time":0.0667,"angle":-122.94,"curve":0.381,"c2":0.55,"c3":0.742},{"time":0.1,"angle":169.96,"curve":0,"c2":0.21,"c3":0.75},{"time":0.1667,"angle":-153.23,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":-150.89},{"time":0.3667,"angle":-178.82,"curve":0.474,"c3":0.821,"c4":0.74},{"time":0.5,"angle":-26.26,"curve":0.306,"c2":0.2,"c4":0.66},{"time":0.6667}],"translate":[{}]},"torso4":{"rotate":[{"curve":0.25,"c3":0.75},{"time":0.1,"angle":2.68,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":-1.35,"curve":"stepped"},{"time":0.2667,"angle":-1.35,"curve":0.25,"c3":0.75},{"time":0.6667}],"translate":[{"x":-0.04,"y":1.26,"curve":0.25,"c3":0.75},{"time":0.1,"x":0.15,"y":3.83,"curve":0.25,"c4":0.6},{"time":0.1667,"x":0.48,"y":-7.5,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"x":0.13,"y":-4.07,"curve":0.25,"c3":0.75},{"time":0.6667,"x":-0.04,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"bone":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"armR5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":25.4,"curve":0.217,"c3":0.783,"c4":0.52},{"time":0.1667,"angle":19.1,"curve":"stepped"},{"time":0.2667,"angle":19.1,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":21.8,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"head2":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.75},{"time":0.1,"angle":-3.37,"curve":0.25,"c4":0.6},{"time":0.1667,"angle":2.24,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":1.15,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"glare":{"translate":[{},{"time":0.3333,"y":152.85},{"time":0.6667}]},"armR4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":25.4,"curve":0.217,"c3":0.783,"c4":0.52},{"time":0.1667,"angle":19.1,"curve":"stepped"},{"time":0.2667,"angle":19.1,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":21.8,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"stakeL":{"rotate":[{"curve":0.284,"c3":0.625,"c4":0.38},{"time":0.0667,"angle":-139.83,"curve":0.381,"c2":0.55,"c3":0.742},{"time":0.1,"angle":143.11,"curve":0,"c2":0.21,"c3":0.75},{"time":0.1667,"angle":-162.14,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2667,"angle":-159.8},{"time":0.3667,"angle":161.52,"curve":0.474,"c3":0.821,"c4":0.74},{"time":0.5,"angle":-37.86,"curve":0.306,"c2":0.2,"c4":0.66},{"time":0.6667}]},"legL3":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"armR3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.1,"angle":25.4,"curve":0.217,"c3":0.783,"c4":0.52},{"time":0.1667,"angle":19.1,"curve":"stepped"},{"time":0.2667,"angle":19.1,"curve":0.25,"c3":0.75},{"time":0.3667,"angle":21.8,"curve":0.25,"c3":0.75},{"time":0.6667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2667,"curve":"stepped"},{"time":0.6667}]},"shadow":{"translate":[{"x":-7,"curve":0.25,"c3":0.75},{"time":0.1,"x":-10,"curve":0.25,"c4":0.6},{"time":0.1667,"x":30,"curve":0,"c2":0.21,"c3":0.75},{"time":0.2333,"x":25,"curve":"stepped"},{"time":0.3,"x":25,"curve":0,"c2":0.21,"c3":0.75},{"time":0.6667,"x":-7}]},"fx":{"rotate":[{"angle":-25.21,"curve":"stepped"},{"time":0.1667,"angle":-25.21,"curve":"stepped"},{"time":0.6667,"angle":-25.21}],"translate":[{"x":-63.27,"y":-3.94,"curve":"stepped"},{"time":0.1667,"x":-63.27,"y":-3.94,"curve":"stepped"},{"time":0.6667,"x":-63.27,"y":-3.94}],"scale":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.6667}]},"1b":{"rotate":[{"time":0.1667,"angle":13}],"translate":[{"x":191.74,"y":114.23,"curve":"stepped"},{"time":0.1667,"x":191.74,"y":114.23,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":216.45,"y":114.23,"curve":"stepped"},{"time":0.6667,"x":216.45,"y":114.23}],"scale":[{"time":0.1667,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.2667,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.3667,"x":0.5,"y":0.1}]},"explosion":{"rotate":[{"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.6667}],"translate":[{"x":98.63,"y":99.14,"curve":"stepped"},{"time":0.1667,"x":98.63,"y":99.14,"curve":"stepped"},{"time":0.6667,"x":98.63,"y":99.14}],"scale":[{"x":3,"y":2,"curve":"stepped"},{"time":0.1667,"x":3,"y":2,"curve":"stepped"},{"time":0.6667,"x":3,"y":2}]},"particle8":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"particle7":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"particle6":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"particle5":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"particle4":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"particle3":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"particle2":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"particle1":{"rotate":[{"curve":"stepped"},{"time":0.6667}],"translate":[{"curve":"stepped"},{"time":0.6667}],"scale":[{"curve":"stepped"},{"time":0.6667}]},"1c":{"rotate":[{"time":0.1667,"angle":13}],"translate":[{"x":191.74,"y":114.23,"curve":"stepped"},{"time":0.1667,"x":191.74,"y":114.23,"curve":0,"c2":0.4,"c3":0.75},{"time":0.3667,"x":216.45,"y":114.23,"curve":"stepped"},{"time":0.6667,"x":216.45,"y":114.23}],"scale":[{"time":0.1667,"curve":0.259,"c3":0.604,"c4":0.36},{"time":0.2667,"y":0.643,"curve":0.304,"c2":0.24,"c3":0.646,"c4":0.58},{"time":0.3667,"x":0.5,"y":0.1}]}},"drawOrder":[{"time":0.3333,"offsets":[{"slot":"fx1","offset":-10}]}],"events":[{"time":0.1667,"name":"hit"}]},"attack_burst1":{"slots":{"arm":{"attachment":[{"time":0.2333,"name":null}]},"arm2":{"attachment":[{"time":0.2333,"name":null}]},"body":{"attachment":[{"time":0.2333,"name":null}]},"burst":{"color":[{"time":0.1667,"color":"ffffff00"},{"time":0.2333,"color":"ffffffff"}],"attachment":[{"time":0.1667,"name":"burst4"},{"time":0.2333,"name":"burst1"}]},"eye":{"attachment":[{"name":null}]},"eye2":{"attachment":[{"name":null}]},"glasses":{"attachment":[{"time":0.2333,"name":null}]},"head":{"attachment":[{"time":0.2333,"name":null}]},"leg_L":{"attachment":[{"time":0.2333,"name":null}]},"leg_R":{"attachment":[{"time":0.2333,"name":null}]},"light":{"attachment":[{"name":"light"}]},"light2":{"attachment":[{"name":"light"}]},"mouth":{"attachment":[{"name":null}]},"shadow":{"attachment":[{"time":0.2333,"name":null}]},"stake":{"attachment":[{"time":0.2333,"name":null}]},"stake2":{"attachment":[{"time":0.2333,"name":null}]}},"bones":{"chest":{"rotate":[{"angle":-1.91}],"translate":[{}],"scale":[{}]},"bone":{"rotate":[{"curve":"stepped"},{"time":0.1667}],"translate":[{"curve":"stepped"},{"time":0.1667}],"scale":[{"curve":"stepped"},{"time":0.1667}]},"torso":{"rotate":[{"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13}],"scale":[{}]},"torso1":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso4":{"rotate":[{}],"translate":[{"x":-0.04,"y":1.26}],"scale":[{}]},"torso5":{"rotate":[{}],"translate":[{"x":-0.01,"y":1.26}],"scale":[{}]},"head":{"rotate":[{"angle":4.36}],"translate":[{}],"scale":[{}]},"glasses":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armR":{"rotate":[{"angle":-15.88,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1667,"angle":-77.53}],"translate":[{"x":-3.82,"y":9.37}],"scale":[{"curve":"stepped"},{"time":0.1667}]},"armR2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1667,"angle":-8.23}],"translate":[{}],"scale":[{}]},"armR3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1667,"angle":-8.23}],"translate":[{}],"scale":[{}]},"armR4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1667,"angle":-8.23}],"translate":[{}],"scale":[{}]},"armR5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1667,"angle":-8.23}],"translate":[{}],"scale":[{}]},"legR":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armL":{"rotate":[{"angle":-2.34,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1667,"angle":81.86}],"translate":[{"x":0.18,"y":-5.6,"curve":"stepped"},{"time":0.1667,"x":0.18,"y":-5.6}],"scale":[{"curve":"stepped"},{"time":0.1667}]},"armL2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1667,"angle":6.58}],"translate":[{}],"scale":[{}]},"armL3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1667,"angle":6.58}],"translate":[{}],"scale":[{}]},"armL4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1667,"angle":6.58}],"translate":[{}],"scale":[{}]},"armL5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1667,"angle":6.58}],"translate":[{}],"scale":[{}]},"head1":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head2":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head3":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head4":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"legR2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legR3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"head5":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"shadow":{"translate":[{"x":-7}],"scale":[{"x":0.97,"y":0.97}]},"glare":{"translate":[{}]},"stakeR":{"rotate":[{},{"time":0.1667,"angle":-103.16}]},"stakeL":{"rotate":[{},{"time":0.1667,"angle":-50.65}]}},"drawOrder":[{},{"time":0.1667,"offsets":[{"slot":"stake","offset":7}]}]},"attack_burst2":{"slots":{"arm":{"attachment":[{"name":null}]},"arm2":{"attachment":[{"name":null}]},"body":{"attachment":[{"name":null}]},"burst":{"color":[{"color":"ffffffff"}],"attachment":[{"name":"burst1"},{"time":0.1,"name":"burst2"},{"time":0.2,"name":"burst3"},{"time":0.3,"name":"burst4"}]},"eye":{"attachment":[{"name":null}]},"eye2":{"attachment":[{"name":null}]},"glasses":{"attachment":[{"name":null}]},"head":{"attachment":[{"name":null}]},"leg_L":{"attachment":[{"name":null}]},"leg_R":{"attachment":[{"name":null}]},"light":{"attachment":[{"name":"light"}]},"light2":{"attachment":[{"name":"light"}]},"mouth":{"attachment":[{"name":null}]},"shadow":{"attachment":[{"name":null}]},"stake":{"attachment":[{"name":null}]},"stake2":{"attachment":[{"name":null}]}},"bones":{"chest":{"rotate":[{"angle":-1.91}],"translate":[{}],"scale":[{}]},"bone":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso":{"rotate":[{"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13}],"scale":[{}]},"torso1":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso4":{"rotate":[{}],"translate":[{"x":-0.04,"y":1.26}],"scale":[{}]},"torso5":{"rotate":[{}],"translate":[{"x":-0.01,"y":1.26}],"scale":[{}]},"head":{"rotate":[{"angle":4.36}],"translate":[{}],"scale":[{}]},"glasses":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armR":{"rotate":[{"angle":-77.53}],"translate":[{"x":-3.82,"y":9.37}],"scale":[{}]},"armR2":{"rotate":[{"angle":-8.23}],"translate":[{}],"scale":[{}]},"armR3":{"rotate":[{"angle":-8.23}],"translate":[{}],"scale":[{}]},"armR4":{"rotate":[{"angle":-8.23}],"translate":[{}],"scale":[{}]},"armR5":{"rotate":[{"angle":-8.23}],"translate":[{}],"scale":[{}]},"legR":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armL":{"rotate":[{"angle":81.86}],"translate":[{"x":0.18,"y":-5.6}],"scale":[{}]},"armL2":{"rotate":[{"angle":6.58}],"translate":[{}],"scale":[{}]},"armL3":{"rotate":[{"angle":6.58}],"translate":[{}],"scale":[{}]},"armL4":{"rotate":[{"angle":6.58}],"translate":[{}],"scale":[{}]},"armL5":{"rotate":[{"angle":6.58}],"translate":[{}],"scale":[{}]},"head1":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head2":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head3":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head4":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"legR2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legR3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"head5":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"shadow":{"translate":[{"x":-7}],"scale":[{"x":0.97,"y":0.97}]},"glare":{"translate":[{}]},"stakeR":{"rotate":[{"angle":-103.16}]},"stakeL":{"rotate":[{"angle":-50.65}]}},"drawOrder":[{"offsets":[{"slot":"stake","offset":7}]}]},"attack_burst3":{"slots":{"arm":{"attachment":[{"name":null},{"time":0.0667,"name":"arm"}]},"arm2":{"attachment":[{"name":null},{"time":0.0667,"name":"arm"}]},"body":{"attachment":[{"name":null},{"time":0.0667,"name":"body"}]},"burst":{"color":[{"color":"ffffffff"},{"time":0.2,"color":"ffffff00"}],"attachment":[{"name":"burst4"},{"time":0.1,"name":"burst1"},{"time":0.2,"name":null}]},"eye":{"attachment":[{"name":null},{"time":0.0667,"name":null},{"time":0.2,"name":null}]},"eye2":{"attachment":[{"name":null},{"time":0.0667,"name":null},{"time":0.2,"name":null}]},"glasses":{"attachment":[{"name":null},{"time":0.0667,"name":"glasses"}]},"head":{"attachment":[{"name":null},{"time":0.0667,"name":"head"}]},"leg_L":{"attachment":[{"name":null},{"time":0.0667,"name":"leg_L"}]},"leg_R":{"attachment":[{"name":null},{"time":0.0667,"name":"leg_R"}]},"light":{"attachment":[{"name":"light"},{"time":0.0667,"name":"light"},{"time":0.2,"name":"light"}]},"light2":{"attachment":[{"name":"light"},{"time":0.0667,"name":"light"},{"time":0.2,"name":"light"}]},"mouth":{"attachment":[{"name":null},{"time":0.0667,"name":null},{"time":0.2,"name":null}]},"shadow":{"attachment":[{"name":null},{"time":0.0667,"name":"shadow"}]},"stake":{"attachment":[{"name":null},{"time":0.0667,"name":"stake"}]},"stake2":{"attachment":[{"name":null},{"time":0.0667,"name":"stake"}]}},"bones":{"chest":{"rotate":[{"angle":-1.91,"curve":"stepped"},{"time":0.0667,"angle":-1.91,"curve":"stepped"},{"time":0.2,"angle":-1.91}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"bone":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"torso":{"rotate":[{"angle":-1.84,"curve":"stepped"},{"time":0.0667,"angle":-1.84,"curve":"stepped"},{"time":0.2,"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13,"curve":"stepped"},{"time":0.0667,"x":-6.97,"y":-0.13,"curve":"stepped"},{"time":0.2,"x":-6.97,"y":-0.13}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"torso1":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"torso2":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"torso3":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"torso4":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"x":-0.04,"y":1.26,"curve":"stepped"},{"time":0.0667,"x":-0.04,"y":1.26,"curve":"stepped"},{"time":0.2,"x":-0.04,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"torso5":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"x":-0.01,"y":1.26,"curve":"stepped"},{"time":0.0667,"x":-0.01,"y":1.26,"curve":"stepped"},{"time":0.2,"x":-0.01,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"head":{"rotate":[{"angle":4.36,"curve":"stepped"},{"time":0.0667,"angle":4.36,"curve":"stepped"},{"time":0.2,"angle":4.36}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"glasses":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"armR":{"rotate":[{"angle":-77.53,"curve":"stepped"},{"time":0.0667,"angle":-77.53},{"time":0.2,"angle":-15.88}],"translate":[{"x":-3.82,"y":9.37,"curve":"stepped"},{"time":0.0667,"x":-3.82,"y":9.37,"curve":"stepped"},{"time":0.2,"x":-3.82,"y":9.37}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"armR2":{"rotate":[{"angle":-8.23,"curve":"stepped"},{"time":0.0667,"angle":-8.23},{"time":0.2,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"armR3":{"rotate":[{"angle":-8.23,"curve":"stepped"},{"time":0.0667,"angle":-8.23},{"time":0.2,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"armR4":{"rotate":[{"angle":-8.23,"curve":"stepped"},{"time":0.0667,"angle":-8.23},{"time":0.2,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"armR5":{"rotate":[{"angle":-8.23,"curve":"stepped"},{"time":0.0667,"angle":-8.23},{"time":0.2,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"legR":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"legL":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"armL":{"rotate":[{"angle":81.86,"curve":"stepped"},{"time":0.0667,"angle":81.86},{"time":0.2,"angle":-2.34}],"translate":[{"x":0.18,"y":-5.6,"curve":"stepped"},{"time":0.0667,"x":0.18,"y":-5.6,"curve":"stepped"},{"time":0.2,"x":0.18,"y":-5.6}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"armL2":{"rotate":[{"angle":6.58,"curve":"stepped"},{"time":0.0667,"angle":6.58},{"time":0.2,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"armL3":{"rotate":[{"angle":6.58,"curve":"stepped"},{"time":0.0667,"angle":6.58},{"time":0.2,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"armL4":{"rotate":[{"angle":6.58,"curve":"stepped"},{"time":0.0667,"angle":6.58},{"time":0.2,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"armL5":{"rotate":[{"angle":6.58,"curve":"stepped"},{"time":0.0667,"angle":6.58},{"time":0.2,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"head1":{"rotate":[{"angle":-1.13,"curve":"stepped"},{"time":0.0667,"angle":-1.13,"curve":"stepped"},{"time":0.2,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"head2":{"rotate":[{"angle":-1.13,"curve":"stepped"},{"time":0.0667,"angle":-1.13,"curve":"stepped"},{"time":0.2,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"head3":{"rotate":[{"angle":-1.13,"curve":"stepped"},{"time":0.0667,"angle":-1.13,"curve":"stepped"},{"time":0.2,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"head4":{"rotate":[{"angle":-1.13,"curve":"stepped"},{"time":0.0667,"angle":-1.13,"curve":"stepped"},{"time":0.2,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"legR2":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"legR3":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"legL2":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"legL3":{"rotate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"head5":{"rotate":[{"angle":-1.13,"curve":"stepped"},{"time":0.0667,"angle":-1.13,"curve":"stepped"},{"time":0.2,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}],"scale":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"shadow":{"translate":[{"x":-7,"curve":"stepped"},{"time":0.0667,"x":-7,"curve":"stepped"},{"time":0.2,"x":-7}],"scale":[{"x":0.97,"y":0.97,"curve":"stepped"},{"time":0.0667,"x":0.97,"y":0.97,"curve":"stepped"},{"time":0.2,"x":0.97,"y":0.97}]},"glare":{"translate":[{"curve":"stepped"},{"time":0.0667,"curve":"stepped"},{"time":0.2}]},"stakeR":{"rotate":[{"angle":-103.16,"curve":"stepped"},{"time":0.0667,"angle":-103.16},{"time":0.2}]},"stakeL":{"rotate":[{"angle":-50.65,"curve":"stepped"},{"time":0.0667,"angle":-50.65},{"time":0.2}]}},"drawOrder":[{"offsets":[{"slot":"stake","offset":7}]},{"time":0.0667,"offsets":[{"slot":"stake","offset":7}]},{"time":0.2}]},"attack_crossbow":{"slots":{"arrow":{"color":[{"time":0.2,"color":"ffffffff"},{"time":0.2333,"color":"ffffff42"},{"time":0.2667,"color":"ffffffff","curve":"stepped"},{"time":0.4333,"color":"ffffffff"},{"time":0.4667,"color":"ffffff42"},{"time":0.5,"color":"ffffffff","curve":"stepped"},{"time":0.6667,"color":"ffffffff"},{"time":0.7,"color":"ffffff42"}],"attachment":[{"name":null},{"time":0.1,"name":"arrow"},{"time":0.1667,"name":"arrow"},{"time":0.2667,"name":null},{"time":0.3333,"name":"arrow"},{"time":0.4,"name":"arrow"},{"time":0.5,"name":null},{"time":0.5667,"name":"arrow"},{"time":0.6333,"name":"arrow"},{"time":0.7333,"name":null}]},"arrow2":{"color":[{"time":0.2,"color":"ffffffff"},{"time":0.2333,"color":"ffffff42"},{"time":0.2667,"color":"ffffffff","curve":"stepped"},{"time":0.4333,"color":"ffffffff"},{"time":0.4667,"color":"ffffff42"},{"time":0.5,"color":"ffffffff","curve":"stepped"},{"time":0.6667,"color":"ffffffff"},{"time":0.7,"color":"ffffff42"}]},"arrow3":{"color":[{"time":0.2,"color":"ffffffff"},{"time":0.2333,"color":"ffffff42"},{"time":0.2667,"color":"ffffffff","curve":"stepped"},{"time":0.4333,"color":"ffffffff"},{"time":0.4667,"color":"ffffff42"},{"time":0.5,"color":"ffffffff","curve":"stepped"},{"time":0.6667,"color":"ffffffff"},{"time":0.7,"color":"ffffff42"}]},"bow1":{"attachment":[{"name":null},{"time":0.1,"name":"bow"},{"time":0.9,"name":null}]},"bow2":{"attachment":[{"name":null},{"time":0.1,"name":"bow"},{"time":0.9,"name":null}]},"crossbow":{"attachment":[{"name":null},{"time":0.1,"name":"crossbow"},{"time":0.9,"name":null}]},"eye":{"attachment":[{"name":null},{"time":0.1,"name":null},{"time":0.1667,"name":null},{"time":0.2333,"name":null},{"time":0.4,"name":null},{"time":0.4667,"name":null},{"time":0.6333,"name":null},{"time":0.7,"name":null},{"time":0.9,"name":null},{"time":1,"name":null},{"time":1.1667,"name":null}]},"eye2":{"attachment":[{"name":null},{"time":0.1,"name":null},{"time":0.1667,"name":null},{"time":0.2333,"name":null},{"time":0.4,"name":null},{"time":0.4667,"name":null},{"time":0.6333,"name":null},{"time":0.7,"name":null},{"time":0.9,"name":null},{"time":1,"name":null},{"time":1.1667,"name":null}]},"light":{"attachment":[{"name":"light"},{"time":0.3333,"name":null},{"time":0.6667,"name":"light"},{"time":1,"name":null}]},"light2":{"attachment":[{"name":"light"},{"time":0.3333,"name":null},{"time":0.6667,"name":"light"},{"time":1,"name":null}]},"mouth":{"attachment":[{"name":null},{"time":0.1,"name":null},{"time":0.1667,"name":null},{"time":0.2333,"name":null},{"time":0.4,"name":null},{"time":0.4667,"name":null},{"time":0.6333,"name":null},{"time":0.7,"name":null},{"time":0.9,"name":null},{"time":1,"name":null},{"time":1.1667,"name":null}]},"stake":{"attachment":[{"time":0.1,"name":null},{"time":0.1667,"name":null},{"time":0.4,"name":null},{"time":0.6333,"name":null},{"time":0.9,"name":"stake"}]},"stake2":{"attachment":[{"time":0.1,"name":null},{"time":0.1667,"name":null},{"time":0.4,"name":null},{"time":0.6333,"name":null},{"time":0.9,"name":"stake"}]},"string":{"attachment":[{"name":null},{"time":0.1,"name":"string"},{"time":0.9,"name":null}]},"string2":{"attachment":[{"name":null},{"time":0.1,"name":"string"},{"time":0.9,"name":null}]}},"bones":{"chest":{"rotate":[{"angle":-1.91,"curve":"stepped"},{"time":0.1,"angle":-1.91,"curve":"stepped"},{"time":0.1667,"angle":-1.91,"curve":"stepped"},{"time":0.4,"angle":-1.91,"curve":"stepped"},{"time":0.6333,"angle":-1.91,"curve":"stepped"},{"time":0.9,"angle":-1.91,"curve":"stepped"},{"time":1,"angle":-1.91,"curve":"stepped"},{"time":1.1667,"angle":-1.91}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"bone":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"torso":{"rotate":[{"angle":-1.84,"curve":"stepped"},{"time":0.1,"angle":-1.84,"curve":"stepped"},{"time":0.1667,"angle":-1.84,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"angle":3.78,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":-1.84,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"angle":3.78,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":-1.84,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"angle":3.78,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":-1.84,"curve":"stepped"},{"time":0.9,"angle":-1.84,"curve":"stepped"},{"time":1,"angle":-1.84,"curve":"stepped"},{"time":1.1667,"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13,"curve":"stepped"},{"time":0.1,"x":-6.97,"y":-0.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"x":3.96,"y":-0.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"x":-6.97,"y":-0.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"x":3.96,"y":-0.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"x":-6.97,"y":-0.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"x":3.96,"y":-0.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"x":-6.97,"y":-0.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"x":3.96,"y":-0.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.9,"x":-6.97,"y":-0.13,"curve":"stepped"},{"time":1,"x":-6.97,"y":-0.13,"curve":"stepped"},{"time":1.1667,"x":-6.97,"y":-0.13}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"torso1":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":-1.51,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"torso2":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":-1.51,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"torso3":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":-1.51,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"torso4":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":-1.51,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"x":-0.04,"y":1.26,"curve":"stepped"},{"time":0.1,"x":-0.04,"y":1.26,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"x":0.44,"y":-2.42,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"x":-0.04,"y":1.26,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"x":0.44,"y":-2.42,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"x":-0.04,"y":1.26,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"x":0.44,"y":-2.42,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"x":-0.04,"y":1.26,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"x":0.34,"y":-1.71,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"x":-0.04,"y":1.26,"curve":"stepped"},{"time":1,"x":-0.04,"y":1.26,"curve":"stepped"},{"time":1.1667,"x":-0.04,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"torso5":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":-1.87,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":-1.51,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"x":-0.01,"y":1.26,"curve":"stepped"},{"time":0.1,"x":-0.01,"y":1.26,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"x":0.47,"y":-1.67,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"x":-0.01,"y":1.26,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"x":0.47,"y":-1.67,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"x":-0.01,"y":1.26,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"x":0.47,"y":-1.67,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"x":-0.01,"y":1.26,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"x":0.38,"y":-1.11,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"x":-0.01,"y":1.26,"curve":"stepped"},{"time":1,"x":-0.01,"y":1.26,"curve":"stepped"},{"time":1.1667,"x":-0.01,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"head":{"rotate":[{"angle":4.36,"curve":"stepped"},{"time":0.1,"angle":4.36,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"angle":3.43,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"angle":-3.46,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":3.43,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"angle":-3.46,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":3.43,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"angle":-3.46,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":3.61,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"angle":4.36,"curve":"stepped"},{"time":1,"angle":4.36,"curve":"stepped"},{"time":1.1667,"angle":4.36}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"glasses":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"armR":{"rotate":[{"angle":-15.88,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"angle":28.36,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"angle":45.68,"curve":"stepped"},{"time":0.4,"angle":45.68,"curve":"stepped"},{"time":0.6333,"angle":45.68,"curve":"stepped"},{"time":0.8,"angle":45.68,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.9,"angle":28.36,"curve":0,"c2":0.41,"c3":0.75},{"time":1,"angle":-15.88,"curve":"stepped"},{"time":1.1667,"angle":-15.88}],"translate":[{"x":-3.82,"y":9.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"x":-4.78,"y":-27.72,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"x":-8.45,"y":-34.21,"curve":"stepped"},{"time":0.2333,"x":-8.45,"y":-34.21,"curve":"stepped"},{"time":0.4,"x":-8.45,"y":-34.21,"curve":"stepped"},{"time":0.4667,"x":-8.45,"y":-34.21,"curve":"stepped"},{"time":0.6333,"x":-8.45,"y":-34.21,"curve":"stepped"},{"time":0.7,"x":-8.45,"y":-34.21,"curve":0.336,"c2":0.23,"c3":0.803,"c4":0.83},{"time":0.8,"x":-3.82,"y":-57.58,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.9,"x":-4.78,"y":-27.72,"curve":0,"c2":0.41,"c3":0.75},{"time":1,"x":-3.82,"y":9.37,"curve":"stepped"},{"time":1.1667,"x":-3.82,"y":9.37}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"armR2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"angle":12.22,"curve":"stepped"},{"time":0.1667,"angle":12.22,"curve":"stepped"},{"time":0.4,"angle":12.22,"curve":"stepped"},{"time":0.6333,"angle":12.22,"curve":"stepped"},{"time":0.8,"angle":12.22,"curve":"stepped"},{"time":0.9,"angle":12.22,"curve":0,"c2":0.41,"c3":0.75},{"time":1,"angle":4.37,"curve":"stepped"},{"time":1.1667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"armR3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"angle":12.22,"curve":"stepped"},{"time":0.1667,"angle":12.22,"curve":"stepped"},{"time":0.4,"angle":12.22,"curve":"stepped"},{"time":0.6333,"angle":12.22,"curve":"stepped"},{"time":0.8,"angle":12.22,"curve":"stepped"},{"time":0.9,"angle":12.22,"curve":0,"c2":0.41,"c3":0.75},{"time":1,"angle":4.37,"curve":"stepped"},{"time":1.1667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"armR4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"angle":12.22,"curve":"stepped"},{"time":0.1667,"angle":12.22,"curve":"stepped"},{"time":0.4,"angle":12.22,"curve":"stepped"},{"time":0.6333,"angle":12.22,"curve":"stepped"},{"time":0.8,"angle":12.22,"curve":"stepped"},{"time":0.9,"angle":12.22,"curve":0,"c2":0.41,"c3":0.75},{"time":1,"angle":4.37,"curve":"stepped"},{"time":1.1667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"armR5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"angle":7.65,"curve":"stepped"},{"time":0.1667,"angle":7.65,"curve":"stepped"},{"time":0.4,"angle":7.65,"curve":"stepped"},{"time":0.6333,"angle":7.65,"curve":"stepped"},{"time":0.8,"angle":7.65,"curve":"stepped"},{"time":0.9,"angle":7.65,"curve":0,"c2":0.41,"c3":0.75},{"time":1,"angle":4.37,"curve":"stepped"},{"time":1.1667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"legR":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"x":-31.25,"curve":"stepped"},{"time":0.4,"x":-31.25,"curve":"stepped"},{"time":0.6333,"x":-31.25,"curve":"stepped"},{"time":0.8,"x":-31.25,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"legL":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"x":12.36,"curve":"stepped"},{"time":0.4,"x":12.36,"curve":"stepped"},{"time":0.6333,"x":12.36,"curve":"stepped"},{"time":0.8,"x":12.36,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"armL":{"rotate":[{"angle":-2.34,"curve":"stepped"},{"time":0.1,"angle":-2.34,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"angle":30.06,"curve":"stepped"},{"time":0.4,"angle":30.06,"curve":"stepped"},{"time":0.6333,"angle":30.06,"curve":"stepped"},{"time":0.8,"angle":30.06},{"time":0.9,"angle":-2.34,"curve":"stepped"},{"time":1,"angle":-2.34,"curve":"stepped"},{"time":1.1667,"angle":-2.34}],"translate":[{"x":0.18,"y":-5.6,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"x":-0.11,"y":3.35,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"x":19.97,"y":61.02},{"time":0.2333,"x":-12.72,"y":35.09},{"time":0.4,"x":19.97,"y":61.02},{"time":0.4667,"x":-12.72,"y":35.09},{"time":0.6333,"x":19.97,"y":61.02},{"time":0.7,"x":-12.72,"y":35.09},{"time":0.8,"x":24.6,"y":37.65},{"time":0.9,"x":-0.11,"y":3.35,"curve":0,"c2":0.41,"c3":0.75},{"time":1,"x":0.18,"y":-5.6,"curve":"stepped"},{"time":1.1667,"x":0.18,"y":-5.6}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"armL2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"angle":11.31,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"angle":23.79},{"time":0.2333,"angle":20.93},{"time":0.4,"angle":23.79},{"time":0.4667,"angle":20.93},{"time":0.6333,"angle":23.79},{"time":0.7,"angle":20.93},{"time":0.8,"angle":23.79},{"time":0.9,"angle":11.31,"curve":0,"c2":0.41,"c3":0.75},{"time":1,"angle":4.37,"curve":"stepped"},{"time":1.1667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"armL3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"angle":11.31,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"angle":23.79},{"time":0.2333,"angle":20.93},{"time":0.4,"angle":23.79},{"time":0.4667,"angle":20.93},{"time":0.6333,"angle":23.79},{"time":0.7,"angle":20.93},{"time":0.8,"angle":23.79},{"time":0.9,"angle":11.31,"curve":0,"c2":0.41,"c3":0.75},{"time":1,"angle":4.37,"curve":"stepped"},{"time":1.1667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"armL4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"angle":11.31,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"angle":23.79},{"time":0.2333,"angle":20.93},{"time":0.4,"angle":23.79},{"time":0.4667,"angle":20.93},{"time":0.6333,"angle":23.79},{"time":0.7,"angle":20.93},{"time":0.8,"angle":23.79},{"time":0.9,"angle":11.31,"curve":0,"c2":0.41,"c3":0.75},{"time":1,"angle":4.37,"curve":"stepped"},{"time":1.1667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"armL5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.1,"angle":11.31,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"angle":23.79},{"time":0.2333,"angle":20.93},{"time":0.4,"angle":23.79},{"time":0.4667,"angle":20.93},{"time":0.6333,"angle":23.79},{"time":0.7,"angle":20.93},{"time":0.8,"angle":23.79},{"time":0.9,"angle":11.31,"curve":0,"c2":0.41,"c3":0.75},{"time":1,"angle":4.37,"curve":"stepped"},{"time":1.1667,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"head1":{"rotate":[{"angle":-1.13,"curve":"stepped"},{"time":0.1,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":-2.65,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"angle":-1.13,"curve":"stepped"},{"time":1,"angle":-1.13,"curve":"stepped"},{"time":1.1667,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"head2":{"rotate":[{"angle":-1.13,"curve":"stepped"},{"time":0.1,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":-2.65,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"angle":-1.13,"curve":"stepped"},{"time":1,"angle":-1.13,"curve":"stepped"},{"time":1.1667,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"head3":{"rotate":[{"angle":-1.13,"curve":"stepped"},{"time":0.1,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":-2.65,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"angle":-1.13,"curve":"stepped"},{"time":1,"angle":-1.13,"curve":"stepped"},{"time":1.1667,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"head4":{"rotate":[{"angle":-1.13,"curve":"stepped"},{"time":0.1,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":-2.65,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"angle":-1.13,"curve":"stepped"},{"time":1,"angle":-1.13,"curve":"stepped"},{"time":1.1667,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"legR2":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"legR3":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"legL2":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"legL3":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"head5":{"rotate":[{"angle":-1.13,"curve":"stepped"},{"time":0.1,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.1667,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.2333,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.4,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.4667,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.6333,"angle":-3.01,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.7,"angle":-1.13,"curve":0,"c2":0.32,"c3":0.5,"c4":0.73},{"time":0.8,"angle":-2.65,"curve":0.391,"c2":0.6,"c3":0.783},{"time":0.9,"angle":-1.13,"curve":"stepped"},{"time":1,"angle":-1.13,"curve":"stepped"},{"time":1.1667,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.8,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}],"scale":[{"curve":"stepped"},{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9,"curve":"stepped"},{"time":1,"curve":"stepped"},{"time":1.1667}]},"shadow":{"translate":[{"x":-7,"curve":"stepped"},{"time":0.1,"x":-7,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"x":2.87,"curve":0.271,"c3":0.619,"c4":0.41},{"time":0.2333,"x":-10.54,"curve":0.342,"c2":0.36,"c3":0.757},{"time":0.4,"x":2.87,"curve":0.25,"c3":0.75},{"time":0.4667,"x":-10.54,"curve":0.342,"c2":0.36,"c3":0.757},{"time":0.6333,"x":2.87,"curve":0.25,"c3":0.75},{"time":0.7,"x":-10.54,"curve":0.342,"c2":0.36,"c3":0.757},{"time":0.8,"x":2.87,"curve":0.25,"c3":0.75},{"time":0.9,"x":-7,"curve":"stepped"},{"time":1,"x":-7,"curve":"stepped"},{"time":1.1667,"x":-7}],"scale":[{"x":0.97,"y":0.97,"curve":"stepped"},{"time":0.1,"x":0.97,"y":0.97,"curve":"stepped"},{"time":0.1667,"x":0.97,"y":0.97,"curve":"stepped"},{"time":0.4,"x":0.97,"y":0.97,"curve":"stepped"},{"time":0.6333,"x":0.97,"y":0.97,"curve":"stepped"},{"time":0.8,"x":0.97,"y":0.97,"curve":"stepped"},{"time":0.9,"x":0.97,"y":0.97,"curve":"stepped"},{"time":1,"x":0.97,"y":0.97,"curve":"stepped"},{"time":1.1667,"x":0.97,"y":0.97}]},"glare":{"translate":[{},{"time":0.3333,"y":152.85},{"time":0.6667},{"time":1,"y":152.85}]},"crossbow":{"rotate":[{"time":0.1,"angle":-90,"curve":"stepped"},{"time":0.1667,"angle":-90,"curve":"stepped"},{"time":0.4,"angle":-90,"curve":"stepped"},{"time":0.6333,"angle":-90,"curve":"stepped"},{"time":0.9,"angle":-90}],"translate":[{"time":0.1,"x":75.72,"y":396.29,"curve":"stepped"},{"time":0.1667,"x":75.72,"y":396.29,"curve":"stepped"},{"time":0.4,"x":75.72,"y":396.29,"curve":"stepped"},{"time":0.6333,"x":75.72,"y":396.29,"curve":"stepped"},{"time":0.9,"x":75.72,"y":396.29}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9}]},"shoulder":{"translate":[{"time":0.1,"x":-0.95,"y":-5.05,"curve":0,"c2":0.41,"c3":0.75},{"time":0.1667,"x":-9.91,"y":-13.24,"curve":"stepped"},{"time":0.4,"x":-9.91,"y":-13.24,"curve":"stepped"},{"time":0.6333,"x":-9.91,"y":-13.24,"curve":"stepped"},{"time":0.8,"x":-9.91,"y":-13.24},{"time":0.9,"x":-0.95,"y":-5.05}]},"bow1_1":{"rotate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9}]},"bow1_2":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow1_3":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow1_4":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow1_5":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow1_6":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow1_7":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow1_8":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"string1":{"rotate":[{"time":0.1},{"time":0.1667,"angle":86.38},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":86.38},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":86.38},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"x":0.964},{"time":0.1667,"x":0.959},{"time":0.2333,"x":0.996,"curve":"stepped"},{"time":0.3333,"x":0.996},{"time":0.4,"x":0.959},{"time":0.4667,"x":0.996,"curve":"stepped"},{"time":0.5667,"x":0.996},{"time":0.6333,"x":0.959},{"time":0.7,"x":0.996},{"time":0.9,"x":0.964}]},"bow2_1":{"rotate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.9}]},"bow2_2":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow2_3":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow2_4":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow2_5":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow2_6":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow2_7":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"bow2_8":{"rotate":[{"time":0.1},{"time":0.1667,"angle":-5.3},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":-5.3},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":-5.3},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}]},"string2":{"rotate":[{"time":0.1},{"time":0.1667,"angle":81.65},{"time":0.2333,"curve":"stepped"},{"time":0.3333},{"time":0.4,"angle":81.65},{"time":0.4667,"curve":"stepped"},{"time":0.5667},{"time":0.6333,"angle":81.65},{"time":0.7,"curve":"stepped"},{"time":0.9}],"translate":[{"time":0.1,"curve":"stepped"},{"time":0.1667,"curve":"stepped"},{"time":0.2333,"curve":"stepped"},{"time":0.3333,"curve":"stepped"},{"time":0.4,"curve":"stepped"},{"time":0.4667,"curve":"stepped"},{"time":0.5667,"curve":"stepped"},{"time":0.6333,"curve":"stepped"},{"time":0.7,"curve":"stepped"},{"time":0.9}],"scale":[{"time":0.1},{"time":0.1667,"x":1.087},{"time":0.2333,"x":1.027,"curve":"stepped"},{"time":0.3333,"x":1.027},{"time":0.4,"x":1.087},{"time":0.4667,"x":1.027,"curve":"stepped"},{"time":0.5667,"x":1.027},{"time":0.6333,"x":1.087},{"time":0.7,"x":1.027},{"time":0.9}]},"arrow":{"translate":[{"time":0.1,"x":126.75},{"time":0.1667},{"time":0.2,"x":60.72},{"time":0.2333,"x":273.4},{"time":0.3333,"x":126.75},{"time":0.4},{"time":0.4333,"x":60.72},{"time":0.4667,"x":273.4},{"time":0.5667,"x":126.75},{"time":0.6333},{"time":0.6667,"x":60.72},{"time":0.7,"x":273.4}]}},"drawOrder":[{},{"time":0.6667}],"events":[{"time":0.2667,"name":"arrow"},{"time":0.5,"name":"arrow"},{"time":0.7333,"name":"arrow"}]},"fall_off_ground_dead":{"slots":{"eye":{"attachment":[{"name":"eye"}]},"eye2":{"attachment":[{"name":"eye"}]},"light":{"attachment":[{"name":"light"}]},"light2":{"attachment":[{"name":"light"}]},"mouth":{"attachment":[{"name":"mouth"}]}},"bones":{"chest":{"rotate":[{"angle":-1.91}],"translate":[{}],"scale":[{}]},"bone":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso":{"rotate":[{"angle":-1.84,"curve":"stepped"},{"time":0.1,"angle":-1.84,"curve":0.25,"c3":0.75},{"time":0.3,"angle":15.08,"curve":0.25,"c4":0.59},{"time":0.5,"angle":38.68},{"time":0.6,"angle":70.58,"curve":0.25,"c4":0.61},{"time":0.6333,"angle":99.31,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":70.58,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":99.31}],"translate":[{"x":-6.97,"y":-0.13},{"time":0.1,"x":6.03,"y":-0.19,"curve":0.25,"c3":0.75},{"time":0.3,"x":-17.25,"y":37.9,"curve":0.25,"c4":0.59},{"time":0.5,"x":-19.15,"y":68.26},{"time":0.6,"x":-46.29,"y":107.47,"curve":0.25,"c4":0.61},{"time":0.6333,"x":-46.29,"y":136.07,"curve":0.25,"c3":0.75},{"time":0.7333,"x":-46.29,"y":147.58,"curve":0.25,"c4":0.61},{"time":0.8667,"x":-46.29,"y":136.07}],"scale":[{}]},"torso1":{"rotate":[{},{"time":0.1,"angle":-2.73,"curve":0.25,"c3":0.75},{"time":0.3,"angle":1.82,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-2.37,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":1.82,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-2.37}],"translate":[{}],"scale":[{}]},"torso2":{"rotate":[{},{"time":0.1,"angle":-2.73,"curve":0.25,"c3":0.75},{"time":0.3,"angle":3.66,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-0.53,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":3.66,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-0.53}],"translate":[{}],"scale":[{}]},"torso3":{"rotate":[{},{"time":0.1,"angle":-2.73,"curve":0.25,"c3":0.75},{"time":0.3,"angle":2.38,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-1.82,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":2.38,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-1.82}],"translate":[{}],"scale":[{}]},"torso4":{"rotate":[{},{"time":0.1,"angle":-2.73,"curve":0.25,"c3":0.75},{"time":0.3,"angle":2.38,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-1.82,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":2.38,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-1.82}],"translate":[{"x":-0.04,"y":1.26},{"time":0.1,"x":0.08,"y":-2.75,"curve":0.25,"c3":0.75},{"time":0.3,"x":-0.18,"y":3.7,"curve":0.25,"c4":0.59},{"time":0.6333,"x":-0.18,"y":-2.43,"curve":0.25,"c3":0.75},{"time":0.7333,"x":-0.18,"y":3.7,"curve":0.25,"c4":0.61},{"time":0.8667,"x":-0.18,"y":-2.43}],"scale":[{}]},"torso5":{"rotate":[{},{"time":0.1,"angle":-2.73,"curve":0.25,"c3":0.75},{"time":0.3,"angle":2.38,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-1.82,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":2.38,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-1.82}],"translate":[{"x":-0.01,"y":1.26},{"time":0.1,"x":0.17,"y":-4.25,"curve":0.25,"c3":0.75},{"time":0.3,"x":-0.13,"y":2.85,"curve":0.25,"c4":0.59},{"time":0.6333,"x":-0.13,"y":-2.93,"curve":0.25,"c3":0.75},{"time":0.7333,"x":-0.13,"y":2.85,"curve":0.25,"c4":0.61},{"time":0.8667,"x":-0.13,"y":-2.93}],"scale":[{}]},"head":{"rotate":[{"angle":4.36},{"time":0.1,"angle":-8.98,"curve":0.25,"c3":0.75},{"time":0.3,"angle":2.49,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-8.98,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":2.49,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-8.98}],"translate":[{},{"time":0.1,"x":-0.14,"y":-2.19,"curve":"stepped"},{"time":0.6333,"x":-0.14,"y":-2.19,"curve":"stepped"},{"time":0.8667,"x":-0.14,"y":-2.19}],"scale":[{}]},"glasses":{"rotate":[{},{"time":0.1,"angle":-30.25,"curve":0.25,"c3":0.75},{"time":0.3,"angle":34.31,"curve":"stepped"},{"time":0.5,"angle":34.31},{"time":0.6333,"angle":67.37,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":85.6,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":54.55},{"time":0.9333,"angle":51.32}],"translate":[{"curve":"stepped"},{"time":0.5},{"time":0.6333,"x":11.2,"y":-34.38,"curve":0.25,"c3":0.75},{"time":0.7333,"x":-0.34,"y":-15.72,"curve":0.25,"c4":0.61},{"time":0.8667,"x":14.25,"y":-56.77},{"time":0.9333,"x":-6.86,"y":-45.59}],"scale":[{}]},"armR":{"rotate":[{"angle":-15.88},{"time":0.1,"angle":-5.65,"curve":0.25,"c3":0.75},{"time":0.3,"angle":45.66,"curve":0.25,"c4":0.59},{"time":0.5,"angle":69.34},{"time":0.6333,"angle":119.87,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":78.38,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":99.68},{"time":1.0333,"angle":64.94}],"translate":[{"x":-3.82,"y":9.37},{"time":0.3,"x":12.42,"y":-0.07}],"scale":[{}]},"armR2":{"rotate":[{"angle":4.37,"curve":0.237,"c3":0.641,"c4":0.51},{"time":0.3,"angle":13.22,"curve":0.25,"c4":0.59},{"time":0.5,"angle":4.37},{"time":0.6,"angle":11.79,"curve":0.25,"c4":0.61},{"time":0.7333,"angle":4.37,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":11.79},{"time":1.0333,"angle":4.37}],"translate":[{}],"scale":[{}]},"armR3":{"rotate":[{"angle":4.37,"curve":0.237,"c3":0.641,"c4":0.51},{"time":0.3,"angle":13.22,"curve":0.25,"c4":0.59},{"time":0.5,"angle":4.37},{"time":0.6,"angle":11.79,"curve":0.25,"c4":0.61},{"time":0.7333,"angle":4.37,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":11.79},{"time":1.0333,"angle":4.37}],"translate":[{}],"scale":[{}]},"armR4":{"rotate":[{"angle":4.37,"curve":0.237,"c3":0.641,"c4":0.51},{"time":0.3,"angle":13.22,"curve":0.25,"c4":0.59},{"time":0.5,"angle":4.37},{"time":0.6,"angle":11.79,"curve":0.25,"c4":0.61},{"time":0.7333,"angle":4.37,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":11.79},{"time":1.0333,"angle":4.37}],"translate":[{}],"scale":[{}]},"armR5":{"rotate":[{"angle":4.37,"curve":0.237,"c3":0.641,"c4":0.51},{"time":0.3,"angle":13.22,"curve":0.25,"c4":0.59},{"time":0.5,"angle":4.37},{"time":0.6,"angle":11.79,"curve":0.25,"c4":0.61},{"time":0.7333,"angle":4.37,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":11.79},{"time":1.0333,"angle":4.37}],"translate":[{}],"scale":[{}]},"legR":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":0.25,"c3":0.75},{"time":0.3,"angle":20.15,"curve":0.25,"c4":0.59},{"time":0.5,"angle":18.55},{"time":0.6,"angle":48.55,"curve":0.25,"c4":0.61},{"time":0.6333,"angle":123.86,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":52.34,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":121.71},{"time":1.0333,"angle":78.07}],"translate":[{},{"time":0.1,"curve":0.25,"c3":0.75},{"time":0.3,"x":-12.24,"y":-1.79,"curve":0.25,"c4":0.59},{"time":0.5,"x":-7.92,"y":-1.93},{"time":0.6,"x":-18.79,"y":-13.16,"curve":0.25,"c4":0.61},{"time":0.6333,"x":35.44,"y":2.4,"curve":0.25,"c3":0.75},{"time":0.7333,"x":-6.67,"y":44.4,"curve":0.25,"c4":0.61},{"time":0.8667,"x":35.44,"y":2.4},{"time":1.0333,"x":30.25,"y":10.74}],"scale":[{}]},"legL":{"rotate":[{},{"time":0.5,"angle":21.63},{"time":0.6,"angle":42.63,"curve":0.25,"c4":0.61},{"time":0.6333,"angle":123.86,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":42.28,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":121.71},{"time":1.0333,"angle":78.07}],"translate":[{"time":0.1,"curve":0.25,"c3":0.75},{"time":0.3,"x":-10.06,"y":44.89,"curve":0.25,"c4":0.59},{"time":0.5,"x":-27.76,"y":104.02},{"time":0.6,"x":-104.59,"y":166.03,"curve":0.25,"c4":0.61},{"time":0.6333,"x":-142.66,"y":169.64,"curve":0.25,"c3":0.75},{"time":0.7333,"x":-107.67,"y":200.79,"curve":0.25,"c4":0.61},{"time":0.8667,"x":-144.53,"y":174.93},{"time":1.0333,"x":-146.22,"y":179.2}],"scale":[{}]},"armL":{"rotate":[{"angle":-2.34},{"time":0.1,"angle":7.88,"curve":0.25,"c3":0.75},{"time":0.3,"angle":59.2,"curve":0.25,"c4":0.59},{"time":0.5,"angle":82.88},{"time":0.6333,"angle":133.4,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":91.92,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":113.22},{"time":1.0333,"angle":53.06}],"translate":[{"x":0.18,"y":-5.6,"curve":"stepped"},{"time":0.6333,"x":0.18,"y":-5.6,"curve":0.25,"c3":0.75},{"time":0.7333,"x":0.66,"y":14.24,"curve":0.25,"c4":0.61},{"time":0.8667,"x":0.18,"y":-5.6},{"time":1.0333,"x":0.66,"y":14.24}],"scale":[{}]},"armL2":{"rotate":[{"angle":4.37,"curve":0.237,"c3":0.641,"c4":0.51},{"time":0.3,"angle":13.22,"curve":0.25,"c4":0.59},{"time":0.5,"angle":4.37},{"time":0.6,"angle":11.79,"curve":0.25,"c4":0.61},{"time":0.7333,"angle":4.37,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":11.79},{"time":1.0333,"angle":4.37}],"translate":[{}],"scale":[{}]},"armL3":{"rotate":[{"angle":4.37,"curve":0.237,"c3":0.641,"c4":0.51},{"time":0.3,"angle":13.22,"curve":0.25,"c4":0.59},{"time":0.5,"angle":4.37},{"time":0.6,"angle":11.79,"curve":0.25,"c4":0.61},{"time":0.7333,"angle":4.37,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":11.79},{"time":1.0333,"angle":4.37}],"translate":[{}],"scale":[{}]},"armL4":{"rotate":[{"angle":4.37,"curve":0.237,"c3":0.641,"c4":0.51},{"time":0.3,"angle":13.22,"curve":0.25,"c4":0.59},{"time":0.5,"angle":4.37},{"time":0.6,"angle":11.79,"curve":0.25,"c4":0.61},{"time":0.7333,"angle":4.37,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":11.79},{"time":1.0333,"angle":4.37}],"translate":[{}],"scale":[{}]},"armL5":{"rotate":[{"angle":4.37,"curve":0.237,"c3":0.641,"c4":0.51},{"time":0.3,"angle":13.22,"curve":0.25,"c4":0.59},{"time":0.5,"angle":4.37},{"time":0.6,"angle":11.79,"curve":0.25,"c4":0.61},{"time":0.7333,"angle":4.37,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":11.79},{"time":1.0333,"angle":4.37}],"translate":[{}],"scale":[{}]},"head1":{"rotate":[{"angle":-1.13},{"time":0.1,"angle":-2.69,"curve":0.25,"c3":0.75},{"time":0.3,"angle":4.42,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-3.67,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":4.42,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-3.67}],"translate":[{}],"scale":[{}]},"head2":{"rotate":[{"angle":-1.13},{"time":0.1,"angle":-2.69,"curve":0.25,"c3":0.75},{"time":0.3,"angle":4.42,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-3.67,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":4.42,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-3.67}],"translate":[{}],"scale":[{}]},"head3":{"rotate":[{"angle":-1.13},{"time":0.1,"angle":-2.69,"curve":0.25,"c3":0.75},{"time":0.3,"angle":4.42,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-3.67,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":4.42,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-3.67}],"translate":[{}],"scale":[{}]},"head4":{"rotate":[{"angle":-1.13},{"time":0.1,"angle":-2.69,"curve":0.25,"c3":0.75},{"time":0.3,"angle":4.42,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-3.67,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":4.42,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-3.67}],"translate":[{}],"scale":[{}]},"legR2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legR3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"head5":{"rotate":[{"angle":-1.13},{"time":0.1,"angle":-2.69,"curve":0.25,"c3":0.75},{"time":0.3,"angle":4.42,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-3.67,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":4.42,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-3.67}],"translate":[{}],"scale":[{}]},"shadow":{"translate":[{"x":-7,"curve":0.25,"c3":0.75},{"time":0.1,"x":9.68},{"time":0.3,"x":-79.56},{"time":0.5,"x":-129.6},{"time":0.6,"x":-231.26},{"time":0.6333,"x":-249.27,"curve":"stepped"},{"time":0.8667,"x":-249.27}],"scale":[{"x":0.97,"y":0.97,"curve":0.25,"c3":0.75},{"time":0.3,"x":1.237,"y":1.237,"curve":"stepped"},{"time":0.5,"x":1.237,"y":1.237},{"time":0.6,"x":1.343,"y":1.343},{"time":0.6333,"x":1.3,"y":1.3},{"time":0.7333,"x":1.405,"y":1.405},{"time":0.8667,"x":1.3,"y":1.3}]},"glare":{"translate":[{}]},"shoulder":{"rotate":[{},{"time":0.1,"angle":-16.03,"curve":0.25,"c3":0.75},{"time":0.3,"angle":31.23},{"time":0.5,"angle":44.31},{"time":0.6,"angle":74.41},{"time":0.6333,"angle":90.22},{"time":0.7333,"angle":68.33},{"time":0.8667,"angle":91.35}]},"stakeR":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":0.25,"c3":0.75},{"time":0.3,"angle":-62.03,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-73.57,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":-50.64,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-44.69},{"time":1.0333,"angle":-75.1}]},"stakeL":{"rotate":[{"curve":"stepped"},{"time":0.1,"curve":0.25,"c3":0.75},{"time":0.3,"angle":-62.03,"curve":0.25,"c4":0.59},{"time":0.6333,"angle":-73.57,"curve":0.25,"c3":0.75},{"time":0.7333,"angle":-50.64,"curve":0.25,"c4":0.61},{"time":0.8667,"angle":-44.69},{"time":1.0333,"angle":-64.77},{"time":1.0667,"angle":-56.52},{"time":1.1667,"angle":-64.77}],"translate":[{"time":0.8667},{"time":0.9333,"x":-34.07,"y":-27.55},{"time":1.0333,"x":66.81,"y":-189.02,"curve":0,"c2":0.2,"c3":0.75},{"time":1.0667,"x":54.15,"y":-153.21,"curve":0.25,"c4":0.7},{"time":1.1667,"x":66.81,"y":-189.02}]}}},"get_hit":{"slots":{"arm":{"color":[{"time":0.0667,"color":"ff0000ff","curve":"stepped"},{"time":0.1333,"color":"ff0000ff"},{"time":0.2333,"color":"ffffffff"}]},"arm2":{"color":[{"time":0.0667,"color":"ff0000ff","curve":"stepped"},{"time":0.1333,"color":"ff0000ff"},{"time":0.2333,"color":"ffffffff"}]},"body":{"color":[{"time":0.0667,"color":"ff0000ff","curve":"stepped"},{"time":0.1333,"color":"ff0000ff"},{"time":0.2333,"color":"ffffffff"}]},"eye":{"attachment":[{"name":null},{"time":0.0667,"name":"eye"}]},"eye2":{"attachment":[{"name":null},{"time":0.0667,"name":"eye"}]},"fx12":{"color":[{"time":0.0667,"color":"ff0000ff","curve":"stepped"},{"time":0.1333,"color":"ff0000ff"},{"time":0.2333,"color":"ffffffff"}]},"fx13":{"color":[{"time":0.0667,"color":"ff0000ff","curve":"stepped"},{"time":0.1333,"color":"ff0000ff"},{"time":0.2333,"color":"ffffffff"}]},"glasses":{"color":[{"time":0.0667,"color":"ff0000ff","curve":"stepped"},{"time":0.1333,"color":"ff0000ff"},{"time":0.2333,"color":"ffffffff"}]},"head":{"color":[{"time":0.0667,"color":"ff0000ff","curve":"stepped"},{"time":0.1333,"color":"ff0000ff"},{"time":0.2333,"color":"ffffffff"}]},"leg_L":{"color":[{"time":0.0667,"color":"ff0000ff","curve":"stepped"},{"time":0.1333,"color":"ff0000ff"},{"time":0.2333,"color":"ffffffff"}]},"leg_R":{"color":[{"time":0.0667,"color":"ff0000ff","curve":"stepped"},{"time":0.1333,"color":"ff0000ff"},{"time":0.2333,"color":"ffffffff"}]},"light":{"attachment":[{"name":"light"},{"time":0.2333,"name":"light"}]},"light2":{"attachment":[{"name":"light"},{"time":0.2333,"name":"light"}]},"mouth":{"attachment":[{"name":null},{"time":0.0667,"name":"mouth"}]},"stake":{"color":[{"time":0.0667,"color":"ff0000ff","curve":"stepped"},{"time":0.1333,"color":"ff0000ff"},{"time":0.2333,"color":"ffffffff"}]},"stake2":{"color":[{"time":0.0667,"color":"ff0000ff","curve":"stepped"},{"time":0.1333,"color":"ff0000ff"},{"time":0.2333,"color":"ffffffff"}]}},"bones":{"chest":{"rotate":[{"angle":-1.91,"curve":0.236,"c3":0.669,"c4":0.56},{"time":0.0667,"angle":4.55,"curve":"stepped"},{"time":0.1333,"angle":4.55,"curve":0.41,"c2":0.43,"c3":0.765,"c4":0.8},{"time":0.2333,"angle":-1.91}],"translate":[{"curve":0.236,"c3":0.669,"c4":0.56},{"time":0.0667,"x":5.4,"y":-20.45,"curve":"stepped"},{"time":0.1333,"x":5.4,"y":-20.45,"curve":0.41,"c2":0.43,"c3":0.765,"c4":0.8},{"time":0.2333}],"scale":[{"curve":0.236,"c3":0.669,"c4":0.56},{"time":0.0667,"x":0.62,"y":0.62,"curve":"stepped"},{"time":0.1333,"x":0.62,"y":0.62,"curve":0.41,"c2":0.43,"c3":0.765,"c4":0.8},{"time":0.2333}]},"bone":{"rotate":[{"curve":"stepped"},{"time":0.2333}],"translate":[{"curve":0.262,"c3":0.614,"c4":0.4},{"time":0.0667,"x":-38.24,"curve":"stepped"},{"time":0.1333,"x":-38.24,"curve":0.361,"c2":0.29,"c3":0.802,"c4":0.83},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"torso":{"rotate":[{"angle":-1.84,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":13.59,"curve":"stepped"},{"time":0.1333,"angle":13.59},{"time":0.2333,"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"x":-6.97,"y":35.9,"curve":"stepped"},{"time":0.1333,"x":-6.97,"y":35.9},{"time":0.2333,"x":-6.97,"y":-0.13}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"torso1":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-2.73,"curve":"stepped"},{"time":0.1333,"angle":-2.73},{"time":0.2333}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"torso2":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-2.73,"curve":"stepped"},{"time":0.1333,"angle":-2.73},{"time":0.2333}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"torso3":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-2.73,"curve":"stepped"},{"time":0.1333,"angle":-2.73},{"time":0.2333}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"torso4":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-2.73,"curve":"stepped"},{"time":0.1333,"angle":-2.73},{"time":0.2333}],"translate":[{"x":-0.04,"y":1.26,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"x":0.08,"y":-2.75,"curve":"stepped"},{"time":0.1333,"x":0.08,"y":-2.75},{"time":0.2333,"x":-0.04,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"torso5":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-2.73,"curve":"stepped"},{"time":0.1333,"angle":-2.73},{"time":0.2333}],"translate":[{"x":-0.01,"y":1.26,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"x":0.17,"y":-4.25,"curve":"stepped"},{"time":0.1333,"x":0.17,"y":-4.25},{"time":0.2333,"x":-0.01,"y":1.26}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"head":{"rotate":[{"angle":4.36,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-8.98,"curve":"stepped"},{"time":0.1333,"angle":-8.98},{"time":0.2333,"angle":4.36}],"translate":[{"curve":0.236,"c3":0.669,"c4":0.56},{"time":0.0667,"x":-0.14,"y":-2.19,"curve":"stepped"},{"time":0.1333,"x":-0.14,"y":-2.19,"curve":0.41,"c2":0.43,"c3":0.765,"c4":0.8},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"glasses":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-14.99,"curve":"stepped"},{"time":0.1333,"angle":-14.99},{"time":0.2333}],"translate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"x":17.37,"y":3.79,"curve":"stepped"},{"time":0.1333,"x":17.37,"y":3.79},{"time":0.1667,"x":18.26,"y":1.44},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"armR":{"rotate":[{"angle":-15.88,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-70.45,"curve":"stepped"},{"time":0.1333,"angle":-70.45},{"time":0.2333,"angle":-15.88}],"translate":[{"x":-3.82,"y":9.37,"curve":0.236,"c3":0.669,"c4":0.56},{"time":0.0667,"x":16.23,"y":9.58,"curve":"stepped"},{"time":0.1333,"x":16.23,"y":9.58,"curve":0.41,"c2":0.43,"c3":0.765,"c4":0.8},{"time":0.2333,"x":-3.82,"y":9.37}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"armR2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":26.15,"curve":"stepped"},{"time":0.1333,"angle":26.15},{"time":0.2333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"armR3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":26.15,"curve":"stepped"},{"time":0.1333,"angle":26.15},{"time":0.2333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"armR4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":26.15,"curve":"stepped"},{"time":0.1333,"angle":26.15},{"time":0.2333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"armR5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":26.15,"curve":"stepped"},{"time":0.1333,"angle":26.15},{"time":0.2333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"legR":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":22.54,"curve":"stepped"},{"time":0.1333,"angle":22.54},{"time":0.2333}],"translate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"x":-0.55,"y":1.33,"curve":"stepped"},{"time":0.1333,"x":-0.55,"y":1.33},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"legL":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":56.69,"curve":"stepped"},{"time":0.1333,"angle":56.69},{"time":0.2333}],"translate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"x":1.79,"y":31.24,"curve":"stepped"},{"time":0.1333,"x":1.79,"y":31.24},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"armL":{"rotate":[{"angle":-2.34,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-5.33,"curve":"stepped"},{"time":0.1333,"angle":-5.33},{"time":0.2333,"angle":-2.34}],"translate":[{"x":0.18,"y":-5.6,"curve":"stepped"},{"time":0.2333,"x":0.18,"y":-5.6}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"armL2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":33.86,"curve":"stepped"},{"time":0.1333,"angle":33.86},{"time":0.2333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"armL3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":33.86,"curve":"stepped"},{"time":0.1333,"angle":33.86},{"time":0.2333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"armL4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":33.86,"curve":"stepped"},{"time":0.1333,"angle":33.86},{"time":0.2333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"armL5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":33.86,"curve":"stepped"},{"time":0.1333,"angle":33.86},{"time":0.2333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"head1":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-2.69,"curve":"stepped"},{"time":0.1333,"angle":-2.69},{"time":0.2333,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"head2":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-2.69,"curve":"stepped"},{"time":0.1333,"angle":-2.69},{"time":0.2333,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"head3":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-2.69,"curve":"stepped"},{"time":0.1333,"angle":-2.69},{"time":0.2333,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"head4":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-2.69,"curve":"stepped"},{"time":0.1333,"angle":-2.69},{"time":0.2333,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"legR2":{"rotate":[{"curve":"stepped"},{"time":0.2333}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"legR3":{"rotate":[{"curve":"stepped"},{"time":0.2333}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"legL2":{"rotate":[{"curve":0.25,"c3":0.615,"c4":0.43},{"time":0.0667,"angle":-24.81,"curve":"stepped"},{"time":0.1333,"angle":-24.81,"curve":0.384,"c2":0.35,"c3":0.799,"c4":0.83},{"time":0.2333}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"legL3":{"rotate":[{"curve":0.25,"c3":0.615,"c4":0.43},{"time":0.0667,"angle":-24.81,"curve":"stepped"},{"time":0.1333,"angle":-24.81,"curve":0.384,"c2":0.35,"c3":0.799,"c4":0.83},{"time":0.2333}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"head5":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.0667,"angle":-2.69,"curve":"stepped"},{"time":0.1333,"angle":-2.69},{"time":0.2333,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":0.2333}],"scale":[{"curve":"stepped"},{"time":0.2333}]},"shadow":{"translate":[{"x":-7,"curve":0.269,"c3":0.618,"c4":0.42},{"time":0.0667,"x":-10.04,"curve":"stepped"},{"time":0.1333,"x":-10.04,"curve":0.345,"c2":0.37,"c3":0.757},{"time":0.2333,"x":-7}],"scale":[{"x":0.97,"y":0.97,"curve":0.269,"c3":0.618,"c4":0.42},{"time":0.0667,"curve":"stepped"},{"time":0.1333,"curve":0.345,"c2":0.37,"c3":0.757},{"time":0.2333,"x":0.97,"y":0.97}]},"glare":{"translate":[{"curve":"stepped"},{"time":0.2333}]},"stakeR":{"rotate":[{},{"time":0.0667,"angle":-24.75,"curve":"stepped"},{"time":0.1333,"angle":-24.75},{"time":0.2333}]},"stakeL":{"rotate":[{},{"time":0.0667,"angle":-57.32,"curve":"stepped"},{"time":0.1333,"angle":-57.32},{"time":0.2333}]},"shoulder":{"rotate":[{},{"time":0.0667,"angle":4.25,"curve":"stepped"},{"time":0.1333,"angle":4.25},{"time":0.2333}],"translate":[{},{"time":0.0667,"x":1.55,"y":4.36,"curve":"stepped"},{"time":0.1333,"x":1.55,"y":4.36},{"time":0.2333}],"scale":[{},{"time":0.0667,"x":1.204,"y":1.204,"curve":"stepped"},{"time":0.1333,"x":1.204,"y":1.204},{"time":0.2333}]}}},"heal_bottom":{"slots":{"arm":{"attachment":[{"name":null}]},"arm2":{"attachment":[{"name":null}]},"arrow":{"attachment":[{"name":null}]},"arrow2":{"attachment":[{"name":null}]},"arrow3":{"attachment":[{"name":null}]},"body":{"attachment":[{"name":null}]},"bow1":{"attachment":[{"name":null}]},"bow2":{"attachment":[{"name":null}]},"crossbow":{"attachment":[{"name":null}]},"eye":{"attachment":[{"name":null}]},"eye2":{"attachment":[{"name":null}]},"fx1":{"attachment":[{"name":null}]},"fx2":{"attachment":[{"name":null}]},"fx3":{"attachment":[{"name":null}]},"fx4":{"attachment":[{"name":null}]},"fx5":{"attachment":[{"name":null}]},"fx6":{"attachment":[{"name":null}]},"fx7":{"attachment":[{"name":null}]},"fx8":{"attachment":[{"name":null}]},"fx9":{"attachment":[{"name":null}]},"fx10":{"attachment":[{"name":null}]},"fx11":{"attachment":[{"name":null}]},"fx12":{"attachment":[{"name":null}]},"fx13":{"attachment":[{"name":null}]},"glasses":{"attachment":[{"name":null}]},"head":{"attachment":[{"name":null}]},"heal1":{"twoColor":[{"light":"ffffffff","dark":"000000"},{"time":0.1,"light":"ffffffb2","dark":"000000"},{"time":0.1333,"light":"ffffff99","dark":"ffffff"},{"time":0.3333,"light":"ffffff00","dark":"000000"}],"attachment":[{"name":"heal1"}]},"heal1b":{"twoColor":[{"time":0.2667,"light":"ffffffff","dark":"000000"},{"time":0.3667,"light":"ffffffb2","dark":"000000"},{"time":0.4,"light":"ffffff99","dark":"ffffff"},{"time":0.6,"light":"ffffff00","dark":"000000"}],"attachment":[{"time":0.2667,"name":"heal1"}]},"heal1c":{"twoColor":[{"time":0.5,"light":"ffffffff","dark":"000000"},{"time":0.6,"light":"ffffffb2","dark":"000000"},{"time":0.6333,"light":"ffffff99","dark":"ffffff"},{"time":0.9333,"light":"ffffff00","dark":"000000"}],"attachment":[{"time":0.5,"name":"heal1"}]},"heal1d":{"color":[{"time":0.7667,"color":"ffffffff"},{"time":1.5,"color":"ffffff00"}],"attachment":[{"time":0.7667,"name":"heal1"}]},"heal2":{"twoColor":[{"light":"ffffffff","dark":"000000"},{"time":0.1,"light":"ffffffb2","dark":"000000"},{"time":0.1333,"light":"ffffff98","dark":"ffffff"},{"time":0.3333,"light":"ffffff00","dark":"000000"}],"attachment":[{"name":"heal2"}]},"heal2b":{"twoColor":[{"time":0.2667,"light":"ffffffff","dark":"000000"},{"time":0.3667,"light":"ffffffb2","dark":"000000"},{"time":0.4,"light":"ffffff99","dark":"ffffff"},{"time":0.6,"light":"ffffff00","dark":"000000"}],"attachment":[{"time":0.2667,"name":"heal2"}]},"heal2c":{"twoColor":[{"time":0.5,"light":"ffffffff","dark":"000000"},{"time":0.6,"light":"ffffffb2","dark":"000000"},{"time":0.6333,"light":"ffffff99","dark":"ffffff"},{"time":0.9333,"light":"ffffff00","dark":"000000"}],"attachment":[{"time":0.5,"name":"heal2"}]},"heal2d":{"color":[{"time":0.7667,"color":"ffffffff"},{"time":1.3333,"color":"ffffff00"}],"attachment":[{"time":0.7667,"name":"heal2"}]},"heal3":{"twoColor":[{"light":"ffffff00","dark":"ffffff"},{"time":0.3333,"light":"ffffffff","dark":"000000"},{"time":0.6667,"light":"ffffffbf","dark":"000000"},{"time":1,"light":"ffffffff","dark":"000000"},{"time":1.3333,"light":"ffffff00","dark":"000000"}],"attachment":[{"name":"heal3c"}]},"heal3a":{"twoColor":[{"time":0.1333,"light":"ffffffff","dark":"ffffff","curve":0.252,"c3":0.619,"c4":0.43},{"time":0.2667,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":0.3667,"light":"ffffffff","dark":"000000"},{"time":0.5,"light":"ffffff00","dark":"000000"}]},"heal3a2":{"twoColor":[{"time":0.4,"light":"ffffffff","dark":"ffffff","curve":0.252,"c3":0.619,"c4":0.43},{"time":0.6333,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":0.7667,"light":"ffffffff","dark":"000000"},{"time":1,"light":"ffffff00","dark":"000000"}]},"heal3a3":{"twoColor":[{"time":0.6333,"light":"ffffffff","dark":"ffffff"},{"time":0.9,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":1.0667,"light":"ffffffff","dark":"000000"},{"time":1.3333,"light":"ffffff00","dark":"000000"}]},"heal3b":{"twoColor":[{"time":0.1333,"light":"ffffffff","dark":"ffffff","curve":0.252,"c3":0.619,"c4":0.43},{"time":0.2667,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":0.3667,"light":"ffffffff","dark":"000000"},{"time":0.5,"light":"ffffff00","dark":"000000"}],"attachment":[{"time":0.1333,"name":"heal3b"}]},"heal3b2":{"twoColor":[{"time":0.4,"light":"ffffffff","dark":"ffffff","curve":0.252,"c3":0.619,"c4":0.43},{"time":0.6333,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":0.7667,"light":"ffffffff","dark":"000000"},{"time":1,"light":"ffffff00","dark":"000000"}],"attachment":[{"time":0.4,"name":"heal3b"}]},"heal3b3":{"twoColor":[{"time":0.6333,"light":"ffffffff","dark":"ffffff"},{"time":0.9,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":1.0667,"light":"ffffffff","dark":"000000"},{"time":1.3333,"light":"ffffff00","dark":"000000"}],"attachment":[{"time":0.6333,"name":"heal3b"}]},"heal4":{"color":[{"time":0.1667,"color":"ffffff00"},{"time":0.4333,"color":"ffffffff","curve":"stepped"},{"time":0.5667,"color":"ffffffff"},{"time":0.6667,"color":"ffffff00"}]},"heal4b":{"color":[{"time":0.2333,"color":"ffffff00"},{"time":0.5,"color":"ffffffff","curve":"stepped"},{"time":0.6333,"color":"ffffffff"},{"time":0.7333,"color":"ffffff00"}]},"heal4b2":{"color":[{"time":0.3333,"color":"ffffff00"},{"time":0.6,"color":"ffffffff","curve":"stepped"},{"time":0.7333,"color":"ffffffff"},{"time":0.8333,"color":"ffffff00"}]},"heal4b3":{"color":[{"time":0.4,"color":"ffffff00"},{"time":0.6667,"color":"ffffffff","curve":"stepped"},{"time":0.8,"color":"ffffffff"},{"time":0.9,"color":"ffffff00"}]},"heal4b4":{"color":[{"time":0.8333,"color":"ffffff00"},{"time":1.1,"color":"ffffffff","curve":"stepped"},{"time":1.2333,"color":"ffffffff"},{"time":1.3333,"color":"ffffff00"}]},"heal4b5":{"color":[{"time":0.5667,"color":"ffffff00"},{"time":0.8333,"color":"ffffffff","curve":"stepped"},{"time":0.9667,"color":"ffffffff"},{"time":1.0667,"color":"ffffff00"}],"attachment":[{"time":0.5667,"name":"heal4"}]},"heal4b6":{"color":[{"time":0.6667,"color":"ffffff00"},{"time":0.9333,"color":"ffffffff","curve":"stepped"},{"time":1.0667,"color":"ffffffff"},{"time":1.1667,"color":"ffffff00"}],"attachment":[{"time":0.6667,"name":"heal4"}]},"heal5":{"color":[{"time":0.1667,"color":"ffffff00"},{"time":0.6,"color":"ffffffff","curve":"stepped"},{"time":0.9,"color":"ffffffff"},{"time":1,"color":"ffffff00"}]},"heal5b":{"color":[{"time":0.3333,"color":"ffffff00"},{"time":0.7667,"color":"ffffffff","curve":"stepped"},{"time":1.0667,"color":"ffffffff"},{"time":1.1667,"color":"ffffff00"}],"attachment":[{"time":0.3333,"name":"heal5"}]},"heal5b2":{"color":[{"time":0.8333,"color":"ffffff00"},{"time":1.2667,"color":"ffffffff","curve":"stepped"},{"time":1.5667,"color":"ffffffff"},{"time":1.6667,"color":"ffffff00"}]},"heal5b3":{"color":[{"time":0.3333,"color":"ffffff00"},{"time":0.7667,"color":"ffffffff","curve":"stepped"},{"time":1.0667,"color":"ffffffff"},{"time":1.1667,"color":"ffffff00"}]},"heal5b4":{"color":[{"time":0.6667,"color":"ffffff00"},{"time":1.1,"color":"ffffffff","curve":"stepped"},{"time":1.4,"color":"ffffffff"},{"time":1.5,"color":"ffffff00"}],"attachment":[{"time":0.6667,"name":"heal5"}]},"heal5b5":{"color":[{"time":0.6667,"color":"ffffff00"},{"time":1.1,"color":"ffffffff","curve":"stepped"},{"time":1.4,"color":"ffffffff"},{"time":1.5,"color":"ffffff00"}]},"heal5b6":{"color":[{"time":0.8333,"color":"ffffff00"},{"time":1.2667,"color":"ffffffff","curve":"stepped"},{"time":1.5667,"color":"ffffffff"},{"time":1.6667,"color":"ffffff00"}],"attachment":[{"time":0.8333,"name":"heal5"}]},"heal6":{"color":[{"time":0.1667,"color":"ffffff00"},{"time":0.5,"color":"ffffffff","curve":"stepped"},{"time":0.7333,"color":"ffffffff"},{"time":0.8333,"color":"ffffff00"}]},"heal6b":{"color":[{"time":0.3333,"color":"ffffff00"},{"time":0.6667,"color":"ffffffff","curve":"stepped"},{"time":0.9,"color":"ffffffff"},{"time":1,"color":"ffffff00"}],"attachment":[{"time":0.3333,"name":"heal6"}]},"heal6b2":{"color":[{"time":0.5,"color":"ffffff00"},{"time":0.8333,"color":"ffffffff","curve":"stepped"},{"time":1.0667,"color":"ffffffff"},{"time":1.1667,"color":"ffffff00"}]},"heal6b3":{"color":[{"time":0.5,"color":"ffffff00"},{"time":0.8333,"color":"ffffffff","curve":"stepped"},{"time":1.0667,"color":"ffffffff"},{"time":1.1667,"color":"ffffff00"}]},"heal6b4":{"color":[{"time":0.6667,"color":"ffffff00"},{"time":1,"color":"ffffffff","curve":"stepped"},{"time":1.2333,"color":"ffffffff"},{"time":1.3333,"color":"ffffff00"}]},"heal6b5":{"color":[{"time":1,"color":"ffffff00"},{"time":1.3333,"color":"ffffffff","curve":"stepped"},{"time":1.5667,"color":"ffffffff"},{"time":1.6667,"color":"ffffff00"}]},"heal6b6":{"color":[{"time":1.1667,"color":"ffffff00"},{"time":1.5,"color":"ffffffff","curve":"stepped"},{"time":1.7333,"color":"ffffffff"},{"time":1.8333,"color":"ffffff00"}],"attachment":[{"time":1.1667,"name":"heal6"}]},"leg_L":{"attachment":[{"name":null}]},"leg_R":{"attachment":[{"name":null}]},"light":{"attachment":[{"name":"light"}]},"light2":{"attachment":[{"name":"light"}]},"mouth":{"attachment":[{"name":null}]},"shadow":{"attachment":[{"name":null}]},"stake":{"attachment":[{"name":null}]},"stake2":{"attachment":[{"name":null}]},"string":{"attachment":[{"name":null}]},"string2":{"attachment":[{"name":null}]}},"bones":{"chest":{"rotate":[{"angle":-1.91}],"translate":[{}],"scale":[{}]},"bone":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso":{"rotate":[{"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13}],"scale":[{}]},"torso1":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso4":{"rotate":[{}],"translate":[{"x":-0.04,"y":1.26}],"scale":[{}]},"torso5":{"rotate":[{}],"translate":[{"x":-0.01,"y":1.26}],"scale":[{}]},"head":{"rotate":[{"angle":4.36}],"translate":[{}],"scale":[{}]},"glasses":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armR":{"rotate":[{"angle":-15.88}],"translate":[{"x":-3.82,"y":9.37}],"scale":[{}]},"armR2":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR3":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR4":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR5":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"legR":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armL":{"rotate":[{"angle":-2.34}],"translate":[{"x":0.18,"y":-5.6}],"scale":[{}]},"armL2":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL3":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL4":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL5":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"head1":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head2":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head3":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head4":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"legR2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legR3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"head5":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"shadow":{"translate":[{"x":-7}],"scale":[{"x":0.97,"y":0.97}]},"glare":{"translate":[{}]},"stakeR":{"rotate":[{}]},"stakeL":{"rotate":[{}]},"heal1":{"translate":[{}],"scale":[{"x":0.7,"y":0.7,"curve":0.25,"c3":0.75},{"time":0.3333,"x":1.5,"y":1.5}]},"heal2":{"translate":[{}],"scale":[{"x":1.2,"y":1.2,"curve":0.25,"c3":0.75},{"time":0.3333,"x":0.7,"y":0.7}]},"heal3":{"translate":[{"time":0.1333,"y":6.94,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.5,"y":544.22}],"scale":[{"time":0.1333,"x":1.2,"y":1.2}]},"heal4":{"translate":[{"time":0.1667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.6667,"y":790.93}],"scale":[{"time":0.1667}]},"heal5":{"translate":[{"time":0.1667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1,"y":986.63}],"scale":[{"time":0.1667}]},"heal6":{"translate":[{"time":0.1667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.8333,"y":986.63}],"scale":[{"time":0.1667}]},"heal1b":{"translate":[{"time":0.2667}],"scale":[{"time":0.2667,"x":0.8,"y":0.8,"curve":0.25,"c3":0.75},{"time":0.6,"x":1.5,"y":1.5}]},"heal2b":{"translate":[{"time":0.2667}],"scale":[{"time":0.2667,"x":1.2,"y":1.2,"curve":0.25,"c3":0.75},{"time":0.6,"x":0.7,"y":0.7}]},"heal1c":{"translate":[{"time":0.5}],"scale":[{"time":0.5,"x":0.8,"y":0.8,"curve":0.25,"c3":0.75},{"time":0.9333,"x":1.5,"y":1.5}]},"heal2c":{"translate":[{"time":0.5}],"scale":[{"time":0.5,"x":1.2,"y":1.2,"curve":0.25,"c3":0.75},{"time":0.9333,"x":0.7,"y":0.7}]},"heal4b":{"translate":[{"time":0.2333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.7333,"y":790.93}],"scale":[{"time":0.2333}]},"heal4b2":{"translate":[{"time":0.3333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.8333,"y":790.93}],"scale":[{"time":0.3333}]},"heal4b3":{"translate":[{"time":0.4,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.9,"y":790.93}],"scale":[{"time":0.4}]},"heal4b4":{"translate":[{"time":0.8333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.3333,"y":790.93}],"scale":[{"time":0.8333}]},"heal4b5":{"translate":[{"time":0.5667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.0667,"y":790.93}],"scale":[{"time":0.5667}]},"heal4b6":{"translate":[{"time":0.6667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.1667,"y":790.93}],"scale":[{"time":0.6667}]},"heal5b":{"translate":[{"time":0.3333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.1667,"y":986.63}],"scale":[{"time":0.3333}]},"heal5b2":{"translate":[{"time":0.8333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.6667,"y":986.63}],"scale":[{"time":0.8333}]},"heal5b3":{"translate":[{"time":0.3333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.1667,"y":986.63}],"scale":[{"time":0.3333}]},"heal5b4":{"translate":[{"time":0.6667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.5,"y":986.63}],"scale":[{"time":0.6667}]},"heal5b5":{"translate":[{"time":0.6667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.5,"y":986.63}],"scale":[{"time":0.6667}]},"heal5b6":{"translate":[{"time":0.8333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.6667,"y":986.63}],"scale":[{"time":0.8333}]},"heal6b":{"translate":[{"time":0.3333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1,"y":986.63}],"scale":[{"time":0.3333}]},"heal6b2":{"translate":[{"time":0.5,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.1667,"y":986.63}],"scale":[{"time":0.5}]},"heal6b3":{"translate":[{"time":0.5,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.1667,"y":986.63}],"scale":[{"time":0.5}]},"heal6b4":{"translate":[{"time":0.6667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.3333,"y":986.63}],"scale":[{"time":0.6667}]},"heal6b5":{"translate":[{"time":1,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.6667,"y":986.63}],"scale":[{"time":1}]},"heal6b6":{"translate":[{"time":1.1667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.8333,"y":986.63}],"scale":[{"time":1.1667}]},"heal3b":{"translate":[{"time":0.4,"y":6.94,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1,"y":544.22}],"scale":[{"time":0.4,"x":1.2,"y":1.2}]},"heal3c":{"translate":[{"time":0.6333,"y":6.94,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.3333,"y":544.22}],"scale":[{"time":0.6333,"x":1.2,"y":1.2}]},"heal2d":{"translate":[{"time":0.7667}],"scale":[{"time":0.7667,"x":1.2,"y":1.2,"curve":0.25,"c3":0.75},{"time":1.3333,"x":0.7,"y":0.7}]},"heal1d":{"translate":[{"time":0.7667}],"scale":[{"time":0.7667,"x":0.8,"y":0.8,"curve":0.25,"c3":0.75},{"time":1.5,"x":1.5,"y":1.5}]},"heal7":{"scale":[{"x":0.5,"y":0.5},{"time":0.3333},{"time":0.5,"x":0.96,"y":0.96},{"time":0.6667},{"time":0.8333,"x":0.96,"y":0.96},{"time":1}]}}},"heal_top":{"slots":{"arm":{"attachment":[{"name":null}]},"arm2":{"attachment":[{"name":null}]},"arrow":{"attachment":[{"name":null}]},"arrow2":{"attachment":[{"name":null}]},"arrow3":{"attachment":[{"name":null}]},"body":{"attachment":[{"name":null}]},"bow1":{"attachment":[{"name":null}]},"bow2":{"attachment":[{"name":null}]},"crossbow":{"attachment":[{"name":null}]},"eye":{"attachment":[{"name":null}]},"eye2":{"attachment":[{"name":null}]},"fx1":{"attachment":[{"name":null}]},"fx2":{"attachment":[{"name":null}]},"fx3":{"attachment":[{"name":null}]},"fx4":{"attachment":[{"name":null}]},"fx5":{"attachment":[{"name":null}]},"fx6":{"attachment":[{"name":null}]},"fx7":{"attachment":[{"name":null}]},"fx8":{"attachment":[{"name":null}]},"fx9":{"attachment":[{"name":null}]},"fx10":{"attachment":[{"name":null}]},"fx11":{"attachment":[{"name":null}]},"fx12":{"attachment":[{"name":null}]},"fx13":{"attachment":[{"name":null}]},"glasses":{"attachment":[{"name":null}]},"head":{"attachment":[{"name":null}]},"heal1":{"twoColor":[{"light":"ffffffff","dark":"000000"},{"time":0.1,"light":"ffffffb2","dark":"000000"},{"time":0.1333,"light":"ffffff99","dark":"ffffff"},{"time":0.3333,"light":"ffffff00","dark":"000000"}]},"heal1b":{"twoColor":[{"time":0.2667,"light":"ffffffff","dark":"000000"},{"time":0.3667,"light":"ffffffb2","dark":"000000"},{"time":0.4,"light":"ffffff99","dark":"ffffff"},{"time":0.6,"light":"ffffff00","dark":"000000"}]},"heal1c":{"twoColor":[{"time":0.5,"light":"ffffffff","dark":"000000"},{"time":0.6,"light":"ffffffb2","dark":"000000"},{"time":0.6333,"light":"ffffff99","dark":"ffffff"},{"time":0.9333,"light":"ffffff00","dark":"000000"}]},"heal1d":{"color":[{"time":0.7667,"color":"ffffffff"},{"time":1.5,"color":"ffffff00"}]},"heal2":{"twoColor":[{"light":"ffffffff","dark":"000000"},{"time":0.1,"light":"ffffffb2","dark":"000000"},{"time":0.1333,"light":"ffffff98","dark":"ffffff"},{"time":0.3333,"light":"ffffff00","dark":"000000"}]},"heal2b":{"twoColor":[{"time":0.2667,"light":"ffffffff","dark":"000000"},{"time":0.3667,"light":"ffffffb2","dark":"000000"},{"time":0.4,"light":"ffffff99","dark":"ffffff"},{"time":0.6,"light":"ffffff00","dark":"000000"}]},"heal2c":{"twoColor":[{"time":0.5,"light":"ffffffff","dark":"000000"},{"time":0.6,"light":"ffffffb2","dark":"000000"},{"time":0.6333,"light":"ffffff99","dark":"ffffff"},{"time":0.9333,"light":"ffffff00","dark":"000000"}]},"heal2d":{"color":[{"time":0.7667,"color":"ffffffff"},{"time":1.3333,"color":"ffffff00"}]},"heal3":{"twoColor":[{"light":"ffffff00","dark":"ffffff"},{"time":0.3333,"light":"ffffffff","dark":"000000"},{"time":0.6667,"light":"ffffffbf","dark":"000000"},{"time":1,"light":"ffffffff","dark":"000000"},{"time":1.3333,"light":"ffffff00","dark":"000000"}]},"heal3a":{"twoColor":[{"time":0.1333,"light":"ffffffff","dark":"ffffff","curve":0.252,"c3":0.619,"c4":0.43},{"time":0.2667,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":0.3667,"light":"ffffffff","dark":"000000"},{"time":0.5,"light":"ffffff00","dark":"000000"}],"attachment":[{"time":0.1333,"name":"heal3a"}]},"heal3a2":{"twoColor":[{"time":0.4,"light":"ffffffff","dark":"ffffff","curve":0.252,"c3":0.619,"c4":0.43},{"time":0.6333,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":0.7667,"light":"ffffffff","dark":"000000"},{"time":1,"light":"ffffff00","dark":"000000"}],"attachment":[{"time":0.4,"name":"heal3a"}]},"heal3a3":{"twoColor":[{"time":0.6333,"light":"ffffffff","dark":"ffffff"},{"time":0.9,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":1.0667,"light":"ffffffff","dark":"000000"},{"time":1.3333,"light":"ffffff00","dark":"000000"}],"attachment":[{"time":0.6333,"name":"heal3a"}]},"heal3b":{"twoColor":[{"time":0.1333,"light":"ffffffff","dark":"ffffff","curve":0.252,"c3":0.619,"c4":0.43},{"time":0.2667,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":0.3667,"light":"ffffffff","dark":"000000"},{"time":0.5,"light":"ffffff00","dark":"000000"}]},"heal3b2":{"twoColor":[{"time":0.4,"light":"ffffffff","dark":"ffffff","curve":0.252,"c3":0.619,"c4":0.43},{"time":0.6333,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":0.7667,"light":"ffffffff","dark":"000000"},{"time":1,"light":"ffffff00","dark":"000000"}]},"heal3b3":{"twoColor":[{"time":0.6333,"light":"ffffffff","dark":"ffffff"},{"time":0.9,"light":"ffffffff","dark":"000000","curve":"stepped"},{"time":1.0667,"light":"ffffffff","dark":"000000"},{"time":1.3333,"light":"ffffff00","dark":"000000"}]},"heal4":{"color":[{"time":0.1667,"color":"ffffff00"},{"time":0.4333,"color":"ffffffff","curve":"stepped"},{"time":0.5667,"color":"ffffffff"},{"time":0.6667,"color":"ffffff00"}],"attachment":[{"time":0.1667,"name":"heal4"}]},"heal4b":{"color":[{"time":0.2333,"color":"ffffff00"},{"time":0.5,"color":"ffffffff","curve":"stepped"},{"time":0.6333,"color":"ffffffff"},{"time":0.7333,"color":"ffffff00"}],"attachment":[{"time":0.2333,"name":"heal4"}]},"heal4b2":{"color":[{"time":0.3333,"color":"ffffff00"},{"time":0.6,"color":"ffffffff","curve":"stepped"},{"time":0.7333,"color":"ffffffff"},{"time":0.8333,"color":"ffffff00"}],"attachment":[{"time":0.3333,"name":"heal4"}]},"heal4b3":{"color":[{"time":0.4,"color":"ffffff00"},{"time":0.6667,"color":"ffffffff","curve":"stepped"},{"time":0.8,"color":"ffffffff"},{"time":0.9,"color":"ffffff00"}],"attachment":[{"time":0.4,"name":"heal4"}]},"heal4b4":{"color":[{"time":0.8333,"color":"ffffff00"},{"time":1.1,"color":"ffffffff","curve":"stepped"},{"time":1.2333,"color":"ffffffff"},{"time":1.3333,"color":"ffffff00"}],"attachment":[{"time":0.8333,"name":"heal4"}]},"heal4b5":{"color":[{"time":0.5667,"color":"ffffff00"},{"time":0.8333,"color":"ffffffff","curve":"stepped"},{"time":0.9667,"color":"ffffffff"},{"time":1.0667,"color":"ffffff00"}]},"heal4b6":{"color":[{"time":0.6667,"color":"ffffff00"},{"time":0.9333,"color":"ffffffff","curve":"stepped"},{"time":1.0667,"color":"ffffffff"},{"time":1.1667,"color":"ffffff00"}]},"heal5":{"color":[{"time":0.1667,"color":"ffffff00"},{"time":0.6,"color":"ffffffff","curve":"stepped"},{"time":0.9,"color":"ffffffff"},{"time":1,"color":"ffffff00"}],"attachment":[{"time":0.1667,"name":"heal5"}]},"heal5b":{"color":[{"time":0.3333,"color":"ffffff00"},{"time":0.7667,"color":"ffffffff","curve":"stepped"},{"time":1.0667,"color":"ffffffff"},{"time":1.1667,"color":"ffffff00"}]},"heal5b2":{"color":[{"time":0.8333,"color":"ffffff00"},{"time":1.2667,"color":"ffffffff","curve":"stepped"},{"time":1.5667,"color":"ffffffff"},{"time":1.6667,"color":"ffffff00"}],"attachment":[{"time":0.8333,"name":"heal5"}]},"heal5b3":{"color":[{"time":0.3333,"color":"ffffff00"},{"time":0.7667,"color":"ffffffff","curve":"stepped"},{"time":1.0667,"color":"ffffffff"},{"time":1.1667,"color":"ffffff00"}],"attachment":[{"time":0.3333,"name":"heal5"}]},"heal5b4":{"color":[{"time":0.6667,"color":"ffffff00"},{"time":1.1,"color":"ffffffff","curve":"stepped"},{"time":1.4,"color":"ffffffff"},{"time":1.5,"color":"ffffff00"}]},"heal5b5":{"color":[{"time":0.6667,"color":"ffffff00"},{"time":1.1,"color":"ffffffff","curve":"stepped"},{"time":1.4,"color":"ffffffff"},{"time":1.5,"color":"ffffff00"}],"attachment":[{"time":0.6667,"name":"heal5"}]},"heal5b6":{"color":[{"time":0.8333,"color":"ffffff00"},{"time":1.2667,"color":"ffffffff","curve":"stepped"},{"time":1.5667,"color":"ffffffff"},{"time":1.6667,"color":"ffffff00"}]},"heal6":{"color":[{"time":0.1667,"color":"ffffff00"},{"time":0.5,"color":"ffffffff","curve":"stepped"},{"time":0.7333,"color":"ffffffff"},{"time":0.8333,"color":"ffffff00"}],"attachment":[{"time":0.1667,"name":"heal6"}]},"heal6b":{"color":[{"time":0.3333,"color":"ffffff00"},{"time":0.6667,"color":"ffffffff","curve":"stepped"},{"time":0.9,"color":"ffffffff"},{"time":1,"color":"ffffff00"}]},"heal6b2":{"color":[{"time":0.5,"color":"ffffff00"},{"time":0.8333,"color":"ffffffff","curve":"stepped"},{"time":1.0667,"color":"ffffffff"},{"time":1.1667,"color":"ffffff00"}],"attachment":[{"time":0.5,"name":"heal6"}]},"heal6b3":{"color":[{"time":0.5,"color":"ffffff00"},{"time":0.8333,"color":"ffffffff","curve":"stepped"},{"time":1.0667,"color":"ffffffff"},{"time":1.1667,"color":"ffffff00"}],"attachment":[{"time":0.5,"name":"heal6"}]},"heal6b4":{"color":[{"time":0.6667,"color":"ffffff00"},{"time":1,"color":"ffffffff","curve":"stepped"},{"time":1.2333,"color":"ffffffff"},{"time":1.3333,"color":"ffffff00"}],"attachment":[{"time":0.6667,"name":"heal6"}]},"heal6b5":{"color":[{"time":1,"color":"ffffff00"},{"time":1.3333,"color":"ffffffff","curve":"stepped"},{"time":1.5667,"color":"ffffffff"},{"time":1.6667,"color":"ffffff00"}],"attachment":[{"time":1,"name":"heal6"}]},"heal6b6":{"color":[{"time":1.1667,"color":"ffffff00"},{"time":1.5,"color":"ffffffff","curve":"stepped"},{"time":1.7333,"color":"ffffffff"},{"time":1.8333,"color":"ffffff00"}]},"leg_L":{"attachment":[{"name":null}]},"leg_R":{"attachment":[{"name":null}]},"light":{"attachment":[{"name":"light"}]},"light2":{"attachment":[{"name":"light"}]},"mouth":{"attachment":[{"name":null}]},"shadow":{"attachment":[{"name":null}]},"stake":{"attachment":[{"name":null}]},"stake2":{"attachment":[{"name":null}]},"string":{"attachment":[{"name":null}]},"string2":{"attachment":[{"name":null}]}},"bones":{"chest":{"rotate":[{"angle":-1.91}],"translate":[{}],"scale":[{}]},"bone":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso":{"rotate":[{"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13}],"scale":[{}]},"torso1":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"torso4":{"rotate":[{}],"translate":[{"x":-0.04,"y":1.26}],"scale":[{}]},"torso5":{"rotate":[{}],"translate":[{"x":-0.01,"y":1.26}],"scale":[{}]},"head":{"rotate":[{"angle":4.36}],"translate":[{}],"scale":[{}]},"glasses":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armR":{"rotate":[{"angle":-15.88}],"translate":[{"x":-3.82,"y":9.37}],"scale":[{}]},"armR2":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR3":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR4":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armR5":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"legR":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL":{"rotate":[{}],"translate":[{}],"scale":[{}]},"armL":{"rotate":[{"angle":-2.34}],"translate":[{"x":0.18,"y":-5.6}],"scale":[{}]},"armL2":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL3":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL4":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"armL5":{"rotate":[{"angle":4.37}],"translate":[{}],"scale":[{}]},"head1":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head2":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head3":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"head4":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"legR2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legR3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL2":{"rotate":[{}],"translate":[{}],"scale":[{}]},"legL3":{"rotate":[{}],"translate":[{}],"scale":[{}]},"head5":{"rotate":[{"angle":-1.13}],"translate":[{}],"scale":[{}]},"shadow":{"translate":[{"x":-7}],"scale":[{"x":0.97,"y":0.97}]},"glare":{"translate":[{}]},"stakeR":{"rotate":[{}]},"stakeL":{"rotate":[{}]},"heal1":{"translate":[{}],"scale":[{"x":0.7,"y":0.7,"curve":0.25,"c3":0.75},{"time":0.3333,"x":1.5,"y":1.5}]},"heal2":{"translate":[{}],"scale":[{"x":1.2,"y":1.2,"curve":0.25,"c3":0.75},{"time":0.3333,"x":0.7,"y":0.7}]},"heal3":{"translate":[{"time":0.1333,"y":6.94,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.5,"y":544.22}],"scale":[{"time":0.1333,"x":1.2,"y":1.2}]},"heal4":{"translate":[{"time":0.1667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.6667,"y":790.93}],"scale":[{"time":0.1667}]},"heal5":{"translate":[{"time":0.1667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1,"y":986.63}],"scale":[{"time":0.1667}]},"heal6":{"translate":[{"time":0.1667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.8333,"y":986.63}],"scale":[{"time":0.1667}]},"heal1b":{"translate":[{"time":0.2667}],"scale":[{"time":0.2667,"x":0.8,"y":0.8,"curve":0.25,"c3":0.75},{"time":0.6,"x":1.5,"y":1.5}]},"heal2b":{"translate":[{"time":0.2667}],"scale":[{"time":0.2667,"x":1.2,"y":1.2,"curve":0.25,"c3":0.75},{"time":0.6,"x":0.7,"y":0.7}]},"heal1c":{"translate":[{"time":0.5}],"scale":[{"time":0.5,"x":0.8,"y":0.8,"curve":0.25,"c3":0.75},{"time":0.9333,"x":1.5,"y":1.5}]},"heal2c":{"translate":[{"time":0.5}],"scale":[{"time":0.5,"x":1.2,"y":1.2,"curve":0.25,"c3":0.75},{"time":0.9333,"x":0.7,"y":0.7}]},"heal4b":{"translate":[{"time":0.2333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.7333,"y":790.93}],"scale":[{"time":0.2333}]},"heal4b2":{"translate":[{"time":0.3333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.8333,"y":790.93}],"scale":[{"time":0.3333}]},"heal4b3":{"translate":[{"time":0.4,"curve":0.25,"c3":0.766,"c4":0.67},{"time":0.9,"y":790.93}],"scale":[{"time":0.4}]},"heal4b4":{"translate":[{"time":0.8333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.3333,"y":790.93}],"scale":[{"time":0.8333}]},"heal4b5":{"translate":[{"time":0.5667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.0667,"y":790.93}],"scale":[{"time":0.5667}]},"heal4b6":{"translate":[{"time":0.6667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.1667,"y":790.93}],"scale":[{"time":0.6667}]},"heal5b":{"translate":[{"time":0.3333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.1667,"y":986.63}],"scale":[{"time":0.3333}]},"heal5b2":{"translate":[{"time":0.8333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.6667,"y":986.63}],"scale":[{"time":0.8333}]},"heal5b3":{"translate":[{"time":0.3333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.1667,"y":986.63}],"scale":[{"time":0.3333}]},"heal5b4":{"translate":[{"time":0.6667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.5,"y":986.63}],"scale":[{"time":0.6667}]},"heal5b5":{"translate":[{"time":0.6667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.5,"y":986.63}],"scale":[{"time":0.6667}]},"heal5b6":{"translate":[{"time":0.8333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.6667,"y":986.63}],"scale":[{"time":0.8333}]},"heal6b":{"translate":[{"time":0.3333,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1,"y":986.63}],"scale":[{"time":0.3333}]},"heal6b2":{"translate":[{"time":0.5,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.1667,"y":986.63}],"scale":[{"time":0.5}]},"heal6b3":{"translate":[{"time":0.5,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.1667,"y":986.63}],"scale":[{"time":0.5}]},"heal6b4":{"translate":[{"time":0.6667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.3333,"y":986.63}],"scale":[{"time":0.6667}]},"heal6b5":{"translate":[{"time":1,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.6667,"y":986.63}],"scale":[{"time":1}]},"heal6b6":{"translate":[{"time":1.1667,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.8333,"y":986.63}],"scale":[{"time":1.1667}]},"heal3b":{"translate":[{"time":0.4,"y":6.94,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1,"y":544.22}],"scale":[{"time":0.4,"x":1.2,"y":1.2}]},"heal3c":{"translate":[{"time":0.6333,"y":6.94,"curve":0.25,"c3":0.766,"c4":0.67},{"time":1.3333,"y":544.22}],"scale":[{"time":0.6333,"x":1.2,"y":1.2}]},"heal2d":{"translate":[{"time":0.7667}],"scale":[{"time":0.7667,"x":1.2,"y":1.2,"curve":0.25,"c3":0.75},{"time":1.3333,"x":0.7,"y":0.7}]},"heal1d":{"translate":[{"time":0.7667}],"scale":[{"time":0.7667,"x":0.8,"y":0.8,"curve":0.25,"c3":0.75},{"time":1.5,"x":1.5,"y":1.5}]},"heal7":{"scale":[{"x":0.5,"y":0.5},{"time":0.3333},{"time":0.5,"x":0.96,"y":0.96},{"time":0.6667},{"time":0.8333,"x":0.96,"y":0.96},{"time":1}]}}},"idle":{"slots":{"arm":{"attachment":[{"name":"arm"}]},"arm2":{"attachment":[{"name":"arm"}]},"arrow":{"attachment":[{"name":null}]},"arrow2":{"attachment":[{"name":null}]},"arrow3":{"attachment":[{"name":null}]},"bg":{"attachment":[{"name":null}]},"body":{"attachment":[{"name":"body"}]},"bow1":{"attachment":[{"name":null}]},"bow2":{"attachment":[{"name":null}]},"crossbow":{"attachment":[{"name":null}]},"eye":{"attachment":[{"name":null}]},"eye2":{"attachment":[{"name":null}]},"fx1":{"attachment":[{"name":null}]},"fx2":{"attachment":[{"name":null}]},"fx3":{"attachment":[{"name":null}]},"fx4":{"attachment":[{"name":null}]},"fx5":{"attachment":[{"name":null}]},"fx6":{"attachment":[{"name":null}]},"fx7":{"attachment":[{"name":null}]},"fx8":{"attachment":[{"name":null}]},"fx9":{"attachment":[{"name":null}]},"fx10":{"attachment":[{"name":null}]},"fx11":{"attachment":[{"name":null}]},"fx12":{"attachment":[{"name":null}]},"fx13":{"attachment":[{"name":null}]},"glare":{"attachment":[{"name":"glare"}]},"glare2":{"attachment":[{"name":"glare"}]},"glasses":{"attachment":[{"name":"glasses"}]},"head":{"attachment":[{"name":"head"}]},"leg_L":{"attachment":[{"name":"leg_L"}]},"leg_R":{"attachment":[{"name":"leg_R"}]},"light":{"attachment":[{"name":"light"},{"time":0.6667,"name":null},{"time":1.6667,"name":"light"},{"time":2.3333,"name":null},{"time":3.3333,"name":"light"}]},"light2":{"attachment":[{"name":"light"},{"time":0.6667,"name":null},{"time":1.6667,"name":"light"},{"time":2.3333,"name":null},{"time":3.3333,"name":"light"}]},"mouth":{"attachment":[{"name":null}]},"shadow":{"attachment":[{"name":"shadow"}]},"stake":{"attachment":[{"name":"stake"}]},"stake2":{"attachment":[{"name":"stake"}]},"string":{"attachment":[{"name":null}]},"string2":{"attachment":[{"name":null}]}},"bones":{"chest":{"rotate":[{"angle":-1.91,"curve":0.25,"c3":0.799,"c4":0.8},{"time":1.6667,"angle":-2.08,"curve":0.25,"c3":0.799,"c4":0.8},{"time":3.3333,"angle":-1.91}],"translate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"x":2.58,"y":-7.93,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"x":-0.23,"y":-9.05,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"x":2.58,"y":-7.93,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333}],"scale":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"x":1.138,"y":1.138,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"y":0.874,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"x":1.138,"y":1.138,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333}]},"bone":{"rotate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"torso":{"rotate":[{"angle":-1.84,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":-1.51,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":1.46,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":-1.51,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":-1.84}],"translate":[{"x":-6.97,"y":-0.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"y":7.65,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"x":12.84,"y":0.1,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"y":7.65,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"x":-6.97,"y":-0.13}],"scale":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"x":1.037,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"x":1.037,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333}]},"torso1":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":0.87,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":0.87,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"torso2":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":0.87,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":0.87,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"torso3":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":0.87,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":0.87,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"torso4":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":0.87,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":0.87,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333}],"translate":[{"x":-0.04,"y":1.26,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"x":-0.05,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"x":0.03,"y":-1.84,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"x":-0.05,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"x":-0.04,"y":1.26}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"torso5":{"rotate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":0.33,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":0.33,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333}],"translate":[{"x":-0.01,"y":1.26,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"x":6.14,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"x":0.03,"y":-1.84,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"x":6.14,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"x":-0.01,"y":1.26}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"head":{"rotate":[{"angle":4.36,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":-1.4,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":-1.4,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":4.36}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"glasses":{"rotate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"translate":[{"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"x":2.7,"y":-0.9,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"x":2.7,"y":-0.9,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"armR":{"rotate":[{"angle":-15.88,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":-29.44,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":-9.9,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":-29.44,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":-15.88}],"translate":[{"x":-3.82,"y":9.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"x":4.55,"y":4.45,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"x":-3.49,"y":-10.93,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"x":4.55,"y":4.45,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"x":-3.82,"y":9.37}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"armR2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":12.81,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":12.81,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"armR3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":12.81,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":12.81,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"armR4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":12.81,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":12.81,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"armR5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":12.81,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":12.81,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"legR":{"rotate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"legL":{"rotate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"armL":{"rotate":[{"angle":-2.34,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":-17.56,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":-12.08,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":-17.56,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":-2.34}],"translate":[{"x":0.18,"y":-5.6,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"x":5.25,"y":-0.15,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"x":5.25,"y":-0.15,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"x":0.18,"y":-5.6}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"armL2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":7.28,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":7.28,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"armL3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":7.28,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":7.28,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"armL4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":7.28,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":7.28,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"armL5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":7.28,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":4.37,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":7.28,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"head1":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":1.52,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":1.52,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"head2":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":1.52,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":1.52,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"head3":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":1.52,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":1.52,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"head4":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":1.52,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":1.52,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"legR2":{"rotate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"legR3":{"rotate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"legL2":{"rotate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"legL3":{"rotate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"head5":{"rotate":[{"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":0.8333,"angle":1.52,"curve":0.224,"c2":0.2,"c3":0.75},{"time":1.6667,"angle":-1.13,"curve":0.25,"c3":0.799,"c4":0.8},{"time":2.5,"angle":1.52,"curve":0.224,"c2":0.2,"c3":0.75},{"time":3.3333,"angle":-1.13}],"translate":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}],"scale":[{"curve":"stepped"},{"time":1.6667,"curve":"stepped"},{"time":3.3333}]},"shadow":{"translate":[{"x":-7,"curve":0.25,"c3":0.75},{"time":1.6667,"x":10,"curve":0.25,"c3":0.75},{"time":3.3333,"x":-7}],"scale":[{"x":0.97,"y":0.97,"curve":0.25,"c3":0.75},{"time":0.8333,"curve":0.25,"c3":0.75},{"time":1.6667,"x":0.97,"y":0.97,"curve":0.25,"c3":0.75},{"time":2.5,"curve":0.25,"c3":0.75},{"time":3.3333,"x":0.97,"y":0.97}]},"glare":{"translate":[{},{"time":0.6667,"y":152.85},{"time":0.8333,"curve":"stepped"},{"time":1.6667},{"time":2.3333,"y":152.85},{"time":2.5,"curve":"stepped"},{"time":3.3333}]},"stakeR":{"rotate":[{}]},"stakeL":{"rotate":[{}]}},"drawOrder":[{}]},"movement":{"slots":{"eye":{"attachment":[{"name":null}]},"eye2":{"attachment":[{"name":null}]},"light":{"attachment":[{"name":"light"},{"time":0.1667,"name":null},{"time":0.5,"name":null},{"time":0.6667,"name":"light"},{"time":1,"name":"light"}]},"light2":{"attachment":[{"time":0.1667,"name":null},{"time":0.5,"name":null},{"time":0.6667,"name":"light"}]},"mouth":{"attachment":[{"name":null}]}},"bones":{"chest":{"rotate":[{"angle":-6.82,"curve":0.25,"c3":0.625,"c4":0.5},{"time":0.5,"angle":5.46,"curve":0.25,"c3":0.75},{"time":1,"angle":-6.82}],"translate":[{"x":-5.86,"y":0.49,"curve":0.29,"c3":0.629,"c4":0.38},{"time":0.1667,"x":-16.97,"y":-1.59,"curve":0.311,"c2":0.25,"c3":0.649,"c4":0.6},{"time":0.3333,"x":-2.21,"y":-0.84,"curve":0.325,"c2":0.31,"c3":0.663,"c4":0.65},{"time":0.5,"x":0.34,"y":-0.43,"curve":0.265,"c3":0.618,"c4":0.43},{"time":0.6667,"x":-17.12,"y":0.94,"curve":0.325,"c2":0.31,"c3":0.675,"c4":0.69},{"time":0.8333,"x":-3.45,"y":-0.76,"curve":0.382,"c2":0.57,"c3":0.735},{"time":1,"x":-5.86,"y":0.49}],"scale":[{"y":0.992,"curve":0.302,"c3":0.638,"c4":0.36},{"time":0.2667,"x":1.099,"y":1.102,"curve":0.298,"c2":0.2,"c3":0.64,"c4":0.56},{"time":0.5,"y":1.051,"curve":0.265,"c3":0.618,"c4":0.43},{"time":0.7667,"x":1.138,"y":1.176,"curve":0.351,"c2":0.4,"c3":0.757},{"time":1,"y":0.992}],"shear":[{"x":-3.81,"y":2.91,"curve":0.25,"c3":0.75},{"time":0.5,"x":3.7,"y":-2.73,"curve":0.25,"c3":0.75},{"time":1,"x":-3.81,"y":2.91}]},"bone":{"rotate":[{"curve":"stepped"},{"time":1}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"torso":{"rotate":[{"angle":-0.49,"curve":"stepped"},{"time":1,"angle":-0.49}],"translate":[{"curve":0.25,"c3":0.544},{"time":0.2667,"x":0.03,"y":20.83,"curve":0.315,"c4":0.7},{"time":0.5,"curve":0.25,"c3":0.544},{"time":0.7667,"x":0.03,"y":20.83,"curve":0.315,"c4":0.7},{"time":1}],"scale":[{"curve":0.273,"c3":0.62,"c4":0.41},{"time":0.2667,"x":1.055,"curve":0.317,"c2":0.28,"c3":0.658,"c4":0.64},{"time":0.5,"curve":0.344,"c2":0.37,"c3":0.688,"c4":0.74},{"time":0.7667,"x":1.055,"curve":0.378,"c2":0.61,"c3":0.722},{"time":1}]},"torso1":{"rotate":[{"angle":0.13,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-0.69,"curve":0.25,"c3":0.75},{"time":1,"angle":0.13}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"torso2":{"rotate":[{"angle":0.13,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-0.69,"curve":0.25,"c3":0.75},{"time":1,"angle":0.13}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"torso3":{"rotate":[{"angle":0.13,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-0.69,"curve":0.25,"c3":0.75},{"time":1,"angle":0.13}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"torso4":{"rotate":[{"angle":0.13,"curve":0.25,"c3":0.75},{"time":0.5,"angle":-0.69,"curve":0.25,"c3":0.75},{"time":1,"angle":0.13}],"translate":[{"x":0.07,"y":-3.07,"curve":0.25,"c3":0.75},{"time":0.5,"x":0.03,"y":1.77,"curve":0.375,"c2":0.5,"c3":0.75},{"time":1,"x":0.07,"y":-3.07}],"scale":[{"curve":"stepped"},{"time":1}]},"torso5":{"rotate":[{"angle":0.13,"curve":0.25,"c3":0.75},{"time":0.5,"angle":1.52,"curve":0.25,"c3":0.75},{"time":1,"angle":0.13}],"translate":[{"x":0.05,"y":-2.69,"curve":0.25,"c3":0.625,"c4":0.5},{"time":0.5,"x":0.09,"y":2.08,"curve":0.375,"c2":0.5,"c3":0.75},{"time":1,"x":0.05,"y":-2.69}],"scale":[{"curve":"stepped"},{"time":1}]},"head":{"rotate":[{"angle":1.95,"curve":0.375,"c2":0.62,"c3":0.716},{"time":0.1,"angle":1.65,"curve":0.25,"c3":0.75},{"time":0.6,"angle":3.9,"curve":0.243,"c3":0.68,"c4":0.71},{"time":1,"angle":1.95}],"translate":[{"x":0.19,"y":-1.49,"curve":0.375,"c2":0.62,"c3":0.716},{"time":0.1,"x":0.11,"y":-2.17,"curve":0.25,"c3":0.75},{"time":0.3667,"x":0.38,"y":0.67,"curve":0.378,"c2":0.52,"c3":0.748},{"time":0.6,"x":-0.14,"y":2.7,"curve":0.248,"c3":0.628,"c4":0.52},{"time":0.8667,"x":0.4,"y":0.24,"curve":0.349,"c2":0.38,"c3":0.693,"c4":0.75},{"time":1,"x":0.19,"y":-1.49}],"scale":[{"curve":"stepped"},{"time":1}],"shear":[{"x":-1.46,"y":0.01},{"time":0.1,"x":-0.89},{"time":0.6,"x":-3.74,"y":0.04},{"time":1,"x":-1.46,"y":0.01}]},"glasses":{"rotate":[{"curve":"stepped"},{"time":1}],"translate":[{"curve":"stepped"},{"time":0.3,"curve":0,"c2":0.26,"c3":0.396,"c4":0.62},{"time":0.4,"x":7.89,"y":0.13,"curve":0.276,"c2":0.47,"c3":0.789},{"time":0.5,"curve":"stepped"},{"time":0.8,"curve":0.344,"c2":0.37,"c3":0.68,"c4":0.71},{"time":0.9,"x":7.89,"y":0.13,"curve":0.276,"c2":0.47,"c3":0.789},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"armR":{"rotate":[{"angle":28.65},{"time":0.5,"angle":-52.11},{"time":1,"angle":28.65}],"translate":[{"y":-38.48},{"time":0.5,"x":-2.8,"y":15.96},{"time":1,"y":-38.48}],"scale":[{"curve":"stepped"},{"time":1}]},"armR2":{"rotate":[{"angle":21.78},{"time":0.5,"angle":4.37,"curve":0.25,"c3":0.75},{"time":1,"angle":21.78}],"translate":[{"curve":"stepped"},{"time":0.5,"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":0.5,"curve":"stepped"},{"time":1}]},"armR3":{"rotate":[{"angle":21.78},{"time":0.5,"angle":4.37,"curve":0.25,"c3":0.75},{"time":1,"angle":21.78}],"translate":[{"curve":"stepped"},{"time":0.5,"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":0.5,"curve":"stepped"},{"time":1}]},"armR4":{"rotate":[{"angle":21.78},{"time":0.5,"angle":4.37,"curve":0.25,"c3":0.75},{"time":1,"angle":21.78}],"translate":[{"curve":"stepped"},{"time":0.5,"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":0.5,"curve":"stepped"},{"time":1}]},"armR5":{"rotate":[{"angle":21.78},{"time":0.5,"angle":4.37,"curve":0.25,"c3":0.75},{"time":1,"angle":21.78}],"translate":[{"curve":"stepped"},{"time":0.5,"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":0.5,"curve":"stepped"},{"time":1}]},"legR":{"translate":[{"x":-4.52,"y":5.44,"curve":0.265,"c2":0.43,"c3":0.586},{"time":0.1667,"x":11.96,"y":12.48,"curve":0.303,"c4":0.7},{"time":0.4,"x":36.44,"curve":0.538,"c3":0.619},{"time":0.9,"x":-17.25,"curve":0.3,"c3":0.627,"c4":0.44},{"time":1,"x":-4.52,"y":5.44}]},"legL":{"translate":[{"x":16.11,"curve":0.424,"c2":0.29,"c3":0.584},{"time":0.4,"x":-35.72,"curve":0.228,"c3":0.532},{"time":0.6667,"x":-5.73,"y":12.48,"curve":0.314,"c4":0.7},{"time":0.9,"x":19.4,"curve":0.392,"c3":0.718,"c4":0.38},{"time":1,"x":16.11}]},"armL":{"rotate":[{"angle":-34.39},{"time":0.5,"angle":28.9},{"time":1,"angle":-34.39}],"translate":[{"x":-2.18,"y":42.45},{"time":0.5,"x":-0.28,"y":5.54},{"time":1,"x":-2.18,"y":42.45}],"scale":[{"curve":"stepped"},{"time":1}]},"armL2":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.5,"angle":24.16},{"time":1,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"armL3":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.5,"angle":24.16},{"time":1,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"armL4":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.5,"angle":24.16},{"time":1,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"armL5":{"rotate":[{"angle":4.37,"curve":0.25,"c3":0.75},{"time":0.5,"angle":24.16},{"time":1,"angle":4.37}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"head1":{"rotate":[{"angle":-0.49,"curve":"stepped"},{"time":1,"angle":-0.49}],"translate":[{"x":0.01,"y":-0.38,"curve":0.25,"c3":0.75},{"time":0.5,"x":-0.03,"y":-0.38,"curve":0.375,"c2":0.5,"c3":0.75},{"time":1,"x":0.01,"y":-0.38}],"scale":[{"curve":"stepped"},{"time":1}]},"head2":{"rotate":[{"angle":-0.49,"curve":"stepped"},{"time":1,"angle":-0.49}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"head3":{"rotate":[{"angle":-0.46},{"time":0.5,"angle":-0.52},{"time":1,"angle":-0.46}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"head4":{"rotate":[{"angle":-0.46},{"time":0.5,"angle":-0.52},{"time":1,"angle":-0.46}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"legR2":{"rotate":[{"curve":"stepped"},{"time":1}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"legR3":{"rotate":[{"curve":"stepped"},{"time":1}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"legL2":{"rotate":[{"curve":"stepped"},{"time":1}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"legL3":{"rotate":[{"curve":"stepped"},{"time":1}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}]},"head5":{"rotate":[{"angle":-0.46},{"time":0.5,"angle":-0.52},{"time":1,"angle":-0.46}],"translate":[{"curve":"stepped"},{"time":1}],"scale":[{"curve":"stepped"},{"time":1}],"shear":[{},{"time":0.5,"x":4.53,"y":-1.63},{"time":1}]},"glare":{"translate":[{"y":97.47},{"time":0.1667,"y":146.21},{"time":0.5,"y":48.74},{"time":0.6667},{"time":1,"y":97.47}]},"shadow":{"translate":[{"x":15,"curve":0.25,"c3":0.75},{"time":0.5,"x":-15,"curve":0.25,"c3":0.75},{"time":1,"x":15}],"scale":[{"x":0.95,"y":0.95,"curve":0.25,"c3":0.75},{"time":0.2667,"x":1.1,"y":1.1,"curve":0.25,"c3":0.75},{"time":0.5,"x":0.95,"y":0.95,"curve":0.25,"c3":0.75},{"time":0.7667,"x":1.1,"y":1.1,"curve":0.25,"c3":0.75},{"time":1,"x":0.95,"y":0.95}]},"stakeL":{"rotate":[{"angle":15.5},{"time":0.5,"angle":-31.06},{"time":1,"angle":15.5}]},"stakeR":{"rotate":[{"angle":-31.06},{"time":0.5,"angle":15.5},{"time":1,"angle":-31.06}]}}}}},[0]]],0,0,[0],[-1],[21]],[[{"fmt":"0","w":0,"h":0}],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["e1NWmYqdpA8p/+iZjem8xN"]}],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0}],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,1","mipmaps":["e2uRISfu5MxLMoT+f2TEdu"]}],[2],0,[],[],[]],[[{"name":"white","rect":{"x":0,"y":0,"width":64,"height":64},"offset":{"x":0,"y":0},"originalSize":{"width":64,"height":64},"rotated":false,"capInsets":[0,0,0,0],"texture":"e2b91212-7eee-4cc4-b328-4fe7f64c476e@6c48a","packable":true}],[3],0,[0],[3],[22]],[[[79,[[80,"ShadowFlow",[[81,"ShadowStage"]]],[82,"ForwardFlow",1,[[83,"ForwardStage",[[84,["default"]],[85,true,1,["default"]]]]]]]]],0,0,[],[],[]]]]
