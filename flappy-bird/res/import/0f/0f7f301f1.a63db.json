[{"__type__":"cc.AudioClip","_name":"fly","_native":".mp3"},{"__type__":"cc.AudioClip","_name":"win","_native":".mp3"},{"__type__":"cc.Material","_name":"coin","_effectAsset":{"__uuid__":"82migssElAGb04Ws6NimQX"},"_techniqueIndex":1,"_techniqueData":{"0":{"defines":{},"props":{"mainTexture":{"__uuid__":"09bjgei+tGras5r86aRREC"}}}}},{"__type__":"cc.SpriteFrame","content":{"name":"default_btn_disabled","texture":"71VhFCTINJM6/Ky3oX9nBT","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}},[{"__type__":"cc.Prefab","_name":"background","data":{"__id__":1}},{"__type__":"cc.Node","_name":"background","_children":[{"__id__":2},{"__id__":3},{"__id__":8},{"__id__":19},{"__id__":24},{"__id__":29},{"__id__":32}],"_components":[{"__type__":"6e764ZUFgBH8ZpqG+AVELqN","node":{"__id__":1},"sky":{"__id__":2},"scrollables":[{"__id__":7},{"__id__":18},{"__id__":23},{"__id__":28},{"__id__":36}]}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"8cas84UmlJzrR3/B+f0jzA"},"_anchorPoint":{"__type__":"cc.Vec2","x":0.5},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"Sky","_parent":{"__id__":1},"_components":[{"__type__":"cc.Sprite","_name":"Sky<Sprite>","node":{"__id__":2},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"dc39115MlHC7NtgMPc8R9H"},"_sizeMode":0},{"__type__":"cc.Widget","node":{"__id__":2},"_alignFlags":8,"_horizontalCenter":501}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"16lCWoCndMULKpGGk54Dx7"},"_contentSize":{"__type__":"cc.Size","width":1002,"height":1334},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"CloudBig","_parent":{"__id__":1},"_children":[{"__id__":4},{"__id__":5},{"__id__":6}],"_components":[{"__id__":7},{"__type__":"cc.Widget","node":{"__id__":3},"_alignFlags":4,"_bottom":350}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"9ahKvbkLJMJLMNuAAWjuQz"},"_anchorPoint":{"__type__":"cc.Vec2","x":1,"y":1},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,350,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop01","_parent":{"__id__":3},"_components":[{"__type__":"cc.Sprite","_name":"loop01<Sprite>","node":{"__id__":4},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"a6VUgxP4pHW6o7OrLAnspQ"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"b3Mb2mPmVK/JGJxRlyl2h9"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop02","_parent":{"__id__":3},"_components":[{"__type__":"cc.Sprite","_name":"loop02<Sprite>","node":{"__id__":5},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"a6VUgxP4pHW6o7OrLAnspQ"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"b1AgsbF5RDB4km+4Q82IS0"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop03","_parent":{"__id__":3},"_components":[{"__type__":"cc.Sprite","_name":"loop03<Sprite>","node":{"__id__":6},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"a6VUgxP4pHW6o7OrLAnspQ"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"21fUN17/RB3q8x+Zy//D9m"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"57b7aKPTL1GaKtvIwp9ztlP","node":{"__id__":3},"sprites":[{"__id__":4},{"__id__":5},{"__id__":6}],"speed":4},{"__type__":"cc.Node","_name":"CloudSmall","_parent":{"__id__":1},"_children":[{"__id__":9},{"__id__":12},{"__id__":15}],"_components":[{"__id__":18},{"__type__":"cc.Widget","node":{"__id__":8},"_alignFlags":4,"_bottom":350}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"4fhjyxMNRDd5aaag3MCCVv"},"_anchorPoint":{"__type__":"cc.Vec2","x":1,"y":1},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,350,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop01","_parent":{"__id__":8},"_children":[{"__id__":10},{"__id__":11}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"e00GRaiUpBJYCAYeZ8P/Up"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":9},"_components":[{"__type__":"cc.Sprite","node":{"__id__":10},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"9b9WBL9mlJnJP4oM6rOQkJ"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"b45DvnzsRCFqNzOQQ+Jt9L"},"_contentSize":{"__type__":"cc.Size","width":220,"height":102},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[200,400,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":9},"_components":[{"__type__":"cc.Sprite","node":{"__id__":11},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"6b5NntrfFCt6lY5Vj5HFvE"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"5a+D5ZKTFNPKwhnuxyWPUb"},"_contentSize":{"__type__":"cc.Size","width":204,"height":101},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[400,700,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop02","_parent":{"__id__":8},"_children":[{"__id__":13},{"__id__":14}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"cbgRFzPAxE1Y+OLK506kfG"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":12},"_components":[{"__type__":"cc.Sprite","node":{"__id__":13},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"a4TFbpQVVEL6aF/wTIIhVM"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"b7mRqeJwlIQbPV4x+Xb2tI"},"_contentSize":{"__type__":"cc.Size","width":230,"height":117},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[500,350,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":12},"_components":[{"__type__":"cc.Sprite","node":{"__id__":14},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"6b5NntrfFCt6lY5Vj5HFvE"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"85ortsE15DQrE7d55xhOtc"},"_contentSize":{"__type__":"cc.Size","width":204,"height":101},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[300,650,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop03","_parent":{"__id__":8},"_children":[{"__id__":16},{"__id__":17}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"ab2NDAtB9EMYzO9oDsyk8R"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":15},"_components":[{"__type__":"cc.Sprite","node":{"__id__":16},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"9b9WBL9mlJnJP4oM6rOQkJ"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"d63CflVrZNSrwzBApwBzLG"},"_contentSize":{"__type__":"cc.Size","width":220,"height":102},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[200,700,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":15},"_components":[{"__type__":"cc.Sprite","node":{"__id__":17},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"a4TFbpQVVEL6aF/wTIIhVM"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"85Gec/BdBEopAve3owyool"},"_contentSize":{"__type__":"cc.Size","width":230,"height":117},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[500,400,0,0,0,0,1,1,1,1]}},{"__type__":"57b7aKPTL1GaKtvIwp9ztlP","node":{"__id__":8},"sprites":[{"__id__":9},{"__id__":12},{"__id__":15}],"speed":3.5},{"__type__":"cc.Node","_name":"TreeBg","_parent":{"__id__":1},"_children":[{"__id__":20},{"__id__":21},{"__id__":22}],"_components":[{"__id__":23},{"__type__":"cc.Widget","node":{"__id__":19},"_alignFlags":4,"_bottom":200}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"20HncUS3lDFJYuJ2n+EMGW"},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,200,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop01","_parent":{"__id__":19},"_components":[{"__type__":"cc.Sprite","node":{"__id__":20},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"7b2VP79w9Ks77JyQ2ldA0+"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"656QXxiTZIJbr4MWlnr/RJ"},"_contentSize":{"__type__":"cc.Size","width":750,"height":297},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop02","_parent":{"__id__":19},"_components":[{"__type__":"cc.Sprite","node":{"__id__":21},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"7b2VP79w9Ks77JyQ2ldA0+"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"45tb/mDltL1aDQB5S5ybG0"},"_contentSize":{"__type__":"cc.Size","width":750,"height":297},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop03","_parent":{"__id__":19},"_components":[{"__type__":"cc.Sprite","node":{"__id__":22},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"7b2VP79w9Ks77JyQ2ldA0+"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"21x3SieplEI4sIg8eKrpE4"},"_contentSize":{"__type__":"cc.Size","width":750,"height":297},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"57b7aKPTL1GaKtvIwp9ztlP","node":{"__id__":19},"sprites":[{"__id__":20},{"__id__":21},{"__id__":22}],"speed":3},{"__type__":"cc.Node","_name":"TreeFg","_parent":{"__id__":1},"_children":[{"__id__":25},{"__id__":26},{"__id__":27}],"_components":[{"__id__":28},{"__type__":"cc.Widget","node":{"__id__":24},"_alignFlags":4,"_bottom":150}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"fdggohQMFOFb7lsEWIPE92"},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,150,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop01","_parent":{"__id__":24},"_components":[{"__type__":"cc.Sprite","node":{"__id__":25},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"49CjlCneVE4LtUsYIPu17C"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"3aCKZADzFFt538MKI51DMK"},"_contentSize":{"__type__":"cc.Size","width":750,"height":312},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop02","_parent":{"__id__":24},"_components":[{"__type__":"cc.Sprite","node":{"__id__":26},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"49CjlCneVE4LtUsYIPu17C"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"3c7TSLUPJGFLK86fE7sGJz"},"_contentSize":{"__type__":"cc.Size","width":750,"height":312},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop03","_parent":{"__id__":24},"_components":[{"__type__":"cc.Sprite","node":{"__id__":27},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"49CjlCneVE4LtUsYIPu17C"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"76Ne/UabdGv6IlyUhqjAPy"},"_contentSize":{"__type__":"cc.Size","width":750,"height":312},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"57b7aKPTL1GaKtvIwp9ztlP","node":{"__id__":24},"sprites":[{"__id__":25},{"__id__":26},{"__id__":27}],"speed":2},{"__type__":"cc.Node","_name":"ObstacleMgr","_parent":{"__id__":1},"_children":[{"__id__":30}],"_components":[{"__type__":"5a109teWuRAaqJ6PNqCUGCq","node":{"__id__":29},"obstaclePrefab":{"__uuid__":"e2Aj4fzc1HJ5mgfXnxONQJ"},"collectibleMgr":{"__id__":31}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"51je2qDH5OobOwlP5k7cEw"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"CollectibleMgr","_parent":{"__id__":29},"_components":[{"__id__":31}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"25Usu4czJHxqD5MMh9amOV"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc4e1VIjdNCQZWkEeLAggyG","node":{"__id__":30},"collectiblePrefab":[{"__uuid__":"86/Gd0O4FMmZQn/wuHyg7B"},{"__uuid__":"ffJ8x9l2BLarmxw5vG1D5L"}]},{"__type__":"cc.Node","_name":"Ground","_parent":{"__id__":1},"_children":[{"__id__":33},{"__id__":34},{"__id__":35}],"_components":[{"__id__":36},{"__type__":"cc.Widget","node":{"__id__":32},"_alignFlags":4,"_bottom":-100}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"6fMLx0l4pEsKoysKgMpfQz"},"_anchorPoint":{"__type__":"cc.Vec2","x":1,"y":1},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,-100,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop01","_parent":{"__id__":32},"_components":[{"__type__":"cc.Sprite","_name":"loop01<Sprite>","node":{"__id__":33},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"76Y4oYsC1KvKvZLOZKiyFv"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"fd8UC9qcNFEZyWPoc3frkb"},"_contentSize":{"__type__":"cc.Size","width":750,"height":350},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop02","_parent":{"__id__":32},"_components":[{"__type__":"cc.Sprite","_name":"loop02<Sprite>","node":{"__id__":34},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"76Y4oYsC1KvKvZLOZKiyFv"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"d0MhaSUY9NjpD2u+6xVQr/"},"_contentSize":{"__type__":"cc.Size","width":750,"height":350},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop03","_parent":{"__id__":32},"_components":[{"__type__":"cc.Sprite","_name":"loop03<Sprite>","node":{"__id__":35},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"76Y4oYsC1KvKvZLOZKiyFv"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"1fKu6ak3dJ/55MH9mHlnbK"},"_contentSize":{"__type__":"cc.Size","width":750,"height":350},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"57b7aKPTL1GaKtvIwp9ztlP","node":{"__id__":32},"sprites":[{"__id__":33},{"__id__":34},{"__id__":35}]}],{"__type__":"cc.Material","_name":"confetti","_effectAsset":{"__uuid__":"82migssElAGb04Ws6NimQX"},"_techniqueIndex":1,"_techniqueData":{"0":{"props":{"mainTexture":{"__uuid__":"dbXl0MaUhPw5iGYFSQ1sJD"}},"defines":{}}}},{"__type__":"cc.SpriteFrame","content":{"name":"layer_tree_foreground","texture":"276nuh0kBD/oj9jW0O7/sL","rect":[0,0,750,312],"offset":[0,0],"originalSize":[750,312],"capInsets":[0,0,0,0]}},{"__type__":"cc.SpriteFrame","content":{"name":"cloud_002","texture":"89bXHIHOZNspZ52iyjcXkD","rect":[0,0,204,101],"offset":[0,0],"originalSize":[204,101],"capInsets":[0,0,0,0]}},{"__type__":"cc.SpriteFrame","content":{"name":"pepsi","texture":"5c0Ob7QO1C7bWh3OEXyrn5","rect":[0,0,113,135],"offset":[0,0],"originalSize":[113,135],"capInsets":[0,0,0,0]}},{"__type__":"cc.SpriteFrame","content":{"name":"ground","texture":"9bH7zt7hdOE6t/ySwZZRp2","rect":[0,0,750,350],"offset":[0,0],"originalSize":[750,350],"capInsets":[0,0,0,0]}},{"__type__":"cc.AudioClip","_name":"bgm","_native":".mp3"},{"__type__":"cc.SpriteFrame","content":{"name":"layer_tree_background","texture":"00oBim1h1AT6HtAb0ei3VV","rect":[0,0,750,297],"offset":[0,0],"originalSize":[750,297],"capInsets":[0,0,0,0]}},{"__type__":"cc.AudioClip","_name":"hit_obstacle","_native":".mp3"},{"__type__":"cc.EffectAsset","_name":"builtin-3d-particle","techniques":[{"name":"add","passes":[{"rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":770,"blendDst":1,"blendSrcAlpha":770,"blendDstAlpha":1}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":29},"mainTiling_Offset":{"value":[1,1,0,0],"type":16},"tintColor":{"value":[0.5,0.5,0.5,0.5],"inspector":{"type":"color"},"type":16}},"program":"builtin-3d-particle|particle-vs-legacy:lpvs_main|tinted-fs:add"}]},{"name":"alpha-blend","passes":[{"rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":770,"blendDst":771,"blendSrcAlpha":770,"blendDstAlpha":771}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":29},"mainTiling_Offset":{"value":[1,1,0,0],"type":16},"tintColor":{"value":[0.5,0.5,0.5,0.5],"inspector":{"type":"color"},"type":16}},"program":"builtin-3d-particle|particle-vs-legacy:lpvs_main|tinted-fs:add"}]},{"name":"add-multiply","passes":[{"rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":770,"blendDst":771,"blendSrcAlpha":770,"blendDstAlpha":771}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":29},"mainTiling_Offset":{"value":[1,1,0,0],"type":16},"tintColor":{"value":[0.5,0.5,0.5,0.5],"inspector":{"type":"color"},"type":16}},"program":"builtin-3d-particle|particle-vs-legacy:lpvs_main|tinted-fs:multiply"}]},{"name":"add-smooth","passes":[{"rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":770,"blendDst":771,"blendSrcAlpha":770,"blendDstAlpha":771}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":29},"mainTiling_Offset":{"value":[1,1,0,0],"type":16}},"program":"builtin-3d-particle|particle-vs-legacy:lpvs_main|no-tint-fs:addSmooth"}]},{"name":"premultiply-blend","passes":[{"rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":770,"blendDst":771,"blendSrcAlpha":770,"blendDstAlpha":771}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":29},"mainTiling_Offset":{"value":[1,1,0,0],"type":16}},"program":"builtin-3d-particle|particle-vs-legacy:lpvs_main|no-tint-fs:premultiplied"}]}],"shaders":[{"hash":1682193167,"glsl3":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n    return quat;\n}\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n    vec4 quat = vec4(0);\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n    return quat;\n}\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    float z = pos.z;\n    float x = pos.x;\n    float y = pos.y;\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\nuniform Constants{\n    vec4 mainTiling_Offset;\n    vec4 frameTile_velLenScale;\n    vec4 scale;\n};\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nout vec2 uv;\nout vec4 color;\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_USE_STRETCHED_BILLBOARD\n    in vec3 a_color1;\n#endif\n#if CC_USE_MESH\n    in vec3 a_texCoord3;\n    in vec3 a_normal;\n    in vec4 a_color1;\n#endif\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n    pos = cc_matViewProj * pos;\n    return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision highp float;\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nuniform FragConstants {\n  vec4 tintColor;\n};\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n  return CCFragOutput(col);\n}\nout vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"},"glsl1":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n    return quat;\n}\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n    vec4 quat = vec4(0);\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n    return quat;\n}\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    float z = pos.z;\n    float x = pos.x;\n    float y = pos.y;\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform mat4 cc_matView;\nuniform mat4 cc_matViewInv;\nuniform mat4 cc_matViewProj;\nuniform vec4 cc_cameraPos;\nuniform mat4 cc_matWorld;\nvarying vec2 uv;\nvarying vec4 color;\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_USE_STRETCHED_BILLBOARD\n    attribute vec3 a_color1;\n#endif\n#if CC_USE_MESH\n    attribute vec3 a_texCoord3;\n    attribute vec3 a_normal;\n    attribute vec4 a_color1;\n#endif\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n    pos = cc_matViewProj * pos;\n    return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision highp float;\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_STRETCHED_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_HORIZONTAL_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_VERTICAL_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_MESH","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]},{"name":"OUTPUT_TO_GAMMA","type":"boolean","defines":[]}],"blocks":[{"name":"Constants","members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1}],"defines":[],"binding":0},{"name":"FragConstants","members":[{"name":"tintColor","type":16,"count":1}],"defines":[],"binding":1}],"samplers":[{"name":"mainTexture","type":29,"count":1,"defines":[],"binding":30}],"record":null,"name":"builtin-3d-particle|particle-vs-legacy:lpvs_main|tinted-fs:add"},{"hash":1933642753,"glsl3":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n    return quat;\n}\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n    vec4 quat = vec4(0);\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n    return quat;\n}\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    float z = pos.z;\n    float x = pos.x;\n    float y = pos.y;\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\nuniform Constants{\n    vec4 mainTiling_Offset;\n    vec4 frameTile_velLenScale;\n    vec4 scale;\n};\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nout vec2 uv;\nout vec4 color;\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_USE_STRETCHED_BILLBOARD\n    in vec3 a_color1;\n#endif\n#if CC_USE_MESH\n    in vec3 a_texCoord3;\n    in vec3 a_normal;\n    in vec4 a_color1;\n#endif\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n    pos = cc_matViewProj * pos;\n    return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision highp float;\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nuniform FragConstants {\n  vec4 tintColor;\n};\nvec4 multiply () {\n  vec4 col;\n  vec4 texColor = texture(mainTexture, uv);\n  col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n  col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n  return CCFragOutput(col);\n}\nout vec4 cc_FragColor;\nvoid main() { cc_FragColor = multiply(); }"},"glsl1":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n    return quat;\n}\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n    vec4 quat = vec4(0);\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n    return quat;\n}\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    float z = pos.z;\n    float x = pos.x;\n    float y = pos.y;\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform mat4 cc_matView;\nuniform mat4 cc_matViewInv;\nuniform mat4 cc_matViewProj;\nuniform vec4 cc_cameraPos;\nuniform mat4 cc_matWorld;\nvarying vec2 uv;\nvarying vec4 color;\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_USE_STRETCHED_BILLBOARD\n    attribute vec3 a_color1;\n#endif\n#if CC_USE_MESH\n    attribute vec3 a_texCoord3;\n    attribute vec3 a_normal;\n    attribute vec4 a_color1;\n#endif\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n    pos = cc_matViewProj * pos;\n    return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision highp float;\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 multiply () {\n  vec4 col;\n  vec4 texColor = texture2D(mainTexture, uv);\n  col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n  col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = multiply(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_STRETCHED_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_HORIZONTAL_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_VERTICAL_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_MESH","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]},{"name":"OUTPUT_TO_GAMMA","type":"boolean","defines":[]}],"blocks":[{"name":"Constants","members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1}],"defines":[],"binding":0},{"name":"FragConstants","members":[{"name":"tintColor","type":16,"count":1}],"defines":[],"binding":1}],"samplers":[{"name":"mainTexture","type":29,"count":1,"defines":[],"binding":30}],"record":null,"name":"builtin-3d-particle|particle-vs-legacy:lpvs_main|tinted-fs:multiply"},{"hash":1851787849,"glsl3":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n    return quat;\n}\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n    vec4 quat = vec4(0);\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n    return quat;\n}\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    float z = pos.z;\n    float x = pos.x;\n    float y = pos.y;\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\nuniform Constants{\n    vec4 mainTiling_Offset;\n    vec4 frameTile_velLenScale;\n    vec4 scale;\n};\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nout vec2 uv;\nout vec4 color;\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_USE_STRETCHED_BILLBOARD\n    in vec3 a_color1;\n#endif\n#if CC_USE_MESH\n    in vec3 a_texCoord3;\n    in vec3 a_normal;\n    in vec4 a_color1;\n#endif\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n    pos = cc_matViewProj * pos;\n    return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision highp float;\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nvec4 addSmooth () {\n  vec4 col = color * texture(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\nout vec4 cc_FragColor;\nvoid main() { cc_FragColor = addSmooth(); }"},"glsl1":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n    return quat;\n}\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n    vec4 quat = vec4(0);\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n    return quat;\n}\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    float z = pos.z;\n    float x = pos.x;\n    float y = pos.y;\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform mat4 cc_matView;\nuniform mat4 cc_matViewInv;\nuniform mat4 cc_matViewProj;\nuniform vec4 cc_cameraPos;\nuniform mat4 cc_matWorld;\nvarying vec2 uv;\nvarying vec4 color;\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_USE_STRETCHED_BILLBOARD\n    attribute vec3 a_color1;\n#endif\n#if CC_USE_MESH\n    attribute vec3 a_texCoord3;\n    attribute vec3 a_normal;\n    attribute vec4 a_color1;\n#endif\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n    pos = cc_matViewProj * pos;\n    return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision highp float;\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nvec4 addSmooth () {\n  vec4 col = color * texture2D(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = addSmooth(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_STRETCHED_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_HORIZONTAL_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_VERTICAL_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_MESH","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]},{"name":"OUTPUT_TO_GAMMA","type":"boolean","defines":[]}],"blocks":[{"name":"Constants","members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1}],"defines":[],"binding":0}],"samplers":[{"name":"mainTexture","type":29,"count":1,"defines":[],"binding":30}],"record":null,"name":"builtin-3d-particle|particle-vs-legacy:lpvs_main|no-tint-fs:addSmooth"},{"hash":145387972,"glsl3":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n    return quat;\n}\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n    vec4 quat = vec4(0);\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n    return quat;\n}\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    float z = pos.z;\n    float x = pos.x;\n    float y = pos.y;\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\nuniform Constants{\n    vec4 mainTiling_Offset;\n    vec4 frameTile_velLenScale;\n    vec4 scale;\n};\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nout vec2 uv;\nout vec4 color;\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_USE_STRETCHED_BILLBOARD\n    in vec3 a_color1;\n#endif\n#if CC_USE_MESH\n    in vec3 a_texCoord3;\n    in vec3 a_normal;\n    in vec4 a_color1;\n#endif\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n    pos = cc_matViewProj * pos;\n    return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision highp float;\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nvec4 premultiplied () {\n  vec4 col = color * texture(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\nout vec4 cc_FragColor;\nvoid main() { cc_FragColor = premultiplied(); }"},"glsl1":{"vert":"\nprecision highp float;\nvec4 quaternionFromAxis(vec3 xAxis,vec3 yAxis,vec3 zAxis){\n    mat3 m = mat3(xAxis,yAxis,zAxis);\n    float trace = m[0][0] + m[1][1] + m[2][2];\n    vec4 quat;\n    if (trace > 0.) {\n        float s = 0.5 / sqrt(trace + 1.0);\n        quat.w = 0.25 / s;\n        quat.x = (m[2][1] - m[1][2]) * s;\n        quat.y = (m[0][2] - m[2][0]) * s;\n        quat.z = (m[1][0] - m[0][1]) * s;\n    } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n        float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n        quat.w = (m[2][1] - m[1][2]) / s;\n        quat.x = 0.25 * s;\n        quat.y = (m[0][1] + m[1][0]) / s;\n        quat.z = (m[0][2] + m[2][0]) / s;\n    } else if (m[1][1] > m[2][2]) {\n        float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n        quat.w = (m[0][2] - m[2][0]) / s;\n        quat.x = (m[0][1] + m[1][0]) / s;\n        quat.y = 0.25 * s;\n        quat.z = (m[1][2] + m[2][1]) / s;\n    } else {\n        float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n        quat.w = (m[1][0] - m[0][1]) / s;\n        quat.x = (m[0][2] + m[2][0]) / s;\n        quat.y = (m[1][2] + m[2][1]) / s;\n        quat.z = 0.25 * s;\n    }\n    float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n    if (len > 0.) {\n        len = 1. / sqrt(len);\n        quat.x = quat.x * len;\n        quat.y = quat.y * len;\n        quat.z = quat.z * len;\n        quat.w = quat.w * len;\n    }\n    return quat;\n}\nvec4 quaternionFromEuler(vec3 angle){\n    float x = angle.x / 2.;\n    float y = angle.y / 2.;\n    float z = angle.z / 2.;\n    float sx = sin(x);\n    float cx = cos(x);\n    float sy = sin(y);\n    float cy = cos(y);\n    float sz = sin(z);\n    float cz = cos(z);\n    vec4 quat = vec4(0);\n    quat.x = sx * cy * cz + cx * sy * sz;\n    quat.y = cx * sy * cz + sx * cy * sz;\n    quat.z = cx * cy * sz - sx * sy * cz;\n    quat.w = cx * cy * cz - sx * sy * sz;\n    return quat;\n}\nmat4 matrixFromRT(vec4 q, vec3 p){\n    float x2 = q.x + q.x;\n    float y2 = q.y + q.y;\n    float z2 = q.z + q.z;\n    float xx = q.x * x2;\n    float xy = q.x * y2;\n    float xz = q.x * z2;\n    float yy = q.y * y2;\n    float yz = q.y * z2;\n    float zz = q.z * z2;\n    float wx = q.w * x2;\n    float wy = q.w * y2;\n    float wz = q.w * z2;\n    return mat4(\n        1. - (yy + zz), xy + wz, xz - wy, 0,\n        xy - wz, 1. - (xx + zz), yz + wx, 0,\n        xz + wy, yz - wx, 1. - (xx + yy), 0,\n        p.x, p.y, p.z, 1\n    );\n}\nmat4 matFromRTS(vec4 q, vec3 t, vec3 s){\n    float x = q.x, y = q.y, z = q.z, w = q.w;\n    float x2 = x + x;\n    float y2 = y + y;\n    float z2 = z + z;\n    float xx = x * x2;\n    float xy = x * y2;\n    float xz = x * z2;\n    float yy = y * y2;\n    float yz = y * z2;\n    float zz = z * z2;\n    float wx = w * x2;\n    float wy = w * y2;\n    float wz = w * z2;\n    float sx = s.x;\n    float sy = s.y;\n    float sz = s.z;\n    return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n        (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n        (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n        t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply(vec4 a, vec4 b){\n    vec4 quat;\n    quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n    quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n    quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n    quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return quat;\n}\nvoid rotateVecFromQuat(inout vec3 v, vec4 q){\n    float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n    float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n    float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n    float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n    v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n    v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n    v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace(vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n    float z = pos.z;\n    float x = pos.x;\n    float y = pos.y;\n    vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n    vec4 rotQuat = quatMultiply(viewQuat, q);\n    rotateVecFromQuat(pos, rotQuat);\n    return pos;\n}\nvoid rotateCorner(inout vec2 corner, float angle){\n    float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n    float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n    corner.x = xOS;\n    corner.y = yOS;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform mat4 cc_matView;\nuniform mat4 cc_matViewInv;\nuniform mat4 cc_matViewProj;\nuniform vec4 cc_cameraPos;\nuniform mat4 cc_matWorld;\nvarying vec2 uv;\nvarying vec4 color;\nvoid computeVertPos(inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n    , mat4 viewInv\n#endif\n#if CC_USE_STRETCHED_BILLBOARD\n    , vec3 eye\n    , vec4 velocity\n    , float velocityScale\n    , float lengthScale\n    , float xIndex\n#endif\n) {\n#if CC_USE_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n    vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n    vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_USE_STRETCHED_BILLBOARD\n    vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n    vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n    pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_USE_HORIZONTAL_BILLBOARD\n    vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n    vec3 camX = vec3(1, 0, 0);\n    vec3 camY = vec3(0, 0, -1);\n    pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_USE_VERTICAL_BILLBOARD\n    vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n    rotateCorner(viewSpaceVert, q.z);\n    vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n    vec3 camY = vec3(0, 1, 0);\n    vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n    pos.xyz += offset;\n#else\n    pos.x += vertOffset.x;\n    pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV(float frameIndex, vec2 vertIndex, vec2 frameTile){\n    vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n    aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if !CC_USE_MESH\n    vertIndex.y = 1. - vertIndex.y;\n#endif\n    return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_USE_STRETCHED_BILLBOARD\n    attribute vec3 a_color1;\n#endif\n#if CC_USE_MESH\n    attribute vec3 a_texCoord3;\n    attribute vec3 a_normal;\n    attribute vec4 a_color1;\n#endif\nvec4 lpvs_main() {\n    vec3 compScale = scale.xyz * a_texCoord1;\n    vec4 pos = vec4(a_position, 1);\n#if CC_USE_STRETCHED_BILLBOARD\n    vec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_USE_STRETCHED_BILLBOARD\n        velocity = cc_matWorld * velocity;\n    #endif\n#endif\n#if !CC_USE_MESH\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_USE_BILLBOARD\n        vec3 rotEuler = a_texCoord2;\n    #elif CC_USE_STRETCHED_BILLBOARD\n        vec3 rotEuler = vec3(0.);\n    #else\n        vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_USE_BILLBOARD || CC_USE_VERTICAL_BILLBOARD\n        , cc_matViewInv\n    #endif\n    #if CC_USE_STRETCHED_BILLBOARD\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_texCoord.x\n    #endif\n    );\n    color = a_color;\n#else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n#endif\n    uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n    pos = cc_matViewProj * pos;\n    return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }","frag":"\nprecision highp float;\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nvec4 premultiplied () {\n  vec4 col = color * texture2D(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = premultiplied(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_STRETCHED_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_HORIZONTAL_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_VERTICAL_BILLBOARD","type":"boolean","defines":[]},{"name":"CC_USE_MESH","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]},{"name":"OUTPUT_TO_GAMMA","type":"boolean","defines":[]}],"blocks":[{"name":"Constants","members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1}],"defines":[],"binding":0}],"samplers":[{"name":"mainTexture","type":29,"count":1,"defines":[],"binding":30}],"record":null,"name":"builtin-3d-particle|particle-vs-legacy:lpvs_main|no-tint-fs:premultiplied"}]},[{"__type__":"cc.Prefab","_name":"coin","data":{"__id__":1}},{"__type__":"cc.Node","_name":"coin","_children":[{"__id__":2},{"__id__":3}],"_components":[{"__type__":"fa348NaP0ZPiLsfr/XupaJH","node":{"__id__":1}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"86/Gd0O4FMmZQn/wuHyg7B"},"fileId":"eczvoaWwRH2bBYwgcSC+Ox"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"Item","_parent":{"__id__":1},"_components":[{"__type__":"cc.Sprite","_name":"Item<Sprite>","node":{"__id__":2},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"f1fSV7MM1LOoZV7JgeXwym"},"_sizeMode":0},{"__type__":"cc.BoxCollider","node":{"__id__":2},"tag":1}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"86/Gd0O4FMmZQn/wuHyg7B"},"fileId":"ca5yujYEtM77p5Aw5d9uBj"},"_contentSize":{"__type__":"cc.Size","width":100,"height":100},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"pscoin","_parent":{"__id__":1},"_components":[{"__type__":"cc.ParticleSystem3D","node":{"__id__":3},"_materials":[{"__uuid__":"10FfNHHnNH6I2Li3kkdgTh"}],"_simulationSpace":0,"startDelay":{"__type__":"cc.CurveRange"},"startLifetime":{"__type__":"cc.CurveRange","mode":3,"constantMin":0.7,"constantMax":1.2},"startColor":{"__type__":"cc.GradientRange"},"startSize":{"__type__":"cc.CurveRange","constant":0.125},"startSpeed":{"__type__":"cc.CurveRange","constant":5},"startRotation":{"__type__":"cc.CurveRange","mode":3,"constantMax":360},"gravityModifier":{"__type__":"cc.CurveRange","constant":1},"rateOverTime":{"__type__":"cc.CurveRange"},"rateOverDistance":{"__type__":"cc.CurveRange"},"bursts":[{"__type__":"cc.Burst","minCount":10,"maxCount":10,"repeatInterval":0.01,"count":{"__type__":"cc.CurveRange","constant":10}}],"_shapeModule":{"__type__":"cc.ShapeModule","enable":true,"emitFrom":0,"radius":0.01,"_angle":0.24434609527920614,"arcSpeed":{"__type__":"cc.CurveRange"}},"_colorOverLifetimeModule":{"__type__":"cc.ColorOvertimeModule","enable":true,"color":{"__type__":"cc.GradientRange","_mode":1,"gradient":{"__type__":"cc.Gradient","colorKeys":[{"__type__":"cc.ColorKey"},{"__type__":"cc.ColorKey","time":1}],"alphaKeys":[{"__type__":"cc.AlphaKey","alpha":255},{"__type__":"cc.AlphaKey","alpha":255,"time":0.875},{"__type__":"cc.AlphaKey","alpha":0,"time":1}]}}},"_forceOvertimeModule":{"__type__":"cc.ForceOvertimeModule","enable":true,"x":{"__type__":"cc.CurveRange","mode":3,"constantMin":0.3,"constantMax":-0.3},"y":{"__type__":"cc.CurveRange","mode":3,"constantMin":0.3,"constantMax":-0.3},"z":{"__type__":"cc.CurveRange","mode":3,"constantMin":0.3,"constantMax":-0.3}},"_rotationOvertimeModule":{"__type__":"cc.RotationOvertimeModule","enable":true,"x":{"__type__":"cc.CurveRange"},"y":{"__type__":"cc.CurveRange"},"z":{"__type__":"cc.CurveRange","mode":3,"constantMax":45}},"_textureAnimationModule":{"__type__":"cc.TextureAnimationModule","_enable":true,"numTilesX":2,"numTilesY":2,"frameOverTime":{"__type__":"cc.CurveRange","mode":1,"curve":{"__type__":"cc.AnimationCurve","keyFrames":[{"__type__":"cc.Keyframe","inTangent":1,"outTangent":1},{"__type__":"cc.Keyframe","time":1,"value":1,"inTangent":1,"outTangent":1}]},"multiplier":4},"startFrame":{"__type__":"cc.CurveRange"},"cycleCount":7}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"86/Gd0O4FMmZQn/wuHyg7B"},"fileId":"efF/Im+FZK7bKoUJFdnOt5"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,100,100,100]},"_is3DNode":true}],{"__type__":"cc.SpriteFrame","content":{"name":"default_sprite","texture":"6eBWFz0oVHPLIGQKf/9Thu","rect":[0,2,40,36],"offset":[0,0],"originalSize":[40,40],"capInsets":[0,0,0,0]}},{"__type__":"cc.AudioClip","_name":"hit_pepcoin","_native":".mp3"},[{"__type__":"cc.Prefab","_name":"confetti","data":{"__id__":1}},{"__type__":"cc.Node","_name":"Confetti","_active":false,"_components":[{"__type__":"cc.ParticleSystem3D","node":{"__id__":1},"_materials":[{"__uuid__":"3chzopotVF7pId46JsyBm7"}],"_capacity":200,"startDelay":{"__type__":"cc.CurveRange"},"startLifetime":{"__type__":"cc.CurveRange","mode":3,"constantMin":3,"constantMax":8},"startColor":{"__type__":"cc.GradientRange"},"startSize":{"__type__":"cc.CurveRange","mode":3,"constantMin":0.1,"constantMax":0.2},"startSpeed":{"__type__":"cc.CurveRange","constant":-1},"startRotation":{"__type__":"cc.CurveRange","mode":3,"constantMax":360},"gravityModifier":{"__type__":"cc.CurveRange","constant":0.1},"rateOverTime":{"__type__":"cc.CurveRange","constant":50},"rateOverDistance":{"__type__":"cc.CurveRange"},"_shapeModule":{"__type__":"cc.ShapeModule","enable":true,"_shapeType":0,"arcSpeed":{"__type__":"cc.CurveRange"},"_scale":{"__type__":"cc.Vec3","x":4,"y":1,"z":0.2}},"_sizeOvertimeModule":{"__type__":"cc.SizeOvertimeModule","enable":true,"size":{"__type__":"cc.CurveRange","mode":1,"curve":{"__type__":"cc.AnimationCurve","keyFrames":[{"__type__":"cc.Keyframe","outTangent":8.87},{"__type__":"cc.Keyframe","time":0.25,"value":1},{"__type__":"cc.Keyframe","time":0.52,"value":1,"inTangent":-0.03,"outTangent":-0.03},{"__type__":"cc.Keyframe","time":1,"value":0.01,"inTangent":-3.35}]}},"x":{"__type__":"cc.CurveRange"},"y":{"__type__":"cc.CurveRange"},"z":{"__type__":"cc.CurveRange"}},"_limitVelocityOvertimeModule":{"__type__":"cc.LimitVelocityOvertimeModule","enable":true,"limit":{"__type__":"cc.CurveRange"},"limitX":{"__type__":"cc.CurveRange"},"limitY":{"__type__":"cc.CurveRange","constant":0.25},"limitZ":{"__type__":"cc.CurveRange"},"dampen":0.5},"_rotationOvertimeModule":{"__type__":"cc.RotationOvertimeModule","enable":true,"x":{"__type__":"cc.CurveRange"},"y":{"__type__":"cc.CurveRange"},"z":{"__type__":"cc.CurveRange","mode":3,"constantMin":10,"constantMax":25}},"_textureAnimationModule":{"__type__":"cc.TextureAnimationModule","_enable":true,"numTilesX":3,"numTilesY":3,"frameOverTime":{"__type__":"cc.CurveRange","mode":3,"constantMax":8},"startFrame":{"__type__":"cc.CurveRange"},"cycleCount":1}},{"__type__":"cc.Widget","node":{"__id__":1},"_alignFlags":1,"_top":-100}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__id__":0},"fileId":"53cVZKKVJFE4+VyA0IAe3i"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,767,0,0,0,0,1,200,200,200]}}],{"__type__":"cc.SpriteFrame","content":{"name":"cloud_001","texture":"d9z+aiJihEWbpClWoF3pSq","rect":[0,0,220,102],"offset":[0,0],"originalSize":[220,102],"capInsets":[0,0,0,0]}},{"__type__":"cc.SpriteFrame","content":{"name":"cloud_003","texture":"27VUMGAGxNYJYl0G9o4tX4","rect":[0,0,230,117],"offset":[0,0],"originalSize":[230,117],"capInsets":[0,0,0,0]}},{"__type__":"cc.SpriteFrame","content":{"name":"layer_cloud","texture":"66AHw3MeFFJrzIRyhL/D2I","rect":[0,0,750,400],"offset":[0,0],"originalSize":[750,400],"capInsets":[0,0,0,0]}},{"__type__":"cc.AudioClip","_name":"lose","_native":".mp3"},{"__type__":"cc.AudioClip","_name":"hit_skull","_native":".mp3"},{"__type__":"cc.SpriteFrame","content":{"name":"ground_deco_01","texture":"cfHhrY+ApHSKWB7yd88LU1","rect":[0,0,143,212],"offset":[0,0],"originalSize":[143,212],"capInsets":[0,0,0,0]}},{"__type__":"cc.SpriteFrame","content":{"name":"skull","texture":"06+MRi/jNLW5DoxIrQ1VTd","rect":[0,0,146,141],"offset":[0,0],"originalSize":[146,141],"capInsets":[0,0,0,0]}},[{"__type__":"cc.SceneAsset","_name":"main","scene":{"__id__":1},"asyncLoadAssets":null},{"__type__":"cc.Scene","_name":"New Node","_children":[{"__id__":2},{"__id__":73}],"_active":false,"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]},"autoReleaseAssets":false},{"__type__":"cc.Node","_name":"GameMgr","_parent":{"__id__":1},"_children":[{"__id__":3},{"__id__":49},{"__id__":62},{"__id__":69}],"_components":[{"__type__":"15fb3AUZERDaaRXtnJ70/ub","node":{"__id__":2},"viewMainMenu":{"__id__":71},"popupScore":{"__id__":82},"background":{"__id__":48},"flappy":{"__id__":61},"obstacleMgr":{"__id__":42},"audioBgm":{"__id__":68},"audioWin":{"__id__":64},"audioLose":{"__id__":66},"confetti":{"__id__":70}}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]},"_id":"101zKUk1dJmquXIAR66UhK"},{"__type__":"cc.Node","_name":"background","_parent":{"__id__":2},"_children":[{"__id__":4},{"__id__":5},{"__id__":10},{"__id__":21},{"__id__":26},{"__id__":31},{"__id__":39},{"__id__":43}],"_components":[{"__id__":48}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"8cas84UmlJzrR3/B+f0jzA"},"_anchorPoint":{"__type__":"cc.Vec2","x":0.5},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"Sky","_parent":{"__id__":3},"_components":[{"__type__":"cc.Sprite","_name":"Sky<Sprite>","node":{"__id__":4},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"dc39115MlHC7NtgMPc8R9H"},"_sizeMode":0},{"__type__":"cc.Widget","node":{"__id__":4},"_alignFlags":8,"_horizontalCenter":501}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"16lCWoCndMULKpGGk54Dx7"},"_contentSize":{"__type__":"cc.Size","width":1002,"height":1334},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"CloudBig","_parent":{"__id__":3},"_children":[{"__id__":6},{"__id__":7},{"__id__":8}],"_components":[{"__id__":9},{"__type__":"cc.Widget","node":{"__id__":5},"_alignFlags":4,"_bottom":350}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"9ahKvbkLJMJLMNuAAWjuQz"},"_anchorPoint":{"__type__":"cc.Vec2","x":1,"y":1},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,350,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop01","_parent":{"__id__":5},"_components":[{"__type__":"cc.Sprite","_name":"loop01<Sprite>","node":{"__id__":6},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"a6VUgxP4pHW6o7OrLAnspQ"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"b3Mb2mPmVK/JGJxRlyl2h9"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop02","_parent":{"__id__":5},"_components":[{"__type__":"cc.Sprite","_name":"loop02<Sprite>","node":{"__id__":7},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"a6VUgxP4pHW6o7OrLAnspQ"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"b1AgsbF5RDB4km+4Q82IS0"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop03","_parent":{"__id__":5},"_components":[{"__type__":"cc.Sprite","_name":"loop03<Sprite>","node":{"__id__":8},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"a6VUgxP4pHW6o7OrLAnspQ"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"21fUN17/RB3q8x+Zy//D9m"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"57b7aKPTL1GaKtvIwp9ztlP","node":{"__id__":5},"sprites":[{"__id__":6},{"__id__":7},{"__id__":8}],"speed":4},{"__type__":"cc.Node","_name":"CloudSmall","_parent":{"__id__":3},"_children":[{"__id__":11},{"__id__":14},{"__id__":17}],"_components":[{"__id__":20},{"__type__":"cc.Widget","node":{"__id__":10},"_alignFlags":4,"_bottom":350}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"4fhjyxMNRDd5aaag3MCCVv"},"_anchorPoint":{"__type__":"cc.Vec2","x":1,"y":1},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,350,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop01","_parent":{"__id__":10},"_children":[{"__id__":12},{"__id__":13}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"e00GRaiUpBJYCAYeZ8P/Up"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":11},"_components":[{"__type__":"cc.Sprite","node":{"__id__":12},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"9b9WBL9mlJnJP4oM6rOQkJ"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"b45DvnzsRCFqNzOQQ+Jt9L"},"_contentSize":{"__type__":"cc.Size","width":220,"height":102},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[200,400,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":11},"_components":[{"__type__":"cc.Sprite","node":{"__id__":13},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"6b5NntrfFCt6lY5Vj5HFvE"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"5a+D5ZKTFNPKwhnuxyWPUb"},"_contentSize":{"__type__":"cc.Size","width":204,"height":101},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[400,700,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop02","_parent":{"__id__":10},"_children":[{"__id__":15},{"__id__":16}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"cbgRFzPAxE1Y+OLK506kfG"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":14},"_components":[{"__type__":"cc.Sprite","node":{"__id__":15},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"a4TFbpQVVEL6aF/wTIIhVM"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"b7mRqeJwlIQbPV4x+Xb2tI"},"_contentSize":{"__type__":"cc.Size","width":230,"height":117},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[500,350,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":14},"_components":[{"__type__":"cc.Sprite","node":{"__id__":16},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"6b5NntrfFCt6lY5Vj5HFvE"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"85ortsE15DQrE7d55xhOtc"},"_contentSize":{"__type__":"cc.Size","width":204,"height":101},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[300,650,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop03","_parent":{"__id__":10},"_children":[{"__id__":18},{"__id__":19}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"ab2NDAtB9EMYzO9oDsyk8R"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":17},"_components":[{"__type__":"cc.Sprite","node":{"__id__":18},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"9b9WBL9mlJnJP4oM6rOQkJ"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"d63CflVrZNSrwzBApwBzLG"},"_contentSize":{"__type__":"cc.Size","width":220,"height":102},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[200,700,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"cloud","_parent":{"__id__":17},"_components":[{"__type__":"cc.Sprite","node":{"__id__":19},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"a4TFbpQVVEL6aF/wTIIhVM"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"85Gec/BdBEopAve3owyool"},"_contentSize":{"__type__":"cc.Size","width":230,"height":117},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[500,400,0,0,0,0,1,1,1,1]}},{"__type__":"57b7aKPTL1GaKtvIwp9ztlP","node":{"__id__":10},"sprites":[{"__id__":11},{"__id__":14},{"__id__":17}],"speed":3.5},{"__type__":"cc.Node","_name":"TreeBg","_parent":{"__id__":3},"_children":[{"__id__":22},{"__id__":23},{"__id__":24}],"_components":[{"__id__":25},{"__type__":"cc.Widget","node":{"__id__":21},"_alignFlags":4,"_bottom":200}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"20HncUS3lDFJYuJ2n+EMGW"},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,200,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop01","_parent":{"__id__":21},"_components":[{"__type__":"cc.Sprite","node":{"__id__":22},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"7b2VP79w9Ks77JyQ2ldA0+"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"656QXxiTZIJbr4MWlnr/RJ"},"_contentSize":{"__type__":"cc.Size","width":750,"height":297},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop02","_parent":{"__id__":21},"_components":[{"__type__":"cc.Sprite","node":{"__id__":23},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"7b2VP79w9Ks77JyQ2ldA0+"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"45tb/mDltL1aDQB5S5ybG0"},"_contentSize":{"__type__":"cc.Size","width":750,"height":297},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop03","_parent":{"__id__":21},"_components":[{"__type__":"cc.Sprite","node":{"__id__":24},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"7b2VP79w9Ks77JyQ2ldA0+"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"21x3SieplEI4sIg8eKrpE4"},"_contentSize":{"__type__":"cc.Size","width":750,"height":297},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"57b7aKPTL1GaKtvIwp9ztlP","node":{"__id__":21},"sprites":[{"__id__":22},{"__id__":23},{"__id__":24}],"speed":3},{"__type__":"cc.Node","_name":"TreeFg","_parent":{"__id__":3},"_children":[{"__id__":27},{"__id__":28},{"__id__":29}],"_components":[{"__id__":30},{"__type__":"cc.Widget","node":{"__id__":26},"_alignFlags":4,"_bottom":150}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"fdggohQMFOFb7lsEWIPE92"},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,150,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop01","_parent":{"__id__":26},"_components":[{"__type__":"cc.Sprite","node":{"__id__":27},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"49CjlCneVE4LtUsYIPu17C"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"3aCKZADzFFt538MKI51DMK"},"_contentSize":{"__type__":"cc.Size","width":750,"height":312},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop02","_parent":{"__id__":26},"_components":[{"__type__":"cc.Sprite","node":{"__id__":28},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"49CjlCneVE4LtUsYIPu17C"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"3c7TSLUPJGFLK86fE7sGJz"},"_contentSize":{"__type__":"cc.Size","width":750,"height":312},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop03","_parent":{"__id__":26},"_components":[{"__type__":"cc.Sprite","node":{"__id__":29},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"49CjlCneVE4LtUsYIPu17C"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"76Ne/UabdGv6IlyUhqjAPy"},"_contentSize":{"__type__":"cc.Size","width":750,"height":312},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"57b7aKPTL1GaKtvIwp9ztlP","node":{"__id__":26},"sprites":[{"__id__":27},{"__id__":28},{"__id__":29}],"speed":2},{"__type__":"cc.Node","_name":"Decoration","_parent":{"__id__":3},"_children":[{"__id__":32},{"__id__":34},{"__id__":36}],"_components":[{"__id__":38},{"__type__":"cc.Widget","node":{"__id__":31},"_alignFlags":4,"_bottom":330}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"8c12E/CxVE1r1FBn3hghxE"},"_anchorPoint":{"__type__":"cc.Vec2","x":1,"y":1},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,330,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop01","_parent":{"__id__":31},"_children":[{"__id__":33}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"02fr2FQNhGXb8vC4CBwyMt"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"deco","_parent":{"__id__":32},"_components":[{"__type__":"cc.Sprite","node":{"__id__":33},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"caEzQY+Y5Ga6jzOUZCRfl5"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"d6Yy3HwJ5LB5foNGO6f9/B"},"_contentSize":{"__type__":"cc.Size","width":143,"height":212},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[350,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop02","_parent":{"__id__":31},"_children":[{"__id__":35}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"d706ULXSJO6IorrSh7wwaJ"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"deco","_parent":{"__id__":34},"_components":[{"__type__":"cc.Sprite","node":{"__id__":35},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"e7FwPDumFPT7vwHDi05EaK"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"ecsqfX+q1I1KCc9SBJzR7+"},"_contentSize":{"__type__":"cc.Size","width":97,"height":134},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[350,-40,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop03","_parent":{"__id__":31},"_children":[{"__id__":37}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"899IO+Eo9JD7FC6CEPEgNp"},"_contentSize":{"__type__":"cc.Size","width":750,"height":400},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"deco","_parent":{"__id__":36},"_components":[{"__type__":"cc.Sprite","node":{"__id__":37},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"caEzQY+Y5Ga6jzOUZCRfl5"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"dcHZdFcGRNGqX6DKGZd/OJ"},"_contentSize":{"__type__":"cc.Size","width":143,"height":212},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[350,0,0,0,0,0,1,1,1,1]}},{"__type__":"57b7aKPTL1GaKtvIwp9ztlP","node":{"__id__":31},"sprites":[{"__id__":32},{"__id__":34},{"__id__":36}],"speed":0.5},{"__type__":"cc.Node","_name":"ObstacleMgr","_parent":{"__id__":3},"_children":[{"__id__":40}],"_components":[{"__id__":42}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"51je2qDH5OobOwlP5k7cEw"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"CollectibleMgr","_parent":{"__id__":39},"_components":[{"__id__":41}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"25Usu4czJHxqD5MMh9amOV"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc4e1VIjdNCQZWkEeLAggyG","node":{"__id__":40},"collectiblePrefab":[{"__uuid__":"86/Gd0O4FMmZQn/wuHyg7B"},{"__uuid__":"ffJ8x9l2BLarmxw5vG1D5L"}]},{"__type__":"5a109teWuRAaqJ6PNqCUGCq","node":{"__id__":39},"obstaclePrefab":{"__uuid__":"e2Aj4fzc1HJ5mgfXnxONQJ"},"collectibleMgr":{"__id__":41}},{"__type__":"cc.Node","_name":"Ground","_parent":{"__id__":3},"_children":[{"__id__":44},{"__id__":45},{"__id__":46}],"_components":[{"__id__":47},{"__type__":"cc.Widget","node":{"__id__":43},"_alignFlags":4,"_bottom":-100}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"6fMLx0l4pEsKoysKgMpfQz"},"_anchorPoint":{"__type__":"cc.Vec2","x":1,"y":1},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,-100,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop01","_parent":{"__id__":43},"_components":[{"__type__":"cc.Sprite","_name":"loop01<Sprite>","node":{"__id__":44},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"76Y4oYsC1KvKvZLOZKiyFv"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"fd8UC9qcNFEZyWPoc3frkb"},"_contentSize":{"__type__":"cc.Size","width":750,"height":350},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop02","_parent":{"__id__":43},"_components":[{"__type__":"cc.Sprite","_name":"loop02<Sprite>","node":{"__id__":45},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"76Y4oYsC1KvKvZLOZKiyFv"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"d0MhaSUY9NjpD2u+6xVQr/"},"_contentSize":{"__type__":"cc.Size","width":750,"height":350},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"loop03","_parent":{"__id__":43},"_components":[{"__type__":"cc.Sprite","_name":"loop03<Sprite>","node":{"__id__":46},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"76Y4oYsC1KvKvZLOZKiyFv"}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":3},"asset":{"__uuid__":"3722+BQoxEcqpka/X4vw/M"},"fileId":"1fKu6ak3dJ/55MH9mHlnbK"},"_contentSize":{"__type__":"cc.Size","width":750,"height":350},"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"57b7aKPTL1GaKtvIwp9ztlP","node":{"__id__":43},"sprites":[{"__id__":44},{"__id__":45},{"__id__":46}]},{"__type__":"6e764ZUFgBH8ZpqG+AVELqN","node":{"__id__":3},"sky":{"__id__":4},"scrollables":[{"__id__":9},{"__id__":20},{"__id__":25},{"__id__":30},{"__id__":38},{"__id__":47}]},{"__type__":"cc.Node","_name":"Flappy","_parent":{"__id__":2},"_children":[{"__id__":50},{"__id__":51}],"_components":[{"__id__":60},{"__id__":61},{"__type__":"cc.BoxCollider","node":{"__id__":49},"_size":{"__type__":"cc.Size","width":130,"height":50}}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[375,667,-0.000002025673495609226,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"Sprite","_parent":{"__id__":49},"_components":[{"__type__":"cc.Sprite","node":{"__id__":50},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"73qo/SA8BPCJdiP5Im37cv"},"_sizeMode":0}],"_contentSize":{"__type__":"cc.Size","width":113,"height":135},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1.2,1.2,1]}},{"__type__":"cc.Node","_name":"Audios","_parent":{"__id__":49},"_children":[{"__id__":52},{"__id__":54},{"__id__":56},{"__id__":58}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"Fly","_parent":{"__id__":51},"_components":[{"__id__":53}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.AudioSource","node":{"__id__":52},"_clip":{"__uuid__":"021ImwNy9KCLum8qyz/3Pq"},"_volume":0.1,"preload":true},{"__type__":"cc.Node","_name":"HitObstacle","_parent":{"__id__":51},"_components":[{"__id__":55}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.AudioSource","node":{"__id__":54},"_clip":{"__uuid__":"7eLVLR2/ROe40Mroge0LOg"},"preload":true},{"__type__":"cc.Node","_name":"HitPepcoin","_parent":{"__id__":51},"_components":[{"__id__":57}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.AudioSource","node":{"__id__":56},"_clip":{"__uuid__":"90zeRVl7xJTal/c+TcADwf"},"preload":true},{"__type__":"cc.Node","_name":"HitSkull","_parent":{"__id__":51},"_components":[{"__id__":59}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.AudioSource","node":{"__id__":58},"_clip":{"__uuid__":"b9tl1TwKhOV6lQ9PfcUR9Q"}},{"__type__":"cc.RigidBody","node":{"__id__":49},"_gravityScale":5},{"__type__":"d652cNzqgJBcZvh21QthUXO","node":{"__id__":49},"rigidbody":{"__id__":60},"audioFly":{"__id__":53},"audioHitObstacle":{"__id__":55},"audioHitPepcoin":{"__id__":57},"audioHitSkull":{"__id__":59}},{"__type__":"cc.Node","_name":"Audios","_parent":{"__id__":2},"_children":[{"__id__":63},{"__id__":65},{"__id__":67}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"Win","_parent":{"__id__":62},"_components":[{"__id__":64}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.AudioSource","node":{"__id__":63},"_clip":{"__uuid__":"04DfaaTNpIYYVYcG7pZNyi"},"preload":true},{"__type__":"cc.Node","_name":"Lose","_parent":{"__id__":62},"_components":[{"__id__":66}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.AudioSource","node":{"__id__":65},"_clip":{"__uuid__":"b1Mp9MWtdMTaMG8YLfpyqm"},"preload":true},{"__type__":"cc.Node","_name":"Bgm","_parent":{"__id__":62},"_components":[{"__id__":68}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.AudioSource","node":{"__id__":67},"_clip":{"__uuid__":"79IZsxA2pCmJpgErryG0TB"},"_loop":true,"preload":true},{"__type__":"cc.Node","_name":"Confetti","_parent":{"__id__":2},"_active":false,"_components":[{"__id__":70}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":69},"asset":{"__uuid__":"9aOOwpuMRAcJlS3xbiZPKQ"},"fileId":"53cVZKKVJFE4+VyA0IAe3i"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[375,1400,0,0,0,0,1,200,200,200]}},{"__type__":"cc.ParticleSystem3D","node":{"__id__":69},"_materials":[{"__uuid__":"3chzopotVF7pId46JsyBm7"}],"_capacity":200,"startDelay":{"__type__":"cc.CurveRange"},"startLifetime":{"__type__":"cc.CurveRange","mode":3,"constantMin":3,"constantMax":8},"startColor":{"__type__":"cc.GradientRange"},"startSize":{"__type__":"cc.CurveRange","mode":3,"constantMin":0.1,"constantMax":0.2},"startSpeed":{"__type__":"cc.CurveRange","constant":-1},"startRotation":{"__type__":"cc.CurveRange","mode":3,"constantMax":360},"gravityModifier":{"__type__":"cc.CurveRange","constant":0.1},"rateOverTime":{"__type__":"cc.CurveRange","constant":50},"rateOverDistance":{"__type__":"cc.CurveRange"},"_shapeModule":{"__type__":"cc.ShapeModule","enable":true,"_shapeType":0,"arcSpeed":{"__type__":"cc.CurveRange"},"_scale":{"__type__":"cc.Vec3","x":4,"y":1,"z":0.2}},"_sizeOvertimeModule":{"__type__":"cc.SizeOvertimeModule","enable":true,"size":{"__type__":"cc.CurveRange","mode":1,"curve":{"__type__":"cc.AnimationCurve","keyFrames":[{"__type__":"cc.Keyframe","outTangent":8.87},{"__type__":"cc.Keyframe","time":0.25,"value":1},{"__type__":"cc.Keyframe","time":0.52,"value":1,"inTangent":-0.03,"outTangent":-0.03},{"__type__":"cc.Keyframe","time":1,"value":0.01,"inTangent":-3.35}]}},"x":{"__type__":"cc.CurveRange"},"y":{"__type__":"cc.CurveRange"},"z":{"__type__":"cc.CurveRange"}},"_limitVelocityOvertimeModule":{"__type__":"cc.LimitVelocityOvertimeModule","enable":true,"limit":{"__type__":"cc.CurveRange"},"limitX":{"__type__":"cc.CurveRange"},"limitY":{"__type__":"cc.CurveRange","constant":0.25},"limitZ":{"__type__":"cc.CurveRange"},"dampen":0.5},"_rotationOvertimeModule":{"__type__":"cc.RotationOvertimeModule","enable":true,"x":{"__type__":"cc.CurveRange"},"y":{"__type__":"cc.CurveRange"},"z":{"__type__":"cc.CurveRange","mode":3,"constantMin":10,"constantMax":25}},"_textureAnimationModule":{"__type__":"cc.TextureAnimationModule","_enable":true,"numTilesX":3,"numTilesY":3,"frameOverTime":{"__type__":"cc.CurveRange","mode":3,"constantMax":8},"startFrame":{"__type__":"cc.CurveRange"},"cycleCount":1}},{"__type__":"351efv7WZBKH6uOJ8Wks8g4","node":{"__id__":72},"logo":{"__id__":83},"play":{"__id__":85}},{"__type__":"cc.Node","_name":"MainMenu","_parent":{"__id__":73},"_children":[{"__id__":83},{"__id__":84}],"_components":[{"__id__":71},{"__type__":"cc.Widget","node":{"__id__":72},"_alignFlags":45}],"_contentSize":{"__type__":"cc.Size","width":750,"height":1334},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]},"_groupIndex":1,"groupIndex":1},{"__type__":"cc.Node","_name":"Canvas","_objFlags":512,"_parent":{"__id__":1},"_children":[{"__id__":74},{"__id__":75},{"__id__":72},{"__type__":"cc.Node","_name":"Ingame","_parent":{"__id__":73},"_active":false,"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__id__":76}],"_components":[{"__type__":"cc.Canvas","node":{"__id__":73},"_designResolution":{"__type__":"cc.Size","width":750,"height":1334}},{"__type__":"cc.Widget","node":{"__id__":73},"_alignFlags":45},{"__type__":"86a1eETgqhC7LCRoYW35gpp","node":{"__id__":73}}],"_contentSize":{"__type__":"cc.Size","width":750,"height":1334},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[375,667,0,0,0,0,1,1,1,1]},"_groupIndex":1,"groupIndex":1,"_id":"68VjkoLFpP/qYCGj7WWIL3"},{"__type__":"cc.Node","_name":"Main Camera","_parent":{"__id__":73},"_components":[{"__type__":"cc.Camera","node":{"__id__":74},"_cullingMask":1,"_clearFlags":7}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,503.88204758117433,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"UI Camera","_parent":{"__id__":73},"_components":[{"__type__":"cc.Camera","node":{"__id__":75},"_cullingMask":2,"_nearClip":0.1}],"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,503.88204758117433,0,0,0,1,1,1,1]},"_groupIndex":1,"groupIndex":1},{"__type__":"cc.Node","_name":"PopupScore","_parent":{"__id__":73},"_children":[{"__id__":77},{"__id__":78},{"__id__":79}],"_active":false,"_components":[{"__type__":"cc.Widget","node":{"__id__":76},"_alignFlags":45,"_top":300,"_bottom":300},{"__id__":82}],"_contentSize":{"__type__":"cc.Size","width":750,"height":734},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]},"_groupIndex":1,"groupIndex":1},{"__type__":"cc.Node","_name":"Bg","_parent":{"__id__":76},"_components":[{"__type__":"cc.Sprite","node":{"__id__":77},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"8c20Sso/ZEn7NUfNSM+EBh"},"_sizeMode":0}],"_contentSize":{"__type__":"cc.Size","width":750,"height":750},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]},"_groupIndex":1,"groupIndex":1},{"__type__":"cc.Node","_name":"Title","_parent":{"__id__":76},"_components":[{"__type__":"cc.Label","node":{"__id__":78},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_useOriginalSize":false,"_string":"YOU LOSE","_N$string":"YOU LOSE","_fontSize":60,"_N$horizontalAlign":1,"_N$verticalAlign":1}],"_color":{"__type__":"cc.Color"},"_contentSize":{"__type__":"cc.Size","width":306.77,"height":50.4},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,241.8,0,0,0,0,1,1,1,1]},"_groupIndex":1,"groupIndex":1},{"__type__":"cc.Node","_name":"ButtonOK","_parent":{"__id__":76},"_children":[{"__id__":80}],"_components":[{"__type__":"cc.Button","node":{"__id__":79},"_normalMaterial":{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"},"clickEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":2},"_componentId":"15fb3AUZERDaaRXtnJ70/ub","handler":"ScoreClose"}],"_N$transition":2,"transition":2,"_N$normalColor":{"__type__":"cc.Color","r":230,"g":230,"b":230},"_N$pressedColor":{"__type__":"cc.Color","r":200,"g":200,"b":200},"pressedColor":{"__type__":"cc.Color","r":200,"g":200,"b":200},"_N$disabledColor":{"__type__":"cc.Color","r":120,"g":120,"b":120,"a":200},"_N$normalSprite":{"__uuid__":"f0BIwQ8D5Ml7nTNQbh1YlS"},"_N$pressedSprite":{"__uuid__":"e97GVMl6JHh5Ml5qEDdSGa"},"pressedSprite":{"__uuid__":"e97GVMl6JHh5Ml5qEDdSGa"},"_N$hoverSprite":{"__uuid__":"f0BIwQ8D5Ml7nTNQbh1YlS"},"hoverSprite":{"__uuid__":"f0BIwQ8D5Ml7nTNQbh1YlS"},"_N$disabledSprite":{"__uuid__":"29FYIk+N1GYaeWH/q1NxQO"},"_N$target":{"__id__":80}}],"_contentSize":{"__type__":"cc.Size","width":200,"height":100},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,-200,0,0,0,0,1,1,1,1]},"_groupIndex":1,"groupIndex":1},{"__type__":"cc.Node","_name":"Background","_objFlags":512,"_parent":{"__id__":79},"_children":[{"__id__":81}],"_components":[{"__type__":"cc.Sprite","node":{"__id__":80},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"f0BIwQ8D5Ml7nTNQbh1YlS"},"_type":1,"_sizeMode":0},{"__type__":"cc.Widget","node":{"__id__":80},"alignMode":0,"_alignFlags":45,"_originalWidth":100,"_originalHeight":40}],"_contentSize":{"__type__":"cc.Size","width":200,"height":100},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]},"_groupIndex":1,"groupIndex":1},{"__type__":"cc.Node","_name":"Label","_objFlags":512,"_parent":{"__id__":80},"_components":[{"__type__":"cc.Label","node":{"__id__":81},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_useOriginalSize":false,"_string":"button","_N$string":"button","_fontSize":20,"_enableWrapText":false,"_N$horizontalAlign":1,"_N$verticalAlign":1,"_N$overflow":1,"_N$cacheMode":1}],"_color":{"__type__":"cc.Color"},"_contentSize":{"__type__":"cc.Size","width":100,"height":40},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]},"_groupIndex":1,"groupIndex":1},{"__type__":"4b8dbx0F+1EK4gLUoDKA4c0","node":{"__id__":76}},{"__type__":"cc.Node","_name":"Logo","_parent":{"__id__":72},"_components":[{"__type__":"cc.Sprite","node":{"__id__":83},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"8c20Sso/ZEn7NUfNSM+EBh"},"_sizeMode":0}],"_contentSize":{"__type__":"cc.Size","width":300,"height":100},"_anchorPoint":{"__type__":"cc.Vec2","x":0.5},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,500,0,0,0,0,1,1,1,1]},"_groupIndex":1,"groupIndex":1},{"__type__":"cc.Node","_name":"Play","_parent":{"__id__":72},"_components":[{"__id__":85}],"_contentSize":{"__type__":"cc.Size","width":318.92,"height":50.4},"_anchorPoint":{"__type__":"cc.Vec2","x":0.5,"y":1},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,-350,0,0,0,0,1,1,1,1]},"_groupIndex":1,"groupIndex":1},{"__type__":"cc.Label","node":{"__id__":84},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_useOriginalSize":false,"_string":"Nhấn để chơi","_N$string":"Nhấn để chơi","_fontSize":50,"_styleFlags":1,"_N$horizontalAlign":1,"_N$verticalAlign":1}],{"__type__":"cc.SpriteFrame","content":{"name":"bg","texture":"62OTrlyONMpIndr7Z4nL0u","rect":[0,0,28,1334],"offset":[0,0],"originalSize":[28,1334],"capInsets":[0,0,0,0]}},{"__type__":"cc.SpriteFrame","content":{"name":"tube","texture":"22c4qx9gxArZ6LJC3Tipw2","rect":[0,0,159,800],"offset":[0,0],"originalSize":[159,800],"capInsets":[0,0,0,0]}},[{"__type__":"cc.Prefab","_name":"obstacle","data":{"__id__":1}},{"__type__":"cc.Node","_name":"obstacle","_children":[{"__id__":2},{"__id__":3}],"_components":[{"__type__":"f985auzOcBFAYUlYmhjhVPr","node":{"__id__":1},"top":{"__id__":2},"bottom":{"__id__":3}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"e2Aj4fzc1HJ5mgfXnxONQJ"},"fileId":"49RS7bZ19AV6rLNHCPUTV3"},"_contentSize":{"__type__":"cc.Size","width":100,"height":100},"_anchorPoint":{"__type__":"cc.Vec2","x":0.5},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"top","_parent":{"__id__":1},"_components":[{"__type__":"cc.Sprite","node":{"__id__":2},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"e0mXqYHCJN6ryM4BLdyJFt"}},{"__type__":"cc.BoxCollider","node":{"__id__":2},"_offset":{"__type__":"cc.Vec2","y":-400},"_size":{"__type__":"cc.Size","width":130,"height":800}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"e2Aj4fzc1HJ5mgfXnxONQJ"},"fileId":"510hsiOpVJII9cz1anPD5k"},"_contentSize":{"__type__":"cc.Size","width":159,"height":800},"_anchorPoint":{"__type__":"cc.Vec2","x":0.5,"y":1},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,1334,0,0,0,1,6.123233995736766e-17,-1,1,1]},"_eulerAngles":{"__type__":"cc.Vec3","z":180}},{"__type__":"cc.Node","_name":"bottom","_parent":{"__id__":1},"_components":[{"__type__":"cc.Sprite","node":{"__id__":3},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"e0mXqYHCJN6ryM4BLdyJFt"}},{"__type__":"cc.BoxCollider","node":{"__id__":3},"_offset":{"__type__":"cc.Vec2","y":-400},"_size":{"__type__":"cc.Size","width":130,"height":800}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"e2Aj4fzc1HJ5mgfXnxONQJ"},"fileId":"4ciqtesJNPX6qr146Jy3dk"},"_contentSize":{"__type__":"cc.Size","width":159,"height":800},"_anchorPoint":{"__type__":"cc.Vec2","x":0.5,"y":1},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}}],{"__type__":"cc.SpriteFrame","content":{"name":"ground_deco_02","texture":"1dM2xo1c9GGLYh1vHuUbob","rect":[0,0,97,134],"offset":[0,0],"originalSize":[97,134],"capInsets":[0,0,0,0]}},{"__type__":"cc.SpriteFrame","content":{"name":"default_btn_pressed","texture":"b4P/PCArtIdIH38t6mlw8Y","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}},{"__type__":"cc.SpriteFrame","content":{"name":"default_btn_normal","texture":"e8Ueib+qJEhL6mXAHdnwbi","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}},{"__type__":"cc.SpriteFrame","content":{"name":"coin","texture":"7dCrBjPStG6KgxxCXMT7UT","rect":[0,0,160,160],"offset":[0,0],"originalSize":[160,160],"capInsets":[0,0,0,0]}},[{"__type__":"cc.Prefab","_name":"skull","data":{"__id__":1}},{"__type__":"cc.Node","_name":"skull","_children":[{"__id__":2}],"_components":[{"__type__":"fa348NaP0ZPiLsfr/XupaJH","node":{"__id__":1},"type":1}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"ffJ8x9l2BLarmxw5vG1D5L"},"fileId":"69vHoz2lhI76U7HfZi+MAa"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"Item","_parent":{"__id__":1},"_components":[{"__type__":"cc.Sprite","node":{"__id__":2},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"d0PYU6SWlAFa8DSPva+dRd"},"_sizeMode":0},{"__type__":"cc.BoxCollider","node":{"__id__":2},"tag":2,"_size":{"__type__":"cc.Size","width":40,"height":36}}],"_prefab":{"__type__":"cc.PrefabInfo","root":{"__id__":1},"asset":{"__uuid__":"ffJ8x9l2BLarmxw5vG1D5L"},"fileId":"c6PkK/Al5Copgj/mFHqSWk"},"_contentSize":{"__type__":"cc.Size","width":146,"height":141},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}}]]